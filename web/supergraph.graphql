schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
  mutation: Mutation
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type AbilityScore {
  _id: String!
  desc: [String]
  full_name: String
  index: String
  name: String
  skills(limit: Int = 100, skip: Int, sort: SortFindManySkillInput): [Skill!]!
  url: String
}

type Alignment {
  _id: String!
  abbreviation: String
  desc: String
  index: String
  name: String
  url: String
}

type Background {
  _id: String!
  bonds: BackgroundBonds
  feature: BackgroundFeature
  flaws: BackgroundFlaws
  ideals: BackgroundIdeals
  index: String
  language_options: BackgroundLanguage_options
  name: String
  personality_traits: BackgroundPersonality_traits
  starting_equipment: [BackgroundStarting_equipment]
  starting_equipment_options: [BackgroundStarting_equipment_options]
  starting_proficiencies(limit: Int = 100, skip: Int, sort: SortFindManyProficiencyInput): [Proficiency!]!
  url: String
}

type BackgroundBonds {
  choose: Float
  from: [String]
  type: String
}

type BackgroundFeature {
  desc: [String]
  name: String
}

type BackgroundFlaws {
  choose: Float
  from: [String]
  type: String
}

type BackgroundIdeals {
  choose: Float
  from: [BackgroundIdealsFrom]
  type: String
}

type BackgroundIdealsFrom {
  _id: MongoID
  alignments: [BackgroundIdealsFromAlignments]
  desc: String
}

type BackgroundIdealsFromAlignments {
  _id: MongoID
  index: String
  name: String
  url: String
}

type BackgroundLanguage_options {
  choose: Float
  from: [BackgroundLanguage_optionsFrom]
  type: String
}

type BackgroundLanguage_optionsFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type BackgroundPersonality_traits {
  choose: Float
  from: [String]
  type: String
}

type BackgroundStarting_equipment {
  equipment: BackgroundStarting_equipmentEquipment
  quantity: Float
}

type BackgroundStarting_equipmentEquipment {
  index: String
  name: String
  url: String
}

type BackgroundStarting_equipment_options {
  choose: Float
  from: [BackgroundStarting_equipment_optionsFrom]
  type: String
}

type BackgroundStarting_equipment_optionsFrom {
  equipment: BackgroundStarting_equipment_optionsFromEquipment
  quantity: Float
}

type BackgroundStarting_equipment_optionsFromEquipment {
  index: String
  name: String
  url: String
}

input CharObject {
  class: String!
  name: String!
  user: String!
}

type CharResponse {
  character: [Character!]
  errors: String
}

type Char_Spell {
  character: Float!
  createdAt: DateTime!
  id: Float!
  spell_id: String!
  updatedAt: DateTime!
}

input Char_SpellObject {
  charId: Float!
  spellName: String!
}

type Char_SpellResponse {
  char_spell: [Char_Spell!]
  errors: String
}

type Character {
  class: String!
  createdAt: DateTime!
  id: Float!
  name: String!
  updatedAt: DateTime!
  user: String!
}

type Class {
  _id: String!
  class_levels(limit: Int = 100, skip: Int, sort: SortFindManyLevelInput): [Level!]!
  hit_die: Float
  index: String
  multi_classing: ClassMulti_classing
  name: String
  proficiencies(limit: Int = 100, skip: Int, sort: SortFindManyProficiencyInput): [Proficiency!]!
  proficiency_choices: [ClassProficiency_choices]
  saving_throws: [ClassSaving_throws]
  spellcasting: ClassSpellcasting
  spells(limit: Int = 100, skip: Int, sort: SortFindManySpellInput): [Spell!]!
  starting_equipment: [ClassStarting_equipment]
  starting_equipment_options: [ClassStarting_equipment_options]
  subclasses: [ClassSubclasses]
  url: String
}

type ClassMulti_classing {
  prerequisite_options: ClassMulti_classingPrerequisite_options
  prerequisites: [ClassMulti_classingPrerequisites]
  proficiencies: [ClassMulti_classingProficiencies]
  proficiency_choices: [ClassMulti_classingProficiency_choices]
}

type ClassMulti_classingPrerequisite_options {
  choose: Float
  from: [ClassMulti_classingPrerequisite_optionsFrom]
  type: String
}

type ClassMulti_classingPrerequisite_optionsFrom {
  _id: MongoID
  ability_score: ClassMulti_classingPrerequisite_optionsFromAbility_score
  minimum_score: Float
}

type ClassMulti_classingPrerequisite_optionsFromAbility_score {
  index: String
  name: String
  url: String
}

type ClassMulti_classingPrerequisites {
  _id: MongoID
  ability_score: ClassMulti_classingPrerequisitesAbility_score
  minimum_score: Float
}

type ClassMulti_classingPrerequisitesAbility_score {
  index: String
  name: String
  url: String
}

type ClassMulti_classingProficiencies {
  _id: MongoID
  index: String
  name: String
  url: String
}

type ClassMulti_classingProficiency_choices {
  _id: MongoID
  choose: Float
  from: [ClassMulti_classingProficiency_choicesFrom]
  type: String
}

type ClassMulti_classingProficiency_choicesFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type ClassProficiency_choices {
  _id: MongoID
  choose: Float
  from: [ClassProficiency_choicesFrom]
  type: String
}

type ClassProficiency_choicesFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type ClassSaving_throws {
  _id: MongoID
  index: String
  name: String
  url: String
}

type ClassSpellcasting {
  info: [ClassSpellcastingInfo]
  level: Float
  spellcasting_ability: ClassSpellcastingSpellcasting_ability
}

type ClassSpellcastingInfo {
  _id: MongoID
  desc: [String]
  name: String
}

type ClassSpellcastingSpellcasting_ability {
  index: String
  name: String
  url: String
}

type ClassStarting_equipment {
  _id: MongoID
  equipment: ClassStarting_equipmentEquipment
  quantity: Float
}

type ClassStarting_equipmentEquipment {
  index: String
  name: String
  url: String
}

type ClassStarting_equipment_options {
  _id: MongoID
  choose: Float
  from: [ClassStarting_equipment_optionsFrom]
  type: String
}

type ClassStarting_equipment_optionsFrom {
  _id: MongoID
  equipment: ClassStarting_equipment_optionsFromEquipment
  quantity: Float
}

type ClassStarting_equipment_optionsFromEquipment {
  index: String
  name: String
  url: String
}

type ClassSubclasses {
  _id: MongoID
  index: String
  name: String
  url: String
}

type Condition {
  _id: String!
  desc: [String]
  index: String
  name: String
  url: String
}

type DamageType {
  _id: String!
  desc: [String]
  index: String
  name: String
  url: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Equipment {
  _id: String!
  armor_category: String
  armor_class: EquipmentArmor_class
  capacity: String
  category_range: String
  contents: [EquipmentContents]
  cost: EquipmentCost
  damage: EquipmentDamage
  desc: [String]
  equipment_category: EquipmentEquipment_category
  gear_category: EquipmentGear_category
  index: String
  name: String
  properties(limit: Int = 100, skip: Int, sort: SortFindManyWeaponPropertyInput): [WeaponProperty!]!
  quantity: Float
  range: EquipmentRange
  special: [String]
  speed: EquipmentSpeed
  stealth_disadvantage: Boolean
  str_minimum: Float
  throw_range: EquipmentThrow_range
  tool_category: String
  two_handed_damage: EquipmentTwo_handed_damage
  url: String
  vehicle_category: String
  weapon_category: String
  weapon_range: String
  weight: Float
}

type EquipmentArmor_class {
  base: Float
  dex_bonus: Boolean
  max_bonus: Float
}

type EquipmentCategory {
  _id: String!
  equipment(limit: Int = 100, skip: Int, sort: SortFindManyEquipmentInput): [Equipment!]!
  index: String
  name: String
  url: String
}

type EquipmentContents {
  _id: MongoID
  item: EquipmentContentsItem
  quantity: Float
}

type EquipmentContentsItem {
  index: String
  name: String
  url: String
}

type EquipmentCost {
  quantity: Float
  unit: String
}

type EquipmentDamage {
  damage_dice: String
  damage_type: EquipmentDamageDamage_type
}

type EquipmentDamageDamage_type {
  index: String
  name: String
  url: String
}

type EquipmentEquipment_category {
  index: String
  name: String
  url: String
}

type EquipmentGear_category {
  index: String
  name: String
  url: String
}

type EquipmentRange {
  long: Float
  normal: Float
}

type EquipmentSpeed {
  quantity: Float
  unit: String
}

type EquipmentThrow_range {
  long: Float
  normal: Float
}

type EquipmentTwo_handed_damage {
  damage_dice: String
  damage_type: EquipmentTwo_handed_damageDamage_type
}

type EquipmentTwo_handed_damageDamage_type {
  index: String
  name: String
  url: String
}

type Feat {
  _id: String!
  desc: [String]
  index: String
  name: String
  prerequisites: [FeatPrerequisites]
  url: String
}

type FeatPrerequisites {
  _id: MongoID
  ability_score: FeatPrerequisitesAbility_score
  minimum_score: Float
}

type FeatPrerequisitesAbility_score {
  index: String
  name: String
  url: String
}

type Feature {
  _id: String!
  choice: FeatureChoice
  class(skip: Int, sort: SortFindOneClassInput): Class
  desc: [String]
  feature_specific: FeatureFeature_specific
  index: String
  level: Float
  name: String
  parent: FeatureParent
  prerequisites: [FeaturePrerequisites]
  reference: String
  subclass(skip: Int, sort: SortFindOneSubclassInput): Subclass
  url: String
}

type FeatureChoice {
  choose: Float
  from: [FeatureChoiceFrom]
  type: String
}

type FeatureChoiceFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type FeatureFeature_specific {
  expertise_options: FeatureFeature_specificExpertise_options
  subfeature_options: FeatureFeature_specificSubfeature_options
}

type FeatureFeature_specificExpertise_options {
  choose: Float
  from: [FeatureFeature_specificExpertise_optionsFrom]
  type: String
}

type FeatureFeature_specificExpertise_optionsFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type FeatureFeature_specificSubfeature_options {
  choose: Float
  from: [FeatureFeature_specificSubfeature_optionsFrom]
  type: String
}

type FeatureFeature_specificSubfeature_optionsFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type FeatureParent {
  index: String
  name: String
  url: String
}

type FeaturePrerequisites {
  _id: MongoID
  level: Float
  type: String
}

input FilterFindManyAbilityScoreDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAbilityScoreFull_nameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAbilityScoreIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAbilityScoreInput {
  AND: [FilterFindManyAbilityScoreInput!]
  OR: [FilterFindManyAbilityScoreInput!]
  _id: String
  _operators: FilterFindManyAbilityScoreOperatorsInput
  desc: [String]
  full_name: String
  index: String
  name: String
  skills: [FilterFindManyAbilityScoreSkillsInput]
  url: String
}

input FilterFindManyAbilityScoreNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAbilityScoreOperatorsInput {
  _id: FilterFindManyAbilityScore_idOperatorsInput
  desc: FilterFindManyAbilityScoreDescOperatorsInput
  full_name: FilterFindManyAbilityScoreFull_nameOperatorsInput
  index: FilterFindManyAbilityScoreIndexOperatorsInput
  name: FilterFindManyAbilityScoreNameOperatorsInput
  url: FilterFindManyAbilityScoreUrlOperatorsInput
}

input FilterFindManyAbilityScoreSkillsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyAbilityScoreUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAbilityScore_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAlignmentAbbreviationOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAlignmentDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAlignmentIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAlignmentInput {
  AND: [FilterFindManyAlignmentInput!]
  OR: [FilterFindManyAlignmentInput!]
  _id: String
  _operators: FilterFindManyAlignmentOperatorsInput
  abbreviation: String
  desc: String
  index: String
  name: String
  url: String
}

input FilterFindManyAlignmentNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAlignmentOperatorsInput {
  _id: FilterFindManyAlignment_idOperatorsInput
  abbreviation: FilterFindManyAlignmentAbbreviationOperatorsInput
  desc: FilterFindManyAlignmentDescOperatorsInput
  index: FilterFindManyAlignmentIndexOperatorsInput
  name: FilterFindManyAlignmentNameOperatorsInput
  url: FilterFindManyAlignmentUrlOperatorsInput
}

input FilterFindManyAlignmentUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyAlignment_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundBondsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyBackgroundBondsFromOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundBondsInput {
  choose: Float
  from: [String]
  type: String
}

input FilterFindManyBackgroundBondsOperatorsInput {
  choose: FilterFindManyBackgroundBondsChooseOperatorsInput
  from: FilterFindManyBackgroundBondsFromOperatorsInput
  type: FilterFindManyBackgroundBondsTypeOperatorsInput
}

input FilterFindManyBackgroundBondsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundFeatureDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundFeatureInput {
  desc: [String]
  name: String
}

input FilterFindManyBackgroundFeatureNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundFeatureOperatorsInput {
  desc: FilterFindManyBackgroundFeatureDescOperatorsInput
  name: FilterFindManyBackgroundFeatureNameOperatorsInput
}

input FilterFindManyBackgroundFlawsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyBackgroundFlawsFromOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundFlawsInput {
  choose: Float
  from: [String]
  type: String
}

input FilterFindManyBackgroundFlawsOperatorsInput {
  choose: FilterFindManyBackgroundFlawsChooseOperatorsInput
  from: FilterFindManyBackgroundFlawsFromOperatorsInput
  type: FilterFindManyBackgroundFlawsTypeOperatorsInput
}

input FilterFindManyBackgroundFlawsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundIdealsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyBackgroundIdealsFromAlignmentsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyBackgroundIdealsFromInput {
  _id: MongoID
  alignments: [FilterFindManyBackgroundIdealsFromAlignmentsInput]
  desc: String
}

input FilterFindManyBackgroundIdealsInput {
  choose: Float
  from: [FilterFindManyBackgroundIdealsFromInput]
  type: String
}

input FilterFindManyBackgroundIdealsOperatorsInput {
  choose: FilterFindManyBackgroundIdealsChooseOperatorsInput
  type: FilterFindManyBackgroundIdealsTypeOperatorsInput
}

input FilterFindManyBackgroundIdealsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundInput {
  AND: [FilterFindManyBackgroundInput!]
  OR: [FilterFindManyBackgroundInput!]
  _id: String
  _operators: FilterFindManyBackgroundOperatorsInput
  bonds: FilterFindManyBackgroundBondsInput
  feature: FilterFindManyBackgroundFeatureInput
  flaws: FilterFindManyBackgroundFlawsInput
  ideals: FilterFindManyBackgroundIdealsInput
  index: String
  language_options: FilterFindManyBackgroundLanguage_optionsInput
  name: String
  personality_traits: FilterFindManyBackgroundPersonality_traitsInput
  starting_equipment: [FilterFindManyBackgroundStarting_equipmentInput]
  starting_equipment_options: [FilterFindManyBackgroundStarting_equipment_optionsInput]
  starting_proficiencies: [FilterFindManyBackgroundStarting_proficienciesInput]
  url: String
}

input FilterFindManyBackgroundLanguage_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyBackgroundLanguage_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyBackgroundLanguage_optionsInput {
  choose: Float
  from: [FilterFindManyBackgroundLanguage_optionsFromInput]
  type: String
}

input FilterFindManyBackgroundLanguage_optionsOperatorsInput {
  choose: FilterFindManyBackgroundLanguage_optionsChooseOperatorsInput
  type: FilterFindManyBackgroundLanguage_optionsTypeOperatorsInput
}

input FilterFindManyBackgroundLanguage_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundOperatorsInput {
  _id: FilterFindManyBackground_idOperatorsInput
  bonds: FilterFindManyBackgroundBondsOperatorsInput
  feature: FilterFindManyBackgroundFeatureOperatorsInput
  flaws: FilterFindManyBackgroundFlawsOperatorsInput
  ideals: FilterFindManyBackgroundIdealsOperatorsInput
  index: FilterFindManyBackgroundIndexOperatorsInput
  language_options: FilterFindManyBackgroundLanguage_optionsOperatorsInput
  name: FilterFindManyBackgroundNameOperatorsInput
  personality_traits: FilterFindManyBackgroundPersonality_traitsOperatorsInput
  url: FilterFindManyBackgroundUrlOperatorsInput
}

input FilterFindManyBackgroundPersonality_traitsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyBackgroundPersonality_traitsFromOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundPersonality_traitsInput {
  choose: Float
  from: [String]
  type: String
}

input FilterFindManyBackgroundPersonality_traitsOperatorsInput {
  choose: FilterFindManyBackgroundPersonality_traitsChooseOperatorsInput
  from: FilterFindManyBackgroundPersonality_traitsFromOperatorsInput
  type: FilterFindManyBackgroundPersonality_traitsTypeOperatorsInput
}

input FilterFindManyBackgroundPersonality_traitsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackgroundStarting_equipmentEquipmentInput {
  index: String
  name: String
  url: String
}

input FilterFindManyBackgroundStarting_equipmentInput {
  equipment: FilterFindManyBackgroundStarting_equipmentEquipmentInput
  quantity: Float
}

input FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentInput {
  index: String
  name: String
  url: String
}

input FilterFindManyBackgroundStarting_equipment_optionsFromInput {
  equipment: FilterFindManyBackgroundStarting_equipment_optionsFromEquipmentInput
  quantity: Float
}

input FilterFindManyBackgroundStarting_equipment_optionsInput {
  choose: Float
  from: [FilterFindManyBackgroundStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindManyBackgroundStarting_proficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyBackgroundUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyBackground_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClassClass_levelsOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClassHit_dieOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyClassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClassInput {
  AND: [FilterFindManyClassInput!]
  OR: [FilterFindManyClassInput!]
  _id: String
  _operators: FilterFindManyClassOperatorsInput
  class_levels: String
  hit_die: Float
  index: String
  multi_classing: FilterFindManyClassMulti_classingInput
  name: String
  proficiencies: [FilterFindManyClassProficienciesInput]
  proficiency_choices: [FilterFindManyClassProficiency_choicesInput]
  saving_throws: [FilterFindManyClassSaving_throwsInput]
  spellcasting: FilterFindManyClassSpellcastingInput
  spells: String
  starting_equipment: [FilterFindManyClassStarting_equipmentInput]
  starting_equipment_options: [FilterFindManyClassStarting_equipment_optionsInput]
  subclasses: [FilterFindManyClassSubclassesInput]
  url: String
}

input FilterFindManyClassMulti_classingInput {
  prerequisite_options: FilterFindManyClassMulti_classingPrerequisite_optionsInput
  prerequisites: [FilterFindManyClassMulti_classingPrerequisitesInput]
  proficiencies: [FilterFindManyClassMulti_classingProficienciesInput]
  proficiency_choices: [FilterFindManyClassMulti_classingProficiency_choicesInput]
}

input FilterFindManyClassMulti_classingOperatorsInput {
  prerequisite_options: FilterFindManyClassMulti_classingPrerequisite_optionsOperatorsInput
}

input FilterFindManyClassMulti_classingPrerequisite_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyClassMulti_classingPrerequisite_optionsFromAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindManyClassMulti_classingPrerequisite_optionsFromInput {
  _id: MongoID
  ability_score: FilterFindManyClassMulti_classingPrerequisite_optionsFromAbility_scoreInput
  minimum_score: Float
}

input FilterFindManyClassMulti_classingPrerequisite_optionsInput {
  choose: Float
  from: [FilterFindManyClassMulti_classingPrerequisite_optionsFromInput]
  type: String
}

input FilterFindManyClassMulti_classingPrerequisite_optionsOperatorsInput {
  choose: FilterFindManyClassMulti_classingPrerequisite_optionsChooseOperatorsInput
  type: FilterFindManyClassMulti_classingPrerequisite_optionsTypeOperatorsInput
}

input FilterFindManyClassMulti_classingPrerequisite_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClassMulti_classingPrerequisitesAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindManyClassMulti_classingPrerequisitesInput {
  _id: MongoID
  ability_score: FilterFindManyClassMulti_classingPrerequisitesAbility_scoreInput
  minimum_score: Float
}

input FilterFindManyClassMulti_classingProficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyClassMulti_classingProficiency_choicesFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyClassMulti_classingProficiency_choicesInput {
  _id: MongoID
  choose: Float
  from: [FilterFindManyClassMulti_classingProficiency_choicesFromInput]
  type: String
}

input FilterFindManyClassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClassOperatorsInput {
  _id: FilterFindManyClass_idOperatorsInput
  class_levels: FilterFindManyClassClass_levelsOperatorsInput
  hit_die: FilterFindManyClassHit_dieOperatorsInput
  index: FilterFindManyClassIndexOperatorsInput
  multi_classing: FilterFindManyClassMulti_classingOperatorsInput
  name: FilterFindManyClassNameOperatorsInput
  spellcasting: FilterFindManyClassSpellcastingOperatorsInput
  spells: FilterFindManyClassSpellsOperatorsInput
  url: FilterFindManyClassUrlOperatorsInput
}

input FilterFindManyClassProficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyClassProficiency_choicesFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyClassProficiency_choicesInput {
  _id: MongoID
  choose: Float
  from: [FilterFindManyClassProficiency_choicesFromInput]
  type: String
}

input FilterFindManyClassSaving_throwsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyClassSpellcastingInfoInput {
  _id: MongoID
  desc: [String]
  name: String
}

input FilterFindManyClassSpellcastingInput {
  info: [FilterFindManyClassSpellcastingInfoInput]
  level: Float
  spellcasting_ability: FilterFindManyClassSpellcastingSpellcasting_abilityInput
}

input FilterFindManyClassSpellcastingLevelOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyClassSpellcastingOperatorsInput {
  level: FilterFindManyClassSpellcastingLevelOperatorsInput
  spellcasting_ability: FilterFindManyClassSpellcastingSpellcasting_abilityOperatorsInput
}

input FilterFindManyClassSpellcastingSpellcasting_abilityIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClassSpellcastingSpellcasting_abilityInput {
  index: String
  name: String
  url: String
}

input FilterFindManyClassSpellcastingSpellcasting_abilityNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClassSpellcastingSpellcasting_abilityOperatorsInput {
  index: FilterFindManyClassSpellcastingSpellcasting_abilityIndexOperatorsInput
  name: FilterFindManyClassSpellcastingSpellcasting_abilityNameOperatorsInput
  url: FilterFindManyClassSpellcastingSpellcasting_abilityUrlOperatorsInput
}

input FilterFindManyClassSpellcastingSpellcasting_abilityUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClassSpellsOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClassStarting_equipmentEquipmentInput {
  index: String
  name: String
  url: String
}

input FilterFindManyClassStarting_equipmentInput {
  _id: MongoID
  equipment: FilterFindManyClassStarting_equipmentEquipmentInput
  quantity: Float
}

input FilterFindManyClassStarting_equipment_optionsFromEquipmentInput {
  index: String
  name: String
  url: String
}

input FilterFindManyClassStarting_equipment_optionsFromInput {
  _id: MongoID
  equipment: FilterFindManyClassStarting_equipment_optionsFromEquipmentInput
  quantity: Float
}

input FilterFindManyClassStarting_equipment_optionsInput {
  _id: MongoID
  choose: Float
  from: [FilterFindManyClassStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindManyClassSubclassesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyClassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyClass_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyConditionDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyConditionIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyConditionInput {
  AND: [FilterFindManyConditionInput!]
  OR: [FilterFindManyConditionInput!]
  _id: String
  _operators: FilterFindManyConditionOperatorsInput
  desc: [String]
  index: String
  name: String
  url: String
}

input FilterFindManyConditionNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyConditionOperatorsInput {
  _id: FilterFindManyCondition_idOperatorsInput
  desc: FilterFindManyConditionDescOperatorsInput
  index: FilterFindManyConditionIndexOperatorsInput
  name: FilterFindManyConditionNameOperatorsInput
  url: FilterFindManyConditionUrlOperatorsInput
}

input FilterFindManyConditionUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyCondition_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyDamageTypeDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyDamageTypeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyDamageTypeInput {
  AND: [FilterFindManyDamageTypeInput!]
  OR: [FilterFindManyDamageTypeInput!]
  _id: String
  _operators: FilterFindManyDamageTypeOperatorsInput
  desc: [String]
  index: String
  name: String
  url: String
}

input FilterFindManyDamageTypeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyDamageTypeOperatorsInput {
  _id: FilterFindManyDamageType_idOperatorsInput
  desc: FilterFindManyDamageTypeDescOperatorsInput
  index: FilterFindManyDamageTypeIndexOperatorsInput
  name: FilterFindManyDamageTypeNameOperatorsInput
  url: FilterFindManyDamageTypeUrlOperatorsInput
}

input FilterFindManyDamageTypeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyDamageType_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentArmor_categoryOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentArmor_classBaseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentArmor_classDex_bonusOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindManyEquipmentArmor_classInput {
  base: Float
  dex_bonus: Boolean
  max_bonus: Float
}

input FilterFindManyEquipmentArmor_classMax_bonusOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentArmor_classOperatorsInput {
  base: FilterFindManyEquipmentArmor_classBaseOperatorsInput
  dex_bonus: FilterFindManyEquipmentArmor_classDex_bonusOperatorsInput
  max_bonus: FilterFindManyEquipmentArmor_classMax_bonusOperatorsInput
}

input FilterFindManyEquipmentCapacityOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentCategoryEquipmentInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyEquipmentCategoryIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentCategoryInput {
  AND: [FilterFindManyEquipmentCategoryInput!]
  OR: [FilterFindManyEquipmentCategoryInput!]
  _id: String
  _operators: FilterFindManyEquipmentCategoryOperatorsInput
  equipment: [FilterFindManyEquipmentCategoryEquipmentInput]
  index: String
  name: String
  url: String
}

input FilterFindManyEquipmentCategoryNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentCategoryOperatorsInput {
  _id: FilterFindManyEquipmentCategory_idOperatorsInput
  index: FilterFindManyEquipmentCategoryIndexOperatorsInput
  name: FilterFindManyEquipmentCategoryNameOperatorsInput
  url: FilterFindManyEquipmentCategoryUrlOperatorsInput
}

input FilterFindManyEquipmentCategoryUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentCategory_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentCategory_rangeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentContentsInput {
  _id: MongoID
  item: FilterFindManyEquipmentContentsItemInput
  quantity: Float
}

input FilterFindManyEquipmentContentsItemInput {
  index: String
  name: String
  url: String
}

input FilterFindManyEquipmentCostInput {
  quantity: Float
  unit: String
}

input FilterFindManyEquipmentCostOperatorsInput {
  quantity: FilterFindManyEquipmentCostQuantityOperatorsInput
  unit: FilterFindManyEquipmentCostUnitOperatorsInput
}

input FilterFindManyEquipmentCostQuantityOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentCostUnitOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentDamageDamage_diceOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentDamageDamage_typeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentDamageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindManyEquipmentDamageDamage_typeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentDamageDamage_typeOperatorsInput {
  index: FilterFindManyEquipmentDamageDamage_typeIndexOperatorsInput
  name: FilterFindManyEquipmentDamageDamage_typeNameOperatorsInput
  url: FilterFindManyEquipmentDamageDamage_typeUrlOperatorsInput
}

input FilterFindManyEquipmentDamageDamage_typeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentDamageInput {
  damage_dice: String
  damage_type: FilterFindManyEquipmentDamageDamage_typeInput
}

input FilterFindManyEquipmentDamageOperatorsInput {
  damage_dice: FilterFindManyEquipmentDamageDamage_diceOperatorsInput
  damage_type: FilterFindManyEquipmentDamageDamage_typeOperatorsInput
}

input FilterFindManyEquipmentDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentEquipment_categoryIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentEquipment_categoryInput {
  index: String
  name: String
  url: String
}

input FilterFindManyEquipmentEquipment_categoryNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentEquipment_categoryOperatorsInput {
  index: FilterFindManyEquipmentEquipment_categoryIndexOperatorsInput
  name: FilterFindManyEquipmentEquipment_categoryNameOperatorsInput
  url: FilterFindManyEquipmentEquipment_categoryUrlOperatorsInput
}

input FilterFindManyEquipmentEquipment_categoryUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentGear_categoryIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentGear_categoryInput {
  index: String
  name: String
  url: String
}

input FilterFindManyEquipmentGear_categoryNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentGear_categoryOperatorsInput {
  index: FilterFindManyEquipmentGear_categoryIndexOperatorsInput
  name: FilterFindManyEquipmentGear_categoryNameOperatorsInput
  url: FilterFindManyEquipmentGear_categoryUrlOperatorsInput
}

input FilterFindManyEquipmentGear_categoryUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentInput {
  AND: [FilterFindManyEquipmentInput!]
  OR: [FilterFindManyEquipmentInput!]
  _id: String
  _operators: FilterFindManyEquipmentOperatorsInput
  armor_category: String
  armor_class: FilterFindManyEquipmentArmor_classInput
  capacity: String
  category_range: String
  contents: [FilterFindManyEquipmentContentsInput]
  cost: FilterFindManyEquipmentCostInput
  damage: FilterFindManyEquipmentDamageInput
  desc: [String]
  equipment_category: FilterFindManyEquipmentEquipment_categoryInput
  gear_category: FilterFindManyEquipmentGear_categoryInput
  index: String
  name: String
  properties: [FilterFindManyEquipmentPropertiesInput]
  quantity: Float
  range: FilterFindManyEquipmentRangeInput
  special: [String]
  speed: FilterFindManyEquipmentSpeedInput
  stealth_disadvantage: Boolean
  str_minimum: Float
  throw_range: FilterFindManyEquipmentThrow_rangeInput
  tool_category: String
  two_handed_damage: FilterFindManyEquipmentTwo_handed_damageInput
  url: String
  vehicle_category: String
  weapon_category: String
  weapon_range: String
  weight: Float
}

input FilterFindManyEquipmentNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentOperatorsInput {
  _id: FilterFindManyEquipment_idOperatorsInput
  armor_category: FilterFindManyEquipmentArmor_categoryOperatorsInput
  armor_class: FilterFindManyEquipmentArmor_classOperatorsInput
  capacity: FilterFindManyEquipmentCapacityOperatorsInput
  category_range: FilterFindManyEquipmentCategory_rangeOperatorsInput
  cost: FilterFindManyEquipmentCostOperatorsInput
  damage: FilterFindManyEquipmentDamageOperatorsInput
  desc: FilterFindManyEquipmentDescOperatorsInput
  equipment_category: FilterFindManyEquipmentEquipment_categoryOperatorsInput
  gear_category: FilterFindManyEquipmentGear_categoryOperatorsInput
  index: FilterFindManyEquipmentIndexOperatorsInput
  name: FilterFindManyEquipmentNameOperatorsInput
  quantity: FilterFindManyEquipmentQuantityOperatorsInput
  range: FilterFindManyEquipmentRangeOperatorsInput
  special: FilterFindManyEquipmentSpecialOperatorsInput
  speed: FilterFindManyEquipmentSpeedOperatorsInput
  stealth_disadvantage: FilterFindManyEquipmentStealth_disadvantageOperatorsInput
  str_minimum: FilterFindManyEquipmentStr_minimumOperatorsInput
  throw_range: FilterFindManyEquipmentThrow_rangeOperatorsInput
  tool_category: FilterFindManyEquipmentTool_categoryOperatorsInput
  two_handed_damage: FilterFindManyEquipmentTwo_handed_damageOperatorsInput
  url: FilterFindManyEquipmentUrlOperatorsInput
  vehicle_category: FilterFindManyEquipmentVehicle_categoryOperatorsInput
  weapon_category: FilterFindManyEquipmentWeapon_categoryOperatorsInput
  weapon_range: FilterFindManyEquipmentWeapon_rangeOperatorsInput
  weight: FilterFindManyEquipmentWeightOperatorsInput
}

input FilterFindManyEquipmentPropertiesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyEquipmentQuantityOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentRangeInput {
  long: Float
  normal: Float
}

input FilterFindManyEquipmentRangeLongOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentRangeNormalOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentRangeOperatorsInput {
  long: FilterFindManyEquipmentRangeLongOperatorsInput
  normal: FilterFindManyEquipmentRangeNormalOperatorsInput
}

input FilterFindManyEquipmentSpecialOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentSpeedInput {
  quantity: Float
  unit: String
}

input FilterFindManyEquipmentSpeedOperatorsInput {
  quantity: FilterFindManyEquipmentSpeedQuantityOperatorsInput
  unit: FilterFindManyEquipmentSpeedUnitOperatorsInput
}

input FilterFindManyEquipmentSpeedQuantityOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentSpeedUnitOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentStealth_disadvantageOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindManyEquipmentStr_minimumOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentThrow_rangeInput {
  long: Float
  normal: Float
}

input FilterFindManyEquipmentThrow_rangeLongOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentThrow_rangeNormalOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipmentThrow_rangeOperatorsInput {
  long: FilterFindManyEquipmentThrow_rangeLongOperatorsInput
  normal: FilterFindManyEquipmentThrow_rangeNormalOperatorsInput
}

input FilterFindManyEquipmentTool_categoryOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentTwo_handed_damageDamage_diceOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentTwo_handed_damageDamage_typeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentTwo_handed_damageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindManyEquipmentTwo_handed_damageDamage_typeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentTwo_handed_damageDamage_typeOperatorsInput {
  index: FilterFindManyEquipmentTwo_handed_damageDamage_typeIndexOperatorsInput
  name: FilterFindManyEquipmentTwo_handed_damageDamage_typeNameOperatorsInput
  url: FilterFindManyEquipmentTwo_handed_damageDamage_typeUrlOperatorsInput
}

input FilterFindManyEquipmentTwo_handed_damageDamage_typeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentTwo_handed_damageInput {
  damage_dice: String
  damage_type: FilterFindManyEquipmentTwo_handed_damageDamage_typeInput
}

input FilterFindManyEquipmentTwo_handed_damageOperatorsInput {
  damage_dice: FilterFindManyEquipmentTwo_handed_damageDamage_diceOperatorsInput
  damage_type: FilterFindManyEquipmentTwo_handed_damageDamage_typeOperatorsInput
}

input FilterFindManyEquipmentUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentVehicle_categoryOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentWeapon_categoryOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentWeapon_rangeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyEquipmentWeightOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyEquipment_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatInput {
  AND: [FilterFindManyFeatInput!]
  OR: [FilterFindManyFeatInput!]
  _id: String
  _operators: FilterFindManyFeatOperatorsInput
  desc: [String]
  index: String
  name: String
  prerequisites: [FilterFindManyFeatPrerequisitesInput]
  url: String
}

input FilterFindManyFeatNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatOperatorsInput {
  _id: FilterFindManyFeat_idOperatorsInput
  desc: FilterFindManyFeatDescOperatorsInput
  index: FilterFindManyFeatIndexOperatorsInput
  name: FilterFindManyFeatNameOperatorsInput
  url: FilterFindManyFeatUrlOperatorsInput
}

input FilterFindManyFeatPrerequisitesAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindManyFeatPrerequisitesInput {
  _id: MongoID
  ability_score: FilterFindManyFeatPrerequisitesAbility_scoreInput
  minimum_score: Float
}

input FilterFindManyFeatUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeat_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureChoiceChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyFeatureChoiceFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyFeatureChoiceInput {
  choose: Float
  from: [FilterFindManyFeatureChoiceFromInput]
  type: String
}

input FilterFindManyFeatureChoiceOperatorsInput {
  choose: FilterFindManyFeatureChoiceChooseOperatorsInput
  type: FilterFindManyFeatureChoiceTypeOperatorsInput
}

input FilterFindManyFeatureChoiceTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureClassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureClassInput {
  index: String
  name: String
  url: String
}

input FilterFindManyFeatureClassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureClassOperatorsInput {
  index: FilterFindManyFeatureClassIndexOperatorsInput
  name: FilterFindManyFeatureClassNameOperatorsInput
  url: FilterFindManyFeatureClassUrlOperatorsInput
}

input FilterFindManyFeatureClassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureFeature_specificExpertise_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyFeatureFeature_specificExpertise_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyFeatureFeature_specificExpertise_optionsInput {
  choose: Float
  from: [FilterFindManyFeatureFeature_specificExpertise_optionsFromInput]
  type: String
}

input FilterFindManyFeatureFeature_specificExpertise_optionsOperatorsInput {
  choose: FilterFindManyFeatureFeature_specificExpertise_optionsChooseOperatorsInput
  type: FilterFindManyFeatureFeature_specificExpertise_optionsTypeOperatorsInput
}

input FilterFindManyFeatureFeature_specificExpertise_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureFeature_specificInput {
  expertise_options: FilterFindManyFeatureFeature_specificExpertise_optionsInput
  subfeature_options: FilterFindManyFeatureFeature_specificSubfeature_optionsInput
}

input FilterFindManyFeatureFeature_specificOperatorsInput {
  expertise_options: FilterFindManyFeatureFeature_specificExpertise_optionsOperatorsInput
  subfeature_options: FilterFindManyFeatureFeature_specificSubfeature_optionsOperatorsInput
}

input FilterFindManyFeatureFeature_specificSubfeature_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyFeatureFeature_specificSubfeature_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyFeatureFeature_specificSubfeature_optionsInput {
  choose: Float
  from: [FilterFindManyFeatureFeature_specificSubfeature_optionsFromInput]
  type: String
}

input FilterFindManyFeatureFeature_specificSubfeature_optionsOperatorsInput {
  choose: FilterFindManyFeatureFeature_specificSubfeature_optionsChooseOperatorsInput
  type: FilterFindManyFeatureFeature_specificSubfeature_optionsTypeOperatorsInput
}

input FilterFindManyFeatureFeature_specificSubfeature_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureInput {
  AND: [FilterFindManyFeatureInput!]
  OR: [FilterFindManyFeatureInput!]
  _id: String
  _operators: FilterFindManyFeatureOperatorsInput
  choice: FilterFindManyFeatureChoiceInput
  class: FilterFindManyFeatureClassInput
  desc: [String]
  feature_specific: FilterFindManyFeatureFeature_specificInput
  index: String
  level: Float
  name: String
  parent: FilterFindManyFeatureParentInput
  prerequisites: [FilterFindManyFeaturePrerequisitesInput]
  reference: String
  subclass: FilterFindManyFeatureSubclassInput
  url: String
}

input FilterFindManyFeatureLevelOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyFeatureNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureOperatorsInput {
  _id: FilterFindManyFeature_idOperatorsInput
  choice: FilterFindManyFeatureChoiceOperatorsInput
  class: FilterFindManyFeatureClassOperatorsInput
  desc: FilterFindManyFeatureDescOperatorsInput
  feature_specific: FilterFindManyFeatureFeature_specificOperatorsInput
  index: FilterFindManyFeatureIndexOperatorsInput
  level: FilterFindManyFeatureLevelOperatorsInput
  name: FilterFindManyFeatureNameOperatorsInput
  parent: FilterFindManyFeatureParentOperatorsInput
  reference: FilterFindManyFeatureReferenceOperatorsInput
  subclass: FilterFindManyFeatureSubclassOperatorsInput
  url: FilterFindManyFeatureUrlOperatorsInput
}

input FilterFindManyFeatureParentIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureParentInput {
  index: String
  name: String
  url: String
}

input FilterFindManyFeatureParentNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureParentOperatorsInput {
  index: FilterFindManyFeatureParentIndexOperatorsInput
  name: FilterFindManyFeatureParentNameOperatorsInput
  url: FilterFindManyFeatureParentUrlOperatorsInput
}

input FilterFindManyFeatureParentUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeaturePrerequisitesInput {
  _id: MongoID
  level: Float
  type: String
}

input FilterFindManyFeatureReferenceOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureSubclassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureSubclassInput {
  index: String
  name: String
  url: String
}

input FilterFindManyFeatureSubclassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureSubclassOperatorsInput {
  index: FilterFindManyFeatureSubclassIndexOperatorsInput
  name: FilterFindManyFeatureSubclassNameOperatorsInput
  url: FilterFindManyFeatureSubclassUrlOperatorsInput
}

input FilterFindManyFeatureSubclassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeatureUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyFeature_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLanguageDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLanguageIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLanguageInput {
  AND: [FilterFindManyLanguageInput!]
  OR: [FilterFindManyLanguageInput!]
  _id: String
  _operators: FilterFindManyLanguageOperatorsInput
  desc: String
  index: String
  name: String
  script: String
  type: String
  typical_speakers: [String]
  url: String
}

input FilterFindManyLanguageNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLanguageOperatorsInput {
  _id: FilterFindManyLanguage_idOperatorsInput
  desc: FilterFindManyLanguageDescOperatorsInput
  index: FilterFindManyLanguageIndexOperatorsInput
  name: FilterFindManyLanguageNameOperatorsInput
  script: FilterFindManyLanguageScriptOperatorsInput
  type: FilterFindManyLanguageTypeOperatorsInput
  typical_speakers: FilterFindManyLanguageTypical_speakersOperatorsInput
  url: FilterFindManyLanguageUrlOperatorsInput
}

input FilterFindManyLanguageScriptOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLanguageTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLanguageTypical_speakersOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLanguageUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLanguage_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLevelAbility_score_bonusesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLevelClassInput {
  index: String
  name: String
  url: String
}

input FilterFindManyLevelClassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLevelClassOperatorsInput {
  index: FilterFindManyLevelClassIndexOperatorsInput
  name: FilterFindManyLevelClassNameOperatorsInput
  url: FilterFindManyLevelClassUrlOperatorsInput
}

input FilterFindManyLevelClassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLevelClass_specificAction_surgesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificArcane_recovery_levelsOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificAura_rangeOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificBardic_inspiration_dieOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificBrutal_critical_diceOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificChannel_divinity_chargesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificCreating_spell_slotsInput {
  _id: MongoID
  sorcery_point_cost: Float
  spell_slot_level: Float
}

input FilterFindManyLevelClass_specificDestroy_undead_crOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificExtra_attacksOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificFavored_enemiesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificFavored_terrainOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificIndomitable_usesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificInput {
  action_surges: Float
  arcane_recovery_levels: Float
  aura_range: Float
  bardic_inspiration_die: Float
  brutal_critical_dice: Float
  channel_divinity_charges: Float
  creating_spell_slots: [FilterFindManyLevelClass_specificCreating_spell_slotsInput]
  destroy_undead_cr: Float
  extra_attacks: Float
  favored_enemies: Float
  favored_terrain: Float
  indomitable_uses: Float
  invocations_known: Float
  ki_points: Float
  magical_secrets_max_5: Float
  magical_secrets_max_7: Float
  magical_secrets_max_9: Float
  martial_arts: FilterFindManyLevelClass_specificMartial_artsInput
  metamagic_known: Float
  mystic_arcanum_level_6: Float
  mystic_arcanum_level_7: Float
  mystic_arcanum_level_8: Float
  mystic_arcanum_level_9: Float
  rage_count: Float
  rage_damage_bonus: Float
  sneak_attack: FilterFindManyLevelClass_specificSneak_attackInput
  song_of_rest_die: Float
  sorcery_points: Float
  unarmored_movement: Float
  wild_shape_fly: Boolean
  wild_shape_max_cr: Float
  wild_shape_swim: Boolean
}

input FilterFindManyLevelClass_specificInvocations_knownOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificKi_pointsOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMagical_secrets_max_5OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMagical_secrets_max_7OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMagical_secrets_max_9OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMartial_artsDice_countOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMartial_artsDice_valueOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMartial_artsInput {
  dice_count: Float
  dice_value: Float
}

input FilterFindManyLevelClass_specificMartial_artsOperatorsInput {
  dice_count: FilterFindManyLevelClass_specificMartial_artsDice_countOperatorsInput
  dice_value: FilterFindManyLevelClass_specificMartial_artsDice_valueOperatorsInput
}

input FilterFindManyLevelClass_specificMetamagic_knownOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMystic_arcanum_level_6OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMystic_arcanum_level_7OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMystic_arcanum_level_8OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificMystic_arcanum_level_9OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificOperatorsInput {
  action_surges: FilterFindManyLevelClass_specificAction_surgesOperatorsInput
  arcane_recovery_levels: FilterFindManyLevelClass_specificArcane_recovery_levelsOperatorsInput
  aura_range: FilterFindManyLevelClass_specificAura_rangeOperatorsInput
  bardic_inspiration_die: FilterFindManyLevelClass_specificBardic_inspiration_dieOperatorsInput
  brutal_critical_dice: FilterFindManyLevelClass_specificBrutal_critical_diceOperatorsInput
  channel_divinity_charges: FilterFindManyLevelClass_specificChannel_divinity_chargesOperatorsInput
  destroy_undead_cr: FilterFindManyLevelClass_specificDestroy_undead_crOperatorsInput
  extra_attacks: FilterFindManyLevelClass_specificExtra_attacksOperatorsInput
  favored_enemies: FilterFindManyLevelClass_specificFavored_enemiesOperatorsInput
  favored_terrain: FilterFindManyLevelClass_specificFavored_terrainOperatorsInput
  indomitable_uses: FilterFindManyLevelClass_specificIndomitable_usesOperatorsInput
  invocations_known: FilterFindManyLevelClass_specificInvocations_knownOperatorsInput
  ki_points: FilterFindManyLevelClass_specificKi_pointsOperatorsInput
  magical_secrets_max_5: FilterFindManyLevelClass_specificMagical_secrets_max_5OperatorsInput
  magical_secrets_max_7: FilterFindManyLevelClass_specificMagical_secrets_max_7OperatorsInput
  magical_secrets_max_9: FilterFindManyLevelClass_specificMagical_secrets_max_9OperatorsInput
  martial_arts: FilterFindManyLevelClass_specificMartial_artsOperatorsInput
  metamagic_known: FilterFindManyLevelClass_specificMetamagic_knownOperatorsInput
  mystic_arcanum_level_6: FilterFindManyLevelClass_specificMystic_arcanum_level_6OperatorsInput
  mystic_arcanum_level_7: FilterFindManyLevelClass_specificMystic_arcanum_level_7OperatorsInput
  mystic_arcanum_level_8: FilterFindManyLevelClass_specificMystic_arcanum_level_8OperatorsInput
  mystic_arcanum_level_9: FilterFindManyLevelClass_specificMystic_arcanum_level_9OperatorsInput
  rage_count: FilterFindManyLevelClass_specificRage_countOperatorsInput
  rage_damage_bonus: FilterFindManyLevelClass_specificRage_damage_bonusOperatorsInput
  sneak_attack: FilterFindManyLevelClass_specificSneak_attackOperatorsInput
  song_of_rest_die: FilterFindManyLevelClass_specificSong_of_rest_dieOperatorsInput
  sorcery_points: FilterFindManyLevelClass_specificSorcery_pointsOperatorsInput
  unarmored_movement: FilterFindManyLevelClass_specificUnarmored_movementOperatorsInput
  wild_shape_fly: FilterFindManyLevelClass_specificWild_shape_flyOperatorsInput
  wild_shape_max_cr: FilterFindManyLevelClass_specificWild_shape_max_crOperatorsInput
  wild_shape_swim: FilterFindManyLevelClass_specificWild_shape_swimOperatorsInput
}

input FilterFindManyLevelClass_specificRage_countOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificRage_damage_bonusOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificSneak_attackDice_countOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificSneak_attackDice_valueOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificSneak_attackInput {
  dice_count: Float
  dice_value: Float
}

input FilterFindManyLevelClass_specificSneak_attackOperatorsInput {
  dice_count: FilterFindManyLevelClass_specificSneak_attackDice_countOperatorsInput
  dice_value: FilterFindManyLevelClass_specificSneak_attackDice_valueOperatorsInput
}

input FilterFindManyLevelClass_specificSong_of_rest_dieOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificSorcery_pointsOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificUnarmored_movementOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificWild_shape_flyOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindManyLevelClass_specificWild_shape_max_crOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelClass_specificWild_shape_swimOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindManyLevelFeaturesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyLevelIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLevelInput {
  AND: [FilterFindManyLevelInput!]
  OR: [FilterFindManyLevelInput!]
  _id: String
  _operators: FilterFindManyLevelOperatorsInput
  ability_score_bonuses: Float
  class: FilterFindManyLevelClassInput
  class_specific: FilterFindManyLevelClass_specificInput
  features: [FilterFindManyLevelFeaturesInput]
  index: String
  level: Float
  prof_bonus: Float
  spellcasting: FilterFindManyLevelSpellcastingInput
  subclass: FilterFindManyLevelSubclassInput
  subclass_specific: FilterFindManyLevelSubclass_specificInput
  url: String
}

input FilterFindManyLevelLevelOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelOperatorsInput {
  _id: FilterFindManyLevel_idOperatorsInput
  ability_score_bonuses: FilterFindManyLevelAbility_score_bonusesOperatorsInput
  class: FilterFindManyLevelClassOperatorsInput
  class_specific: FilterFindManyLevelClass_specificOperatorsInput
  index: FilterFindManyLevelIndexOperatorsInput
  level: FilterFindManyLevelLevelOperatorsInput
  prof_bonus: FilterFindManyLevelProf_bonusOperatorsInput
  spellcasting: FilterFindManyLevelSpellcastingOperatorsInput
  subclass: FilterFindManyLevelSubclassOperatorsInput
  subclass_specific: FilterFindManyLevelSubclass_specificOperatorsInput
  url: FilterFindManyLevelUrlOperatorsInput
}

input FilterFindManyLevelProf_bonusOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingCantrips_knownOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingInput {
  cantrips_known: Float
  spell_slots_level_1: Float
  spell_slots_level_2: Float
  spell_slots_level_3: Float
  spell_slots_level_4: Float
  spell_slots_level_5: Float
  spell_slots_level_6: Float
  spell_slots_level_7: Float
  spell_slots_level_8: Float
  spell_slots_level_9: Float
  spells_known: Float
}

input FilterFindManyLevelSpellcastingOperatorsInput {
  cantrips_known: FilterFindManyLevelSpellcastingCantrips_knownOperatorsInput
  spell_slots_level_1: FilterFindManyLevelSpellcastingSpell_slots_level_1OperatorsInput
  spell_slots_level_2: FilterFindManyLevelSpellcastingSpell_slots_level_2OperatorsInput
  spell_slots_level_3: FilterFindManyLevelSpellcastingSpell_slots_level_3OperatorsInput
  spell_slots_level_4: FilterFindManyLevelSpellcastingSpell_slots_level_4OperatorsInput
  spell_slots_level_5: FilterFindManyLevelSpellcastingSpell_slots_level_5OperatorsInput
  spell_slots_level_6: FilterFindManyLevelSpellcastingSpell_slots_level_6OperatorsInput
  spell_slots_level_7: FilterFindManyLevelSpellcastingSpell_slots_level_7OperatorsInput
  spell_slots_level_8: FilterFindManyLevelSpellcastingSpell_slots_level_8OperatorsInput
  spell_slots_level_9: FilterFindManyLevelSpellcastingSpell_slots_level_9OperatorsInput
  spells_known: FilterFindManyLevelSpellcastingSpells_knownOperatorsInput
}

input FilterFindManyLevelSpellcastingSpell_slots_level_1OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingSpell_slots_level_2OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingSpell_slots_level_3OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingSpell_slots_level_4OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingSpell_slots_level_5OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingSpell_slots_level_6OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingSpell_slots_level_7OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingSpell_slots_level_8OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingSpell_slots_level_9OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSpellcastingSpells_knownOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSubclassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLevelSubclassInput {
  index: String
  name: String
  url: String
}

input FilterFindManyLevelSubclassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLevelSubclassOperatorsInput {
  index: FilterFindManyLevelSubclassIndexOperatorsInput
  name: FilterFindManyLevelSubclassNameOperatorsInput
  url: FilterFindManyLevelSubclassUrlOperatorsInput
}

input FilterFindManyLevelSubclassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLevelSubclass_specificAdditional_magical_secrets_max_lvlOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSubclass_specificAura_rangeOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyLevelSubclass_specificInput {
  additional_magical_secrets_max_lvl: Float
  aura_range: Float
}

input FilterFindManyLevelSubclass_specificOperatorsInput {
  additional_magical_secrets_max_lvl: FilterFindManyLevelSubclass_specificAdditional_magical_secrets_max_lvlOperatorsInput
  aura_range: FilterFindManyLevelSubclass_specificAura_rangeOperatorsInput
}

input FilterFindManyLevelUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyLevel_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicItemDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicItemEquipment_categoryIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicItemEquipment_categoryInput {
  index: String
  name: String
  url: String
}

input FilterFindManyMagicItemEquipment_categoryNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicItemEquipment_categoryOperatorsInput {
  index: FilterFindManyMagicItemEquipment_categoryIndexOperatorsInput
  name: FilterFindManyMagicItemEquipment_categoryNameOperatorsInput
  url: FilterFindManyMagicItemEquipment_categoryUrlOperatorsInput
}

input FilterFindManyMagicItemEquipment_categoryUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicItemIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicItemInput {
  AND: [FilterFindManyMagicItemInput!]
  OR: [FilterFindManyMagicItemInput!]
  _id: String
  _operators: FilterFindManyMagicItemOperatorsInput
  desc: [String]
  equipment_category: FilterFindManyMagicItemEquipment_categoryInput
  index: String
  name: String
  url: String
}

input FilterFindManyMagicItemNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicItemOperatorsInput {
  _id: FilterFindManyMagicItem_idOperatorsInput
  desc: FilterFindManyMagicItemDescOperatorsInput
  equipment_category: FilterFindManyMagicItemEquipment_categoryOperatorsInput
  index: FilterFindManyMagicItemIndexOperatorsInput
  name: FilterFindManyMagicItemNameOperatorsInput
  url: FilterFindManyMagicItemUrlOperatorsInput
}

input FilterFindManyMagicItemUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicItem_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicSchoolDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicSchoolIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicSchoolInput {
  AND: [FilterFindManyMagicSchoolInput!]
  OR: [FilterFindManyMagicSchoolInput!]
  _id: String
  _operators: FilterFindManyMagicSchoolOperatorsInput
  desc: String
  index: String
  name: String
  url: String
}

input FilterFindManyMagicSchoolNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicSchoolOperatorsInput {
  _id: FilterFindManyMagicSchool_idOperatorsInput
  desc: FilterFindManyMagicSchoolDescOperatorsInput
  index: FilterFindManyMagicSchoolIndexOperatorsInput
  name: FilterFindManyMagicSchoolNameOperatorsInput
  url: FilterFindManyMagicSchoolUrlOperatorsInput
}

input FilterFindManyMagicSchoolUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMagicSchool_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterActionsDamageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindManyMonsterActionsDamageInput {
  _id: MongoID
  damage_dice: String
  damage_type: FilterFindManyMonsterActionsDamageDamage_typeInput
}

input FilterFindManyMonsterActionsInput {
  _id: MongoID
  attack_bonus: Float
  damage: [FilterFindManyMonsterActionsDamageInput]
  desc: String
  name: String
}

input FilterFindManyMonsterAlignmentOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterArmor_classOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterChallenge_ratingOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterCharismaOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterCondition_immunitiesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyMonsterConstitutionOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterDexterityOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterFormsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyMonsterHit_diceOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterHit_pointsOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterInput {
  AND: [FilterFindManyMonsterInput!]
  OR: [FilterFindManyMonsterInput!]
  _id: String
  _operators: FilterFindManyMonsterOperatorsInput
  actions: [FilterFindManyMonsterActionsInput]
  alignment: String
  armor_class: Float
  challenge_rating: Float
  charisma: Float
  condition_immunities: [FilterFindManyMonsterCondition_immunitiesInput]
  constitution: Float
  damage_immunities: [String]
  damage_resistances: [String]
  damage_vulnerabilities: [String]
  dexterity: Float
  forms: [FilterFindManyMonsterFormsInput]
  hit_dice: String
  hit_points: Float
  index: String
  intelligence: Float
  languages: String
  legendary_actions: [FilterFindManyMonsterLegendary_actionsInput]
  name: String
  proficiencies: [FilterFindManyMonsterProficienciesInput]
  reactions: [FilterFindManyMonsterReactionsInput]
  senses: FilterFindManyMonsterSensesInput
  size: String
  special_abilities: [FilterFindManyMonsterSpecial_abilitiesInput]
  speed: FilterFindManyMonsterSpeedInput
  strength: Float
  subtype: String
  type: String
  url: String
  wisdom: Float
  xp: Float
}

input FilterFindManyMonsterIntelligenceOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterLanguagesOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterLegendary_actionsInput {
  _id: MongoID
  attack_bonus: Float
  desc: String
  name: String
}

input FilterFindManyMonsterNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterOperatorsInput {
  _id: FilterFindManyMonster_idOperatorsInput
  alignment: FilterFindManyMonsterAlignmentOperatorsInput
  armor_class: FilterFindManyMonsterArmor_classOperatorsInput
  challenge_rating: FilterFindManyMonsterChallenge_ratingOperatorsInput
  charisma: FilterFindManyMonsterCharismaOperatorsInput
  constitution: FilterFindManyMonsterConstitutionOperatorsInput
  dexterity: FilterFindManyMonsterDexterityOperatorsInput
  hit_dice: FilterFindManyMonsterHit_diceOperatorsInput
  hit_points: FilterFindManyMonsterHit_pointsOperatorsInput
  index: FilterFindManyMonsterIndexOperatorsInput
  intelligence: FilterFindManyMonsterIntelligenceOperatorsInput
  languages: FilterFindManyMonsterLanguagesOperatorsInput
  name: FilterFindManyMonsterNameOperatorsInput
  senses: FilterFindManyMonsterSensesOperatorsInput
  size: FilterFindManyMonsterSizeOperatorsInput
  speed: FilterFindManyMonsterSpeedOperatorsInput
  strength: FilterFindManyMonsterStrengthOperatorsInput
  subtype: FilterFindManyMonsterSubtypeOperatorsInput
  type: FilterFindManyMonsterTypeOperatorsInput
  url: FilterFindManyMonsterUrlOperatorsInput
  wisdom: FilterFindManyMonsterWisdomOperatorsInput
  xp: FilterFindManyMonsterXpOperatorsInput
}

input FilterFindManyMonsterProficienciesInput {
  _id: MongoID
  proficiency: FilterFindManyMonsterProficienciesProficiencyInput
  value: Float
}

input FilterFindManyMonsterProficienciesProficiencyInput {
  index: String
  name: String
  url: String
}

input FilterFindManyMonsterReactionsInput {
  _id: MongoID
  desc: String
  name: String
}

input FilterFindManyMonsterSensesBlindsightOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterSensesDarkvisionOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterSensesInput {
  blindsight: String
  darkvision: String
  passive_perception: Float
  tremorsense: String
  truesight: String
}

input FilterFindManyMonsterSensesOperatorsInput {
  blindsight: FilterFindManyMonsterSensesBlindsightOperatorsInput
  darkvision: FilterFindManyMonsterSensesDarkvisionOperatorsInput
  passive_perception: FilterFindManyMonsterSensesPassive_perceptionOperatorsInput
  tremorsense: FilterFindManyMonsterSensesTremorsenseOperatorsInput
  truesight: FilterFindManyMonsterSensesTruesightOperatorsInput
}

input FilterFindManyMonsterSensesPassive_perceptionOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterSensesTremorsenseOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterSensesTruesightOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterSizeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterSpecial_abilitiesInput {
  _id: MongoID
  desc: String
  name: String
}

input FilterFindManyMonsterSpeedBurrowOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterSpeedClimbOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterSpeedFlyOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterSpeedHoverOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindManyMonsterSpeedInput {
  burrow: String
  climb: String
  fly: String
  hover: Boolean
  swim: String
  walk: String
}

input FilterFindManyMonsterSpeedOperatorsInput {
  burrow: FilterFindManyMonsterSpeedBurrowOperatorsInput
  climb: FilterFindManyMonsterSpeedClimbOperatorsInput
  fly: FilterFindManyMonsterSpeedFlyOperatorsInput
  hover: FilterFindManyMonsterSpeedHoverOperatorsInput
  swim: FilterFindManyMonsterSpeedSwimOperatorsInput
  walk: FilterFindManyMonsterSpeedWalkOperatorsInput
}

input FilterFindManyMonsterSpeedSwimOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterSpeedWalkOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterStrengthOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterSubtypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyMonsterWisdomOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonsterXpOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyMonster_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyProficiencyClassesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyProficiencyIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyProficiencyInput {
  AND: [FilterFindManyProficiencyInput!]
  OR: [FilterFindManyProficiencyInput!]
  _id: String
  _operators: FilterFindManyProficiencyOperatorsInput
  classes: [FilterFindManyProficiencyClassesInput]
  index: String
  name: String
  races: [FilterFindManyProficiencyRacesInput]
  references: [FilterFindManyProficiencyReferencesInput]
  type: String
  url: String
}

input FilterFindManyProficiencyNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyProficiencyOperatorsInput {
  _id: FilterFindManyProficiency_idOperatorsInput
  index: FilterFindManyProficiencyIndexOperatorsInput
  name: FilterFindManyProficiencyNameOperatorsInput
  type: FilterFindManyProficiencyTypeOperatorsInput
  url: FilterFindManyProficiencyUrlOperatorsInput
}

input FilterFindManyProficiencyRacesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyProficiencyReferencesInput {
  _id: MongoID
  index: String
  name: String
  type: String
  url: String
}

input FilterFindManyProficiencyTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyProficiencyUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyProficiency_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceAbility_bonus_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindManyRaceAbility_bonus_optionsFromInput {
  _id: MongoID
  ability_score: FilterFindManyRaceAbility_bonus_optionsFromAbility_scoreInput
  bonus: Float
}

input FilterFindManyRaceAbility_bonus_optionsInput {
  choose: Float
  from: [FilterFindManyRaceAbility_bonus_optionsFromInput]
  type: String
}

input FilterFindManyRaceAbility_bonus_optionsOperatorsInput {
  choose: FilterFindManyRaceAbility_bonus_optionsChooseOperatorsInput
  type: FilterFindManyRaceAbility_bonus_optionsTypeOperatorsInput
}

input FilterFindManyRaceAbility_bonus_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceAbility_bonusesAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindManyRaceAbility_bonusesInput {
  _id: MongoID
  ability_score: FilterFindManyRaceAbility_bonusesAbility_scoreInput
  bonus: Float
}

input FilterFindManyRaceAgeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceAlignmentOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceInput {
  AND: [FilterFindManyRaceInput!]
  OR: [FilterFindManyRaceInput!]
  _id: String
  _operators: FilterFindManyRaceOperatorsInput
  ability_bonus_options: FilterFindManyRaceAbility_bonus_optionsInput
  ability_bonuses: [FilterFindManyRaceAbility_bonusesInput]
  age: String
  alignment: String
  index: String
  language_desc: String
  language_options: FilterFindManyRaceLanguage_optionsInput
  languages: [FilterFindManyRaceLanguagesInput]
  name: String
  size: String
  size_description: String
  speed: Float
  starting_proficiencies: [FilterFindManyRaceStarting_proficienciesInput]
  starting_proficiency_options: FilterFindManyRaceStarting_proficiency_optionsInput
  subraces: [FilterFindManyRaceSubracesInput]
  traits: [FilterFindManyRaceTraitsInput]
  url: String
}

input FilterFindManyRaceLanguage_descOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceLanguage_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyRaceLanguage_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyRaceLanguage_optionsInput {
  choose: Float
  from: [FilterFindManyRaceLanguage_optionsFromInput]
  type: String
}

input FilterFindManyRaceLanguage_optionsOperatorsInput {
  choose: FilterFindManyRaceLanguage_optionsChooseOperatorsInput
  type: FilterFindManyRaceLanguage_optionsTypeOperatorsInput
}

input FilterFindManyRaceLanguage_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceLanguagesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyRaceNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceOperatorsInput {
  _id: FilterFindManyRace_idOperatorsInput
  ability_bonus_options: FilterFindManyRaceAbility_bonus_optionsOperatorsInput
  age: FilterFindManyRaceAgeOperatorsInput
  alignment: FilterFindManyRaceAlignmentOperatorsInput
  index: FilterFindManyRaceIndexOperatorsInput
  language_desc: FilterFindManyRaceLanguage_descOperatorsInput
  language_options: FilterFindManyRaceLanguage_optionsOperatorsInput
  name: FilterFindManyRaceNameOperatorsInput
  size: FilterFindManyRaceSizeOperatorsInput
  size_description: FilterFindManyRaceSize_descriptionOperatorsInput
  speed: FilterFindManyRaceSpeedOperatorsInput
  starting_proficiency_options: FilterFindManyRaceStarting_proficiency_optionsOperatorsInput
  url: FilterFindManyRaceUrlOperatorsInput
}

input FilterFindManyRaceSizeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceSize_descriptionOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceSpeedOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyRaceStarting_proficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyRaceStarting_proficiency_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyRaceStarting_proficiency_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyRaceStarting_proficiency_optionsInput {
  choose: Float
  from: [FilterFindManyRaceStarting_proficiency_optionsFromInput]
  type: String
}

input FilterFindManyRaceStarting_proficiency_optionsOperatorsInput {
  choose: FilterFindManyRaceStarting_proficiency_optionsChooseOperatorsInput
  type: FilterFindManyRaceStarting_proficiency_optionsTypeOperatorsInput
}

input FilterFindManyRaceStarting_proficiency_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRaceSubracesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyRaceTraitsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyRaceUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRace_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRuleDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRuleIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRuleInput {
  AND: [FilterFindManyRuleInput!]
  OR: [FilterFindManyRuleInput!]
  _id: String
  _operators: FilterFindManyRuleOperatorsInput
  desc: String
  index: String
  name: String
  subsections: [FilterFindManyRuleSubsectionsInput]
  url: String
}

input FilterFindManyRuleNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRuleOperatorsInput {
  _id: FilterFindManyRule_idOperatorsInput
  desc: FilterFindManyRuleDescOperatorsInput
  index: FilterFindManyRuleIndexOperatorsInput
  name: FilterFindManyRuleNameOperatorsInput
  url: FilterFindManyRuleUrlOperatorsInput
}

input FilterFindManyRuleSectionDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRuleSectionIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRuleSectionInput {
  AND: [FilterFindManyRuleSectionInput!]
  OR: [FilterFindManyRuleSectionInput!]
  _id: String
  _operators: FilterFindManyRuleSectionOperatorsInput
  desc: String
  index: String
  name: String
  url: String
}

input FilterFindManyRuleSectionNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRuleSectionOperatorsInput {
  _id: FilterFindManyRuleSection_idOperatorsInput
  desc: FilterFindManyRuleSectionDescOperatorsInput
  index: FilterFindManyRuleSectionIndexOperatorsInput
  name: FilterFindManyRuleSectionNameOperatorsInput
  url: FilterFindManyRuleSectionUrlOperatorsInput
}

input FilterFindManyRuleSectionUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRuleSection_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRuleSubsectionsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyRuleUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyRule_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySkillAbility_scoreIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySkillAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindManySkillAbility_scoreNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySkillAbility_scoreOperatorsInput {
  index: FilterFindManySkillAbility_scoreIndexOperatorsInput
  name: FilterFindManySkillAbility_scoreNameOperatorsInput
  url: FilterFindManySkillAbility_scoreUrlOperatorsInput
}

input FilterFindManySkillAbility_scoreUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySkillDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySkillIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySkillInput {
  AND: [FilterFindManySkillInput!]
  OR: [FilterFindManySkillInput!]
  _id: String
  _operators: FilterFindManySkillOperatorsInput
  ability_score: FilterFindManySkillAbility_scoreInput
  desc: [String]
  index: String
  name: String
  url: String
}

input FilterFindManySkillNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySkillOperatorsInput {
  _id: FilterFindManySkill_idOperatorsInput
  ability_score: FilterFindManySkillAbility_scoreOperatorsInput
  desc: FilterFindManySkillDescOperatorsInput
  index: FilterFindManySkillIndexOperatorsInput
  name: FilterFindManySkillNameOperatorsInput
  url: FilterFindManySkillUrlOperatorsInput
}

input FilterFindManySkillUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySkill_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySpellArea_of_effectInput {
  size: Float
  type: String
}

input FilterFindManySpellClassesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManySpellDamageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindManySpellDamageInput {
  damage_at_character_level: JSON
  damage_at_slot_level: JSON
  damage_type: FilterFindManySpellDamageDamage_typeInput
}

input FilterFindManySpellDcDc_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindManySpellDcInput {
  dc_success: String
  dc_type: FilterFindManySpellDcDc_typeInput
  desc: String
}

input FilterFindManySpellInput {
  AND: [FilterFindManySpellInput!]
  OR: [FilterFindManySpellInput!]
  _id: String
  _operators: FilterFindManySpellOperatorsInput
  area_of_effect: FilterFindManySpellArea_of_effectInput
  attack_type: String
  casting_time: String
  classes: [FilterFindManySpellClassesInput]
  components: [String]
  concentration: Boolean
  damage: FilterFindManySpellDamageInput
  dc: FilterFindManySpellDcInput
  desc: [String]
  duration: String
  heal_at_slot_level: JSON
  higher_level: [String]
  index: String
  level: Float
  material: String
  name: String
  range: String
  ritual: Boolean
  school: FilterFindManySpellSchoolInput
  subclasses: [FilterFindManySpellSubclassesInput]
  url: String
}

input FilterFindManySpellOperatorsInput {
  _id: FilterFindManySpell_idOperatorsInput
  school: FilterFindManySpellSchoolOperatorsInput
}

input FilterFindManySpellSchoolIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySpellSchoolInput {
  index: String
  name: String
  url: String
}

input FilterFindManySpellSchoolNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySpellSchoolOperatorsInput {
  index: FilterFindManySpellSchoolIndexOperatorsInput
  name: FilterFindManySpellSchoolNameOperatorsInput
  url: FilterFindManySpellSchoolUrlOperatorsInput
}

input FilterFindManySpellSchoolUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySpellSubclassesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManySpell_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclassClassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclassClassInput {
  index: String
  name: String
  url: String
}

input FilterFindManySubclassClassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclassClassOperatorsInput {
  index: FilterFindManySubclassClassIndexOperatorsInput
  name: FilterFindManySubclassClassNameOperatorsInput
  url: FilterFindManySubclassClassUrlOperatorsInput
}

input FilterFindManySubclassClassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclassDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclassInput {
  AND: [FilterFindManySubclassInput!]
  OR: [FilterFindManySubclassInput!]
  _id: String
  _operators: FilterFindManySubclassOperatorsInput
  class: FilterFindManySubclassClassInput
  desc: [String]
  index: String
  name: String
  spells: [FilterFindManySubclassSpellsInput]
  subclass_flavor: String
  subclass_levels: String
  url: String
}

input FilterFindManySubclassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclassOperatorsInput {
  _id: FilterFindManySubclass_idOperatorsInput
  class: FilterFindManySubclassClassOperatorsInput
  desc: FilterFindManySubclassDescOperatorsInput
  index: FilterFindManySubclassIndexOperatorsInput
  name: FilterFindManySubclassNameOperatorsInput
  subclass_flavor: FilterFindManySubclassSubclass_flavorOperatorsInput
  subclass_levels: FilterFindManySubclassSubclass_levelsOperatorsInput
  url: FilterFindManySubclassUrlOperatorsInput
}

input FilterFindManySubclassSpellsInput {
  _id: MongoID
  prerequisites: [FilterFindManySubclassSpellsPrerequisitesInput]
  spell: FilterFindManySubclassSpellsSpellInput
}

input FilterFindManySubclassSpellsPrerequisitesInput {
  _id: MongoID
  index: String
  name: String
  type: String
  url: String
}

input FilterFindManySubclassSpellsSpellInput {
  index: String
  name: String
  url: String
}

input FilterFindManySubclassSubclass_flavorOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclassSubclass_levelsOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubclass_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubraceAbility_bonusesAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindManySubraceAbility_bonusesInput {
  _id: MongoID
  ability_score: FilterFindManySubraceAbility_bonusesAbility_scoreInput
  bonus: Float
}

input FilterFindManySubraceDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubraceIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubraceInput {
  AND: [FilterFindManySubraceInput!]
  OR: [FilterFindManySubraceInput!]
  _id: String
  _operators: FilterFindManySubraceOperatorsInput
  ability_bonuses: [FilterFindManySubraceAbility_bonusesInput]
  desc: String
  index: String
  language_options: FilterFindManySubraceLanguage_optionsInput
  name: String
  race: FilterFindManySubraceRaceInput
  racial_traits: [FilterFindManySubraceRacial_traitsInput]
  starting_proficiencies: [FilterFindManySubraceStarting_proficienciesInput]
  url: String
}

input FilterFindManySubraceLanguage_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManySubraceLanguage_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManySubraceLanguage_optionsInput {
  choose: Float
  from: [FilterFindManySubraceLanguage_optionsFromInput]
  type: String
}

input FilterFindManySubraceLanguage_optionsOperatorsInput {
  choose: FilterFindManySubraceLanguage_optionsChooseOperatorsInput
  type: FilterFindManySubraceLanguage_optionsTypeOperatorsInput
}

input FilterFindManySubraceLanguage_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubraceNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubraceOperatorsInput {
  _id: FilterFindManySubrace_idOperatorsInput
  desc: FilterFindManySubraceDescOperatorsInput
  index: FilterFindManySubraceIndexOperatorsInput
  language_options: FilterFindManySubraceLanguage_optionsOperatorsInput
  name: FilterFindManySubraceNameOperatorsInput
  race: FilterFindManySubraceRaceOperatorsInput
  url: FilterFindManySubraceUrlOperatorsInput
}

input FilterFindManySubraceRaceIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubraceRaceInput {
  index: String
  name: String
  url: String
}

input FilterFindManySubraceRaceNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubraceRaceOperatorsInput {
  index: FilterFindManySubraceRaceIndexOperatorsInput
  name: FilterFindManySubraceRaceNameOperatorsInput
  url: FilterFindManySubraceRaceUrlOperatorsInput
}

input FilterFindManySubraceRaceUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubraceRacial_traitsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManySubraceStarting_proficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManySubraceUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManySubrace_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitInput {
  AND: [FilterFindManyTraitInput!]
  OR: [FilterFindManyTraitInput!]
  _id: String
  _operators: FilterFindManyTraitOperatorsInput
  desc: [String]
  index: String
  name: String
  parent: FilterFindManyTraitParentInput
  proficiencies: [FilterFindManyTraitProficienciesInput]
  proficiency_choices: FilterFindManyTraitProficiency_choicesInput
  races: [FilterFindManyTraitRacesInput]
  subraces: [FilterFindManyTraitSubracesInput]
  trait_specific: FilterFindManyTraitTrait_specificInput
  url: String
}

input FilterFindManyTraitNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitOperatorsInput {
  _id: FilterFindManyTrait_idOperatorsInput
  desc: FilterFindManyTraitDescOperatorsInput
  index: FilterFindManyTraitIndexOperatorsInput
  name: FilterFindManyTraitNameOperatorsInput
  parent: FilterFindManyTraitParentOperatorsInput
  proficiency_choices: FilterFindManyTraitProficiency_choicesOperatorsInput
  trait_specific: FilterFindManyTraitTrait_specificOperatorsInput
  url: FilterFindManyTraitUrlOperatorsInput
}

input FilterFindManyTraitParentIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitParentInput {
  index: String
  name: String
  url: String
}

input FilterFindManyTraitParentNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitParentOperatorsInput {
  index: FilterFindManyTraitParentIndexOperatorsInput
  name: FilterFindManyTraitParentNameOperatorsInput
  url: FilterFindManyTraitParentUrlOperatorsInput
}

input FilterFindManyTraitParentUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitProficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyTraitProficiency_choicesChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyTraitProficiency_choicesFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyTraitProficiency_choicesInput {
  choose: Float
  from: [FilterFindManyTraitProficiency_choicesFromInput]
  type: String
}

input FilterFindManyTraitProficiency_choicesOperatorsInput {
  choose: FilterFindManyTraitProficiency_choicesChooseOperatorsInput
  type: FilterFindManyTraitProficiency_choicesTypeOperatorsInput
}

input FilterFindManyTraitProficiency_choicesTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitRacesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyTraitSubracesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyTraitTrait_specificBreath_weaponDamageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindManyTraitTrait_specificBreath_weaponDamageInput {
  _id: MongoID
  damage_at_character_level: JSON
  damage_type: FilterFindManyTraitTrait_specificBreath_weaponDamageDamage_typeInput
}

input FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeOperatorsInput {
  index: FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeIndexOperatorsInput
  name: FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeNameOperatorsInput
  url: FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeUrlOperatorsInput
}

input FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificBreath_weaponDcInput {
  dc_type: FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeInput
  success_type: String
}

input FilterFindManyTraitTrait_specificBreath_weaponDcOperatorsInput {
  dc_type: FilterFindManyTraitTrait_specificBreath_weaponDcDc_typeOperatorsInput
  success_type: FilterFindManyTraitTrait_specificBreath_weaponDcSuccess_typeOperatorsInput
}

input FilterFindManyTraitTrait_specificBreath_weaponDcSuccess_typeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificBreath_weaponDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificBreath_weaponInput {
  damage: [FilterFindManyTraitTrait_specificBreath_weaponDamageInput]
  dc: FilterFindManyTraitTrait_specificBreath_weaponDcInput
  desc: String
  name: String
  usage: FilterFindManyTraitTrait_specificBreath_weaponUsageInput
}

input FilterFindManyTraitTrait_specificBreath_weaponNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificBreath_weaponOperatorsInput {
  dc: FilterFindManyTraitTrait_specificBreath_weaponDcOperatorsInput
  desc: FilterFindManyTraitTrait_specificBreath_weaponDescOperatorsInput
  name: FilterFindManyTraitTrait_specificBreath_weaponNameOperatorsInput
  usage: FilterFindManyTraitTrait_specificBreath_weaponUsageOperatorsInput
}

input FilterFindManyTraitTrait_specificBreath_weaponUsageInput {
  times: Float
  type: String
}

input FilterFindManyTraitTrait_specificBreath_weaponUsageOperatorsInput {
  times: FilterFindManyTraitTrait_specificBreath_weaponUsageTimesOperatorsInput
  type: FilterFindManyTraitTrait_specificBreath_weaponUsageTypeOperatorsInput
}

input FilterFindManyTraitTrait_specificBreath_weaponUsageTimesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyTraitTrait_specificBreath_weaponUsageTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificDamage_typeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindManyTraitTrait_specificDamage_typeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificDamage_typeOperatorsInput {
  index: FilterFindManyTraitTrait_specificDamage_typeIndexOperatorsInput
  name: FilterFindManyTraitTrait_specificDamage_typeNameOperatorsInput
  url: FilterFindManyTraitTrait_specificDamage_typeUrlOperatorsInput
}

input FilterFindManyTraitTrait_specificDamage_typeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificInput {
  breath_weapon: FilterFindManyTraitTrait_specificBreath_weaponInput
  damage_type: FilterFindManyTraitTrait_specificDamage_typeInput
  spell_options: FilterFindManyTraitTrait_specificSpell_optionsInput
  subtrait_options: FilterFindManyTraitTrait_specificSubtrait_optionsInput
}

input FilterFindManyTraitTrait_specificOperatorsInput {
  breath_weapon: FilterFindManyTraitTrait_specificBreath_weaponOperatorsInput
  damage_type: FilterFindManyTraitTrait_specificDamage_typeOperatorsInput
  spell_options: FilterFindManyTraitTrait_specificSpell_optionsOperatorsInput
  subtrait_options: FilterFindManyTraitTrait_specificSubtrait_optionsOperatorsInput
}

input FilterFindManyTraitTrait_specificSpell_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyTraitTrait_specificSpell_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyTraitTrait_specificSpell_optionsInput {
  choose: Float
  from: [FilterFindManyTraitTrait_specificSpell_optionsFromInput]
  type: String
}

input FilterFindManyTraitTrait_specificSpell_optionsOperatorsInput {
  choose: FilterFindManyTraitTrait_specificSpell_optionsChooseOperatorsInput
  type: FilterFindManyTraitTrait_specificSpell_optionsTypeOperatorsInput
}

input FilterFindManyTraitTrait_specificSpell_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitTrait_specificSubtrait_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindManyTraitTrait_specificSubtrait_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindManyTraitTrait_specificSubtrait_optionsInput {
  choose: Float
  from: [FilterFindManyTraitTrait_specificSubtrait_optionsFromInput]
  type: String
}

input FilterFindManyTraitTrait_specificSubtrait_optionsOperatorsInput {
  choose: FilterFindManyTraitTrait_specificSubtrait_optionsChooseOperatorsInput
  type: FilterFindManyTraitTrait_specificSubtrait_optionsTypeOperatorsInput
}

input FilterFindManyTraitTrait_specificSubtrait_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTraitUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyTrait_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyWeaponPropertyDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyWeaponPropertyIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyWeaponPropertyInput {
  AND: [FilterFindManyWeaponPropertyInput!]
  OR: [FilterFindManyWeaponPropertyInput!]
  _id: String
  _operators: FilterFindManyWeaponPropertyOperatorsInput
  desc: [String]
  index: String
  name: String
  url: String
}

input FilterFindManyWeaponPropertyNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyWeaponPropertyOperatorsInput {
  _id: FilterFindManyWeaponProperty_idOperatorsInput
  desc: FilterFindManyWeaponPropertyDescOperatorsInput
  index: FilterFindManyWeaponPropertyIndexOperatorsInput
  name: FilterFindManyWeaponPropertyNameOperatorsInput
  url: FilterFindManyWeaponPropertyUrlOperatorsInput
}

input FilterFindManyWeaponPropertyUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindManyWeaponProperty_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAbilityScoreDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAbilityScoreFull_nameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAbilityScoreIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAbilityScoreInput {
  AND: [FilterFindOneAbilityScoreInput!]
  OR: [FilterFindOneAbilityScoreInput!]
  _id: String
  _operators: FilterFindOneAbilityScoreOperatorsInput
  desc: [String]
  full_name: String
  index: String
  name: String
  skills: [FilterFindOneAbilityScoreSkillsInput]
  url: String
}

input FilterFindOneAbilityScoreNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAbilityScoreOperatorsInput {
  _id: FilterFindOneAbilityScore_idOperatorsInput
  desc: FilterFindOneAbilityScoreDescOperatorsInput
  full_name: FilterFindOneAbilityScoreFull_nameOperatorsInput
  index: FilterFindOneAbilityScoreIndexOperatorsInput
  name: FilterFindOneAbilityScoreNameOperatorsInput
  url: FilterFindOneAbilityScoreUrlOperatorsInput
}

input FilterFindOneAbilityScoreSkillsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneAbilityScoreUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAbilityScore_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAlignmentAbbreviationOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAlignmentDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAlignmentIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAlignmentInput {
  AND: [FilterFindOneAlignmentInput!]
  OR: [FilterFindOneAlignmentInput!]
  _id: String
  _operators: FilterFindOneAlignmentOperatorsInput
  abbreviation: String
  desc: String
  index: String
  name: String
  url: String
}

input FilterFindOneAlignmentNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAlignmentOperatorsInput {
  _id: FilterFindOneAlignment_idOperatorsInput
  abbreviation: FilterFindOneAlignmentAbbreviationOperatorsInput
  desc: FilterFindOneAlignmentDescOperatorsInput
  index: FilterFindOneAlignmentIndexOperatorsInput
  name: FilterFindOneAlignmentNameOperatorsInput
  url: FilterFindOneAlignmentUrlOperatorsInput
}

input FilterFindOneAlignmentUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneAlignment_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundBondsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneBackgroundBondsFromOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundBondsInput {
  choose: Float
  from: [String]
  type: String
}

input FilterFindOneBackgroundBondsOperatorsInput {
  choose: FilterFindOneBackgroundBondsChooseOperatorsInput
  from: FilterFindOneBackgroundBondsFromOperatorsInput
  type: FilterFindOneBackgroundBondsTypeOperatorsInput
}

input FilterFindOneBackgroundBondsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundFeatureDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundFeatureInput {
  desc: [String]
  name: String
}

input FilterFindOneBackgroundFeatureNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundFeatureOperatorsInput {
  desc: FilterFindOneBackgroundFeatureDescOperatorsInput
  name: FilterFindOneBackgroundFeatureNameOperatorsInput
}

input FilterFindOneBackgroundFlawsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneBackgroundFlawsFromOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundFlawsInput {
  choose: Float
  from: [String]
  type: String
}

input FilterFindOneBackgroundFlawsOperatorsInput {
  choose: FilterFindOneBackgroundFlawsChooseOperatorsInput
  from: FilterFindOneBackgroundFlawsFromOperatorsInput
  type: FilterFindOneBackgroundFlawsTypeOperatorsInput
}

input FilterFindOneBackgroundFlawsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundIdealsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneBackgroundIdealsFromAlignmentsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneBackgroundIdealsFromInput {
  _id: MongoID
  alignments: [FilterFindOneBackgroundIdealsFromAlignmentsInput]
  desc: String
}

input FilterFindOneBackgroundIdealsInput {
  choose: Float
  from: [FilterFindOneBackgroundIdealsFromInput]
  type: String
}

input FilterFindOneBackgroundIdealsOperatorsInput {
  choose: FilterFindOneBackgroundIdealsChooseOperatorsInput
  type: FilterFindOneBackgroundIdealsTypeOperatorsInput
}

input FilterFindOneBackgroundIdealsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundInput {
  AND: [FilterFindOneBackgroundInput!]
  OR: [FilterFindOneBackgroundInput!]
  _id: String
  _operators: FilterFindOneBackgroundOperatorsInput
  bonds: FilterFindOneBackgroundBondsInput
  feature: FilterFindOneBackgroundFeatureInput
  flaws: FilterFindOneBackgroundFlawsInput
  ideals: FilterFindOneBackgroundIdealsInput
  index: String
  language_options: FilterFindOneBackgroundLanguage_optionsInput
  name: String
  personality_traits: FilterFindOneBackgroundPersonality_traitsInput
  starting_equipment: [FilterFindOneBackgroundStarting_equipmentInput]
  starting_equipment_options: [FilterFindOneBackgroundStarting_equipment_optionsInput]
  starting_proficiencies: [FilterFindOneBackgroundStarting_proficienciesInput]
  url: String
}

input FilterFindOneBackgroundLanguage_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneBackgroundLanguage_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneBackgroundLanguage_optionsInput {
  choose: Float
  from: [FilterFindOneBackgroundLanguage_optionsFromInput]
  type: String
}

input FilterFindOneBackgroundLanguage_optionsOperatorsInput {
  choose: FilterFindOneBackgroundLanguage_optionsChooseOperatorsInput
  type: FilterFindOneBackgroundLanguage_optionsTypeOperatorsInput
}

input FilterFindOneBackgroundLanguage_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundOperatorsInput {
  _id: FilterFindOneBackground_idOperatorsInput
  bonds: FilterFindOneBackgroundBondsOperatorsInput
  feature: FilterFindOneBackgroundFeatureOperatorsInput
  flaws: FilterFindOneBackgroundFlawsOperatorsInput
  ideals: FilterFindOneBackgroundIdealsOperatorsInput
  index: FilterFindOneBackgroundIndexOperatorsInput
  language_options: FilterFindOneBackgroundLanguage_optionsOperatorsInput
  name: FilterFindOneBackgroundNameOperatorsInput
  personality_traits: FilterFindOneBackgroundPersonality_traitsOperatorsInput
  url: FilterFindOneBackgroundUrlOperatorsInput
}

input FilterFindOneBackgroundPersonality_traitsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneBackgroundPersonality_traitsFromOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundPersonality_traitsInput {
  choose: Float
  from: [String]
  type: String
}

input FilterFindOneBackgroundPersonality_traitsOperatorsInput {
  choose: FilterFindOneBackgroundPersonality_traitsChooseOperatorsInput
  from: FilterFindOneBackgroundPersonality_traitsFromOperatorsInput
  type: FilterFindOneBackgroundPersonality_traitsTypeOperatorsInput
}

input FilterFindOneBackgroundPersonality_traitsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackgroundStarting_equipmentEquipmentInput {
  index: String
  name: String
  url: String
}

input FilterFindOneBackgroundStarting_equipmentInput {
  equipment: FilterFindOneBackgroundStarting_equipmentEquipmentInput
  quantity: Float
}

input FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentInput {
  index: String
  name: String
  url: String
}

input FilterFindOneBackgroundStarting_equipment_optionsFromInput {
  equipment: FilterFindOneBackgroundStarting_equipment_optionsFromEquipmentInput
  quantity: Float
}

input FilterFindOneBackgroundStarting_equipment_optionsInput {
  choose: Float
  from: [FilterFindOneBackgroundStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindOneBackgroundStarting_proficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneBackgroundUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneBackground_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClassClass_levelsOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClassHit_dieOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneClassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClassInput {
  AND: [FilterFindOneClassInput!]
  OR: [FilterFindOneClassInput!]
  _id: String
  _operators: FilterFindOneClassOperatorsInput
  class_levels: String
  hit_die: Float
  index: String
  multi_classing: FilterFindOneClassMulti_classingInput
  name: String
  proficiencies: [FilterFindOneClassProficienciesInput]
  proficiency_choices: [FilterFindOneClassProficiency_choicesInput]
  saving_throws: [FilterFindOneClassSaving_throwsInput]
  spellcasting: FilterFindOneClassSpellcastingInput
  spells: String
  starting_equipment: [FilterFindOneClassStarting_equipmentInput]
  starting_equipment_options: [FilterFindOneClassStarting_equipment_optionsInput]
  subclasses: [FilterFindOneClassSubclassesInput]
  url: String
}

input FilterFindOneClassMulti_classingInput {
  prerequisite_options: FilterFindOneClassMulti_classingPrerequisite_optionsInput
  prerequisites: [FilterFindOneClassMulti_classingPrerequisitesInput]
  proficiencies: [FilterFindOneClassMulti_classingProficienciesInput]
  proficiency_choices: [FilterFindOneClassMulti_classingProficiency_choicesInput]
}

input FilterFindOneClassMulti_classingOperatorsInput {
  prerequisite_options: FilterFindOneClassMulti_classingPrerequisite_optionsOperatorsInput
}

input FilterFindOneClassMulti_classingPrerequisite_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneClassMulti_classingPrerequisite_optionsFromAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindOneClassMulti_classingPrerequisite_optionsFromInput {
  _id: MongoID
  ability_score: FilterFindOneClassMulti_classingPrerequisite_optionsFromAbility_scoreInput
  minimum_score: Float
}

input FilterFindOneClassMulti_classingPrerequisite_optionsInput {
  choose: Float
  from: [FilterFindOneClassMulti_classingPrerequisite_optionsFromInput]
  type: String
}

input FilterFindOneClassMulti_classingPrerequisite_optionsOperatorsInput {
  choose: FilterFindOneClassMulti_classingPrerequisite_optionsChooseOperatorsInput
  type: FilterFindOneClassMulti_classingPrerequisite_optionsTypeOperatorsInput
}

input FilterFindOneClassMulti_classingPrerequisite_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClassMulti_classingPrerequisitesAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindOneClassMulti_classingPrerequisitesInput {
  _id: MongoID
  ability_score: FilterFindOneClassMulti_classingPrerequisitesAbility_scoreInput
  minimum_score: Float
}

input FilterFindOneClassMulti_classingProficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneClassMulti_classingProficiency_choicesFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneClassMulti_classingProficiency_choicesInput {
  _id: MongoID
  choose: Float
  from: [FilterFindOneClassMulti_classingProficiency_choicesFromInput]
  type: String
}

input FilterFindOneClassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClassOperatorsInput {
  _id: FilterFindOneClass_idOperatorsInput
  class_levels: FilterFindOneClassClass_levelsOperatorsInput
  hit_die: FilterFindOneClassHit_dieOperatorsInput
  index: FilterFindOneClassIndexOperatorsInput
  multi_classing: FilterFindOneClassMulti_classingOperatorsInput
  name: FilterFindOneClassNameOperatorsInput
  spellcasting: FilterFindOneClassSpellcastingOperatorsInput
  spells: FilterFindOneClassSpellsOperatorsInput
  url: FilterFindOneClassUrlOperatorsInput
}

input FilterFindOneClassProficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneClassProficiency_choicesFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneClassProficiency_choicesInput {
  _id: MongoID
  choose: Float
  from: [FilterFindOneClassProficiency_choicesFromInput]
  type: String
}

input FilterFindOneClassSaving_throwsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneClassSpellcastingInfoInput {
  _id: MongoID
  desc: [String]
  name: String
}

input FilterFindOneClassSpellcastingInput {
  info: [FilterFindOneClassSpellcastingInfoInput]
  level: Float
  spellcasting_ability: FilterFindOneClassSpellcastingSpellcasting_abilityInput
}

input FilterFindOneClassSpellcastingLevelOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneClassSpellcastingOperatorsInput {
  level: FilterFindOneClassSpellcastingLevelOperatorsInput
  spellcasting_ability: FilterFindOneClassSpellcastingSpellcasting_abilityOperatorsInput
}

input FilterFindOneClassSpellcastingSpellcasting_abilityIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClassSpellcastingSpellcasting_abilityInput {
  index: String
  name: String
  url: String
}

input FilterFindOneClassSpellcastingSpellcasting_abilityNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClassSpellcastingSpellcasting_abilityOperatorsInput {
  index: FilterFindOneClassSpellcastingSpellcasting_abilityIndexOperatorsInput
  name: FilterFindOneClassSpellcastingSpellcasting_abilityNameOperatorsInput
  url: FilterFindOneClassSpellcastingSpellcasting_abilityUrlOperatorsInput
}

input FilterFindOneClassSpellcastingSpellcasting_abilityUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClassSpellsOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClassStarting_equipmentEquipmentInput {
  index: String
  name: String
  url: String
}

input FilterFindOneClassStarting_equipmentInput {
  _id: MongoID
  equipment: FilterFindOneClassStarting_equipmentEquipmentInput
  quantity: Float
}

input FilterFindOneClassStarting_equipment_optionsFromEquipmentInput {
  index: String
  name: String
  url: String
}

input FilterFindOneClassStarting_equipment_optionsFromInput {
  _id: MongoID
  equipment: FilterFindOneClassStarting_equipment_optionsFromEquipmentInput
  quantity: Float
}

input FilterFindOneClassStarting_equipment_optionsInput {
  _id: MongoID
  choose: Float
  from: [FilterFindOneClassStarting_equipment_optionsFromInput]
  type: String
}

input FilterFindOneClassSubclassesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneClassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneClass_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneConditionDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneConditionIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneConditionInput {
  AND: [FilterFindOneConditionInput!]
  OR: [FilterFindOneConditionInput!]
  _id: String
  _operators: FilterFindOneConditionOperatorsInput
  desc: [String]
  index: String
  name: String
  url: String
}

input FilterFindOneConditionNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneConditionOperatorsInput {
  _id: FilterFindOneCondition_idOperatorsInput
  desc: FilterFindOneConditionDescOperatorsInput
  index: FilterFindOneConditionIndexOperatorsInput
  name: FilterFindOneConditionNameOperatorsInput
  url: FilterFindOneConditionUrlOperatorsInput
}

input FilterFindOneConditionUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneCondition_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneDamageTypeDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneDamageTypeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneDamageTypeInput {
  AND: [FilterFindOneDamageTypeInput!]
  OR: [FilterFindOneDamageTypeInput!]
  _id: String
  _operators: FilterFindOneDamageTypeOperatorsInput
  desc: [String]
  index: String
  name: String
  url: String
}

input FilterFindOneDamageTypeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneDamageTypeOperatorsInput {
  _id: FilterFindOneDamageType_idOperatorsInput
  desc: FilterFindOneDamageTypeDescOperatorsInput
  index: FilterFindOneDamageTypeIndexOperatorsInput
  name: FilterFindOneDamageTypeNameOperatorsInput
  url: FilterFindOneDamageTypeUrlOperatorsInput
}

input FilterFindOneDamageTypeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneDamageType_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentArmor_categoryOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentArmor_classBaseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentArmor_classDex_bonusOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindOneEquipmentArmor_classInput {
  base: Float
  dex_bonus: Boolean
  max_bonus: Float
}

input FilterFindOneEquipmentArmor_classMax_bonusOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentArmor_classOperatorsInput {
  base: FilterFindOneEquipmentArmor_classBaseOperatorsInput
  dex_bonus: FilterFindOneEquipmentArmor_classDex_bonusOperatorsInput
  max_bonus: FilterFindOneEquipmentArmor_classMax_bonusOperatorsInput
}

input FilterFindOneEquipmentCapacityOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentCategoryEquipmentInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneEquipmentCategoryIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentCategoryInput {
  AND: [FilterFindOneEquipmentCategoryInput!]
  OR: [FilterFindOneEquipmentCategoryInput!]
  _id: String
  _operators: FilterFindOneEquipmentCategoryOperatorsInput
  equipment: [FilterFindOneEquipmentCategoryEquipmentInput]
  index: String
  name: String
  url: String
}

input FilterFindOneEquipmentCategoryNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentCategoryOperatorsInput {
  _id: FilterFindOneEquipmentCategory_idOperatorsInput
  index: FilterFindOneEquipmentCategoryIndexOperatorsInput
  name: FilterFindOneEquipmentCategoryNameOperatorsInput
  url: FilterFindOneEquipmentCategoryUrlOperatorsInput
}

input FilterFindOneEquipmentCategoryUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentCategory_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentCategory_rangeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentContentsInput {
  _id: MongoID
  item: FilterFindOneEquipmentContentsItemInput
  quantity: Float
}

input FilterFindOneEquipmentContentsItemInput {
  index: String
  name: String
  url: String
}

input FilterFindOneEquipmentCostInput {
  quantity: Float
  unit: String
}

input FilterFindOneEquipmentCostOperatorsInput {
  quantity: FilterFindOneEquipmentCostQuantityOperatorsInput
  unit: FilterFindOneEquipmentCostUnitOperatorsInput
}

input FilterFindOneEquipmentCostQuantityOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentCostUnitOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentDamageDamage_diceOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentDamageDamage_typeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentDamageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindOneEquipmentDamageDamage_typeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentDamageDamage_typeOperatorsInput {
  index: FilterFindOneEquipmentDamageDamage_typeIndexOperatorsInput
  name: FilterFindOneEquipmentDamageDamage_typeNameOperatorsInput
  url: FilterFindOneEquipmentDamageDamage_typeUrlOperatorsInput
}

input FilterFindOneEquipmentDamageDamage_typeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentDamageInput {
  damage_dice: String
  damage_type: FilterFindOneEquipmentDamageDamage_typeInput
}

input FilterFindOneEquipmentDamageOperatorsInput {
  damage_dice: FilterFindOneEquipmentDamageDamage_diceOperatorsInput
  damage_type: FilterFindOneEquipmentDamageDamage_typeOperatorsInput
}

input FilterFindOneEquipmentDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentEquipment_categoryIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentEquipment_categoryInput {
  index: String
  name: String
  url: String
}

input FilterFindOneEquipmentEquipment_categoryNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentEquipment_categoryOperatorsInput {
  index: FilterFindOneEquipmentEquipment_categoryIndexOperatorsInput
  name: FilterFindOneEquipmentEquipment_categoryNameOperatorsInput
  url: FilterFindOneEquipmentEquipment_categoryUrlOperatorsInput
}

input FilterFindOneEquipmentEquipment_categoryUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentGear_categoryIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentGear_categoryInput {
  index: String
  name: String
  url: String
}

input FilterFindOneEquipmentGear_categoryNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentGear_categoryOperatorsInput {
  index: FilterFindOneEquipmentGear_categoryIndexOperatorsInput
  name: FilterFindOneEquipmentGear_categoryNameOperatorsInput
  url: FilterFindOneEquipmentGear_categoryUrlOperatorsInput
}

input FilterFindOneEquipmentGear_categoryUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentInput {
  AND: [FilterFindOneEquipmentInput!]
  OR: [FilterFindOneEquipmentInput!]
  _id: String
  _operators: FilterFindOneEquipmentOperatorsInput
  armor_category: String
  armor_class: FilterFindOneEquipmentArmor_classInput
  capacity: String
  category_range: String
  contents: [FilterFindOneEquipmentContentsInput]
  cost: FilterFindOneEquipmentCostInput
  damage: FilterFindOneEquipmentDamageInput
  desc: [String]
  equipment_category: FilterFindOneEquipmentEquipment_categoryInput
  gear_category: FilterFindOneEquipmentGear_categoryInput
  index: String
  name: String
  properties: [FilterFindOneEquipmentPropertiesInput]
  quantity: Float
  range: FilterFindOneEquipmentRangeInput
  special: [String]
  speed: FilterFindOneEquipmentSpeedInput
  stealth_disadvantage: Boolean
  str_minimum: Float
  throw_range: FilterFindOneEquipmentThrow_rangeInput
  tool_category: String
  two_handed_damage: FilterFindOneEquipmentTwo_handed_damageInput
  url: String
  vehicle_category: String
  weapon_category: String
  weapon_range: String
  weight: Float
}

input FilterFindOneEquipmentNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentOperatorsInput {
  _id: FilterFindOneEquipment_idOperatorsInput
  armor_category: FilterFindOneEquipmentArmor_categoryOperatorsInput
  armor_class: FilterFindOneEquipmentArmor_classOperatorsInput
  capacity: FilterFindOneEquipmentCapacityOperatorsInput
  category_range: FilterFindOneEquipmentCategory_rangeOperatorsInput
  cost: FilterFindOneEquipmentCostOperatorsInput
  damage: FilterFindOneEquipmentDamageOperatorsInput
  desc: FilterFindOneEquipmentDescOperatorsInput
  equipment_category: FilterFindOneEquipmentEquipment_categoryOperatorsInput
  gear_category: FilterFindOneEquipmentGear_categoryOperatorsInput
  index: FilterFindOneEquipmentIndexOperatorsInput
  name: FilterFindOneEquipmentNameOperatorsInput
  quantity: FilterFindOneEquipmentQuantityOperatorsInput
  range: FilterFindOneEquipmentRangeOperatorsInput
  special: FilterFindOneEquipmentSpecialOperatorsInput
  speed: FilterFindOneEquipmentSpeedOperatorsInput
  stealth_disadvantage: FilterFindOneEquipmentStealth_disadvantageOperatorsInput
  str_minimum: FilterFindOneEquipmentStr_minimumOperatorsInput
  throw_range: FilterFindOneEquipmentThrow_rangeOperatorsInput
  tool_category: FilterFindOneEquipmentTool_categoryOperatorsInput
  two_handed_damage: FilterFindOneEquipmentTwo_handed_damageOperatorsInput
  url: FilterFindOneEquipmentUrlOperatorsInput
  vehicle_category: FilterFindOneEquipmentVehicle_categoryOperatorsInput
  weapon_category: FilterFindOneEquipmentWeapon_categoryOperatorsInput
  weapon_range: FilterFindOneEquipmentWeapon_rangeOperatorsInput
  weight: FilterFindOneEquipmentWeightOperatorsInput
}

input FilterFindOneEquipmentPropertiesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneEquipmentQuantityOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentRangeInput {
  long: Float
  normal: Float
}

input FilterFindOneEquipmentRangeLongOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentRangeNormalOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentRangeOperatorsInput {
  long: FilterFindOneEquipmentRangeLongOperatorsInput
  normal: FilterFindOneEquipmentRangeNormalOperatorsInput
}

input FilterFindOneEquipmentSpecialOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentSpeedInput {
  quantity: Float
  unit: String
}

input FilterFindOneEquipmentSpeedOperatorsInput {
  quantity: FilterFindOneEquipmentSpeedQuantityOperatorsInput
  unit: FilterFindOneEquipmentSpeedUnitOperatorsInput
}

input FilterFindOneEquipmentSpeedQuantityOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentSpeedUnitOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentStealth_disadvantageOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindOneEquipmentStr_minimumOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentThrow_rangeInput {
  long: Float
  normal: Float
}

input FilterFindOneEquipmentThrow_rangeLongOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentThrow_rangeNormalOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipmentThrow_rangeOperatorsInput {
  long: FilterFindOneEquipmentThrow_rangeLongOperatorsInput
  normal: FilterFindOneEquipmentThrow_rangeNormalOperatorsInput
}

input FilterFindOneEquipmentTool_categoryOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentTwo_handed_damageDamage_diceOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentTwo_handed_damageDamage_typeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentTwo_handed_damageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindOneEquipmentTwo_handed_damageDamage_typeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentTwo_handed_damageDamage_typeOperatorsInput {
  index: FilterFindOneEquipmentTwo_handed_damageDamage_typeIndexOperatorsInput
  name: FilterFindOneEquipmentTwo_handed_damageDamage_typeNameOperatorsInput
  url: FilterFindOneEquipmentTwo_handed_damageDamage_typeUrlOperatorsInput
}

input FilterFindOneEquipmentTwo_handed_damageDamage_typeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentTwo_handed_damageInput {
  damage_dice: String
  damage_type: FilterFindOneEquipmentTwo_handed_damageDamage_typeInput
}

input FilterFindOneEquipmentTwo_handed_damageOperatorsInput {
  damage_dice: FilterFindOneEquipmentTwo_handed_damageDamage_diceOperatorsInput
  damage_type: FilterFindOneEquipmentTwo_handed_damageDamage_typeOperatorsInput
}

input FilterFindOneEquipmentUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentVehicle_categoryOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentWeapon_categoryOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentWeapon_rangeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneEquipmentWeightOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneEquipment_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatInput {
  AND: [FilterFindOneFeatInput!]
  OR: [FilterFindOneFeatInput!]
  _id: String
  _operators: FilterFindOneFeatOperatorsInput
  desc: [String]
  index: String
  name: String
  prerequisites: [FilterFindOneFeatPrerequisitesInput]
  url: String
}

input FilterFindOneFeatNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatOperatorsInput {
  _id: FilterFindOneFeat_idOperatorsInput
  desc: FilterFindOneFeatDescOperatorsInput
  index: FilterFindOneFeatIndexOperatorsInput
  name: FilterFindOneFeatNameOperatorsInput
  url: FilterFindOneFeatUrlOperatorsInput
}

input FilterFindOneFeatPrerequisitesAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindOneFeatPrerequisitesInput {
  _id: MongoID
  ability_score: FilterFindOneFeatPrerequisitesAbility_scoreInput
  minimum_score: Float
}

input FilterFindOneFeatUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeat_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureChoiceChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneFeatureChoiceFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneFeatureChoiceInput {
  choose: Float
  from: [FilterFindOneFeatureChoiceFromInput]
  type: String
}

input FilterFindOneFeatureChoiceOperatorsInput {
  choose: FilterFindOneFeatureChoiceChooseOperatorsInput
  type: FilterFindOneFeatureChoiceTypeOperatorsInput
}

input FilterFindOneFeatureChoiceTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureClassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureClassInput {
  index: String
  name: String
  url: String
}

input FilterFindOneFeatureClassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureClassOperatorsInput {
  index: FilterFindOneFeatureClassIndexOperatorsInput
  name: FilterFindOneFeatureClassNameOperatorsInput
  url: FilterFindOneFeatureClassUrlOperatorsInput
}

input FilterFindOneFeatureClassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureFeature_specificExpertise_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneFeatureFeature_specificExpertise_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneFeatureFeature_specificExpertise_optionsInput {
  choose: Float
  from: [FilterFindOneFeatureFeature_specificExpertise_optionsFromInput]
  type: String
}

input FilterFindOneFeatureFeature_specificExpertise_optionsOperatorsInput {
  choose: FilterFindOneFeatureFeature_specificExpertise_optionsChooseOperatorsInput
  type: FilterFindOneFeatureFeature_specificExpertise_optionsTypeOperatorsInput
}

input FilterFindOneFeatureFeature_specificExpertise_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureFeature_specificInput {
  expertise_options: FilterFindOneFeatureFeature_specificExpertise_optionsInput
  subfeature_options: FilterFindOneFeatureFeature_specificSubfeature_optionsInput
}

input FilterFindOneFeatureFeature_specificOperatorsInput {
  expertise_options: FilterFindOneFeatureFeature_specificExpertise_optionsOperatorsInput
  subfeature_options: FilterFindOneFeatureFeature_specificSubfeature_optionsOperatorsInput
}

input FilterFindOneFeatureFeature_specificSubfeature_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneFeatureFeature_specificSubfeature_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneFeatureFeature_specificSubfeature_optionsInput {
  choose: Float
  from: [FilterFindOneFeatureFeature_specificSubfeature_optionsFromInput]
  type: String
}

input FilterFindOneFeatureFeature_specificSubfeature_optionsOperatorsInput {
  choose: FilterFindOneFeatureFeature_specificSubfeature_optionsChooseOperatorsInput
  type: FilterFindOneFeatureFeature_specificSubfeature_optionsTypeOperatorsInput
}

input FilterFindOneFeatureFeature_specificSubfeature_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureInput {
  AND: [FilterFindOneFeatureInput!]
  OR: [FilterFindOneFeatureInput!]
  _id: String
  _operators: FilterFindOneFeatureOperatorsInput
  choice: FilterFindOneFeatureChoiceInput
  class: FilterFindOneFeatureClassInput
  desc: [String]
  feature_specific: FilterFindOneFeatureFeature_specificInput
  index: String
  level: Float
  name: String
  parent: FilterFindOneFeatureParentInput
  prerequisites: [FilterFindOneFeaturePrerequisitesInput]
  reference: String
  subclass: FilterFindOneFeatureSubclassInput
  url: String
}

input FilterFindOneFeatureLevelOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneFeatureNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureOperatorsInput {
  _id: FilterFindOneFeature_idOperatorsInput
  choice: FilterFindOneFeatureChoiceOperatorsInput
  class: FilterFindOneFeatureClassOperatorsInput
  desc: FilterFindOneFeatureDescOperatorsInput
  feature_specific: FilterFindOneFeatureFeature_specificOperatorsInput
  index: FilterFindOneFeatureIndexOperatorsInput
  level: FilterFindOneFeatureLevelOperatorsInput
  name: FilterFindOneFeatureNameOperatorsInput
  parent: FilterFindOneFeatureParentOperatorsInput
  reference: FilterFindOneFeatureReferenceOperatorsInput
  subclass: FilterFindOneFeatureSubclassOperatorsInput
  url: FilterFindOneFeatureUrlOperatorsInput
}

input FilterFindOneFeatureParentIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureParentInput {
  index: String
  name: String
  url: String
}

input FilterFindOneFeatureParentNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureParentOperatorsInput {
  index: FilterFindOneFeatureParentIndexOperatorsInput
  name: FilterFindOneFeatureParentNameOperatorsInput
  url: FilterFindOneFeatureParentUrlOperatorsInput
}

input FilterFindOneFeatureParentUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeaturePrerequisitesInput {
  _id: MongoID
  level: Float
  type: String
}

input FilterFindOneFeatureReferenceOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureSubclassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureSubclassInput {
  index: String
  name: String
  url: String
}

input FilterFindOneFeatureSubclassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureSubclassOperatorsInput {
  index: FilterFindOneFeatureSubclassIndexOperatorsInput
  name: FilterFindOneFeatureSubclassNameOperatorsInput
  url: FilterFindOneFeatureSubclassUrlOperatorsInput
}

input FilterFindOneFeatureSubclassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeatureUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneFeature_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLanguageDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLanguageIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLanguageInput {
  AND: [FilterFindOneLanguageInput!]
  OR: [FilterFindOneLanguageInput!]
  _id: String
  _operators: FilterFindOneLanguageOperatorsInput
  desc: String
  index: String
  name: String
  script: String
  type: String
  typical_speakers: [String]
  url: String
}

input FilterFindOneLanguageNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLanguageOperatorsInput {
  _id: FilterFindOneLanguage_idOperatorsInput
  desc: FilterFindOneLanguageDescOperatorsInput
  index: FilterFindOneLanguageIndexOperatorsInput
  name: FilterFindOneLanguageNameOperatorsInput
  script: FilterFindOneLanguageScriptOperatorsInput
  type: FilterFindOneLanguageTypeOperatorsInput
  typical_speakers: FilterFindOneLanguageTypical_speakersOperatorsInput
  url: FilterFindOneLanguageUrlOperatorsInput
}

input FilterFindOneLanguageScriptOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLanguageTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLanguageTypical_speakersOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLanguageUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLanguage_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLevelAbility_score_bonusesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLevelClassInput {
  index: String
  name: String
  url: String
}

input FilterFindOneLevelClassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLevelClassOperatorsInput {
  index: FilterFindOneLevelClassIndexOperatorsInput
  name: FilterFindOneLevelClassNameOperatorsInput
  url: FilterFindOneLevelClassUrlOperatorsInput
}

input FilterFindOneLevelClassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLevelClass_specificAction_surgesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificArcane_recovery_levelsOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificAura_rangeOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificBardic_inspiration_dieOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificBrutal_critical_diceOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificChannel_divinity_chargesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificCreating_spell_slotsInput {
  _id: MongoID
  sorcery_point_cost: Float
  spell_slot_level: Float
}

input FilterFindOneLevelClass_specificDestroy_undead_crOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificExtra_attacksOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificFavored_enemiesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificFavored_terrainOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificIndomitable_usesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificInput {
  action_surges: Float
  arcane_recovery_levels: Float
  aura_range: Float
  bardic_inspiration_die: Float
  brutal_critical_dice: Float
  channel_divinity_charges: Float
  creating_spell_slots: [FilterFindOneLevelClass_specificCreating_spell_slotsInput]
  destroy_undead_cr: Float
  extra_attacks: Float
  favored_enemies: Float
  favored_terrain: Float
  indomitable_uses: Float
  invocations_known: Float
  ki_points: Float
  magical_secrets_max_5: Float
  magical_secrets_max_7: Float
  magical_secrets_max_9: Float
  martial_arts: FilterFindOneLevelClass_specificMartial_artsInput
  metamagic_known: Float
  mystic_arcanum_level_6: Float
  mystic_arcanum_level_7: Float
  mystic_arcanum_level_8: Float
  mystic_arcanum_level_9: Float
  rage_count: Float
  rage_damage_bonus: Float
  sneak_attack: FilterFindOneLevelClass_specificSneak_attackInput
  song_of_rest_die: Float
  sorcery_points: Float
  unarmored_movement: Float
  wild_shape_fly: Boolean
  wild_shape_max_cr: Float
  wild_shape_swim: Boolean
}

input FilterFindOneLevelClass_specificInvocations_knownOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificKi_pointsOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMagical_secrets_max_5OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMagical_secrets_max_7OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMagical_secrets_max_9OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMartial_artsDice_countOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMartial_artsDice_valueOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMartial_artsInput {
  dice_count: Float
  dice_value: Float
}

input FilterFindOneLevelClass_specificMartial_artsOperatorsInput {
  dice_count: FilterFindOneLevelClass_specificMartial_artsDice_countOperatorsInput
  dice_value: FilterFindOneLevelClass_specificMartial_artsDice_valueOperatorsInput
}

input FilterFindOneLevelClass_specificMetamagic_knownOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMystic_arcanum_level_6OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMystic_arcanum_level_7OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMystic_arcanum_level_8OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificMystic_arcanum_level_9OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificOperatorsInput {
  action_surges: FilterFindOneLevelClass_specificAction_surgesOperatorsInput
  arcane_recovery_levels: FilterFindOneLevelClass_specificArcane_recovery_levelsOperatorsInput
  aura_range: FilterFindOneLevelClass_specificAura_rangeOperatorsInput
  bardic_inspiration_die: FilterFindOneLevelClass_specificBardic_inspiration_dieOperatorsInput
  brutal_critical_dice: FilterFindOneLevelClass_specificBrutal_critical_diceOperatorsInput
  channel_divinity_charges: FilterFindOneLevelClass_specificChannel_divinity_chargesOperatorsInput
  destroy_undead_cr: FilterFindOneLevelClass_specificDestroy_undead_crOperatorsInput
  extra_attacks: FilterFindOneLevelClass_specificExtra_attacksOperatorsInput
  favored_enemies: FilterFindOneLevelClass_specificFavored_enemiesOperatorsInput
  favored_terrain: FilterFindOneLevelClass_specificFavored_terrainOperatorsInput
  indomitable_uses: FilterFindOneLevelClass_specificIndomitable_usesOperatorsInput
  invocations_known: FilterFindOneLevelClass_specificInvocations_knownOperatorsInput
  ki_points: FilterFindOneLevelClass_specificKi_pointsOperatorsInput
  magical_secrets_max_5: FilterFindOneLevelClass_specificMagical_secrets_max_5OperatorsInput
  magical_secrets_max_7: FilterFindOneLevelClass_specificMagical_secrets_max_7OperatorsInput
  magical_secrets_max_9: FilterFindOneLevelClass_specificMagical_secrets_max_9OperatorsInput
  martial_arts: FilterFindOneLevelClass_specificMartial_artsOperatorsInput
  metamagic_known: FilterFindOneLevelClass_specificMetamagic_knownOperatorsInput
  mystic_arcanum_level_6: FilterFindOneLevelClass_specificMystic_arcanum_level_6OperatorsInput
  mystic_arcanum_level_7: FilterFindOneLevelClass_specificMystic_arcanum_level_7OperatorsInput
  mystic_arcanum_level_8: FilterFindOneLevelClass_specificMystic_arcanum_level_8OperatorsInput
  mystic_arcanum_level_9: FilterFindOneLevelClass_specificMystic_arcanum_level_9OperatorsInput
  rage_count: FilterFindOneLevelClass_specificRage_countOperatorsInput
  rage_damage_bonus: FilterFindOneLevelClass_specificRage_damage_bonusOperatorsInput
  sneak_attack: FilterFindOneLevelClass_specificSneak_attackOperatorsInput
  song_of_rest_die: FilterFindOneLevelClass_specificSong_of_rest_dieOperatorsInput
  sorcery_points: FilterFindOneLevelClass_specificSorcery_pointsOperatorsInput
  unarmored_movement: FilterFindOneLevelClass_specificUnarmored_movementOperatorsInput
  wild_shape_fly: FilterFindOneLevelClass_specificWild_shape_flyOperatorsInput
  wild_shape_max_cr: FilterFindOneLevelClass_specificWild_shape_max_crOperatorsInput
  wild_shape_swim: FilterFindOneLevelClass_specificWild_shape_swimOperatorsInput
}

input FilterFindOneLevelClass_specificRage_countOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificRage_damage_bonusOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificSneak_attackDice_countOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificSneak_attackDice_valueOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificSneak_attackInput {
  dice_count: Float
  dice_value: Float
}

input FilterFindOneLevelClass_specificSneak_attackOperatorsInput {
  dice_count: FilterFindOneLevelClass_specificSneak_attackDice_countOperatorsInput
  dice_value: FilterFindOneLevelClass_specificSneak_attackDice_valueOperatorsInput
}

input FilterFindOneLevelClass_specificSong_of_rest_dieOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificSorcery_pointsOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificUnarmored_movementOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificWild_shape_flyOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindOneLevelClass_specificWild_shape_max_crOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelClass_specificWild_shape_swimOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindOneLevelFeaturesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneLevelIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLevelInput {
  AND: [FilterFindOneLevelInput!]
  OR: [FilterFindOneLevelInput!]
  _id: String
  _operators: FilterFindOneLevelOperatorsInput
  ability_score_bonuses: Float
  class: FilterFindOneLevelClassInput
  class_specific: FilterFindOneLevelClass_specificInput
  features: [FilterFindOneLevelFeaturesInput]
  index: String
  level: Float
  prof_bonus: Float
  spellcasting: FilterFindOneLevelSpellcastingInput
  subclass: FilterFindOneLevelSubclassInput
  subclass_specific: FilterFindOneLevelSubclass_specificInput
  url: String
}

input FilterFindOneLevelLevelOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelOperatorsInput {
  _id: FilterFindOneLevel_idOperatorsInput
  ability_score_bonuses: FilterFindOneLevelAbility_score_bonusesOperatorsInput
  class: FilterFindOneLevelClassOperatorsInput
  class_specific: FilterFindOneLevelClass_specificOperatorsInput
  index: FilterFindOneLevelIndexOperatorsInput
  level: FilterFindOneLevelLevelOperatorsInput
  prof_bonus: FilterFindOneLevelProf_bonusOperatorsInput
  spellcasting: FilterFindOneLevelSpellcastingOperatorsInput
  subclass: FilterFindOneLevelSubclassOperatorsInput
  subclass_specific: FilterFindOneLevelSubclass_specificOperatorsInput
  url: FilterFindOneLevelUrlOperatorsInput
}

input FilterFindOneLevelProf_bonusOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingCantrips_knownOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingInput {
  cantrips_known: Float
  spell_slots_level_1: Float
  spell_slots_level_2: Float
  spell_slots_level_3: Float
  spell_slots_level_4: Float
  spell_slots_level_5: Float
  spell_slots_level_6: Float
  spell_slots_level_7: Float
  spell_slots_level_8: Float
  spell_slots_level_9: Float
  spells_known: Float
}

input FilterFindOneLevelSpellcastingOperatorsInput {
  cantrips_known: FilterFindOneLevelSpellcastingCantrips_knownOperatorsInput
  spell_slots_level_1: FilterFindOneLevelSpellcastingSpell_slots_level_1OperatorsInput
  spell_slots_level_2: FilterFindOneLevelSpellcastingSpell_slots_level_2OperatorsInput
  spell_slots_level_3: FilterFindOneLevelSpellcastingSpell_slots_level_3OperatorsInput
  spell_slots_level_4: FilterFindOneLevelSpellcastingSpell_slots_level_4OperatorsInput
  spell_slots_level_5: FilterFindOneLevelSpellcastingSpell_slots_level_5OperatorsInput
  spell_slots_level_6: FilterFindOneLevelSpellcastingSpell_slots_level_6OperatorsInput
  spell_slots_level_7: FilterFindOneLevelSpellcastingSpell_slots_level_7OperatorsInput
  spell_slots_level_8: FilterFindOneLevelSpellcastingSpell_slots_level_8OperatorsInput
  spell_slots_level_9: FilterFindOneLevelSpellcastingSpell_slots_level_9OperatorsInput
  spells_known: FilterFindOneLevelSpellcastingSpells_knownOperatorsInput
}

input FilterFindOneLevelSpellcastingSpell_slots_level_1OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingSpell_slots_level_2OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingSpell_slots_level_3OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingSpell_slots_level_4OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingSpell_slots_level_5OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingSpell_slots_level_6OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingSpell_slots_level_7OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingSpell_slots_level_8OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingSpell_slots_level_9OperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSpellcastingSpells_knownOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSubclassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLevelSubclassInput {
  index: String
  name: String
  url: String
}

input FilterFindOneLevelSubclassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLevelSubclassOperatorsInput {
  index: FilterFindOneLevelSubclassIndexOperatorsInput
  name: FilterFindOneLevelSubclassNameOperatorsInput
  url: FilterFindOneLevelSubclassUrlOperatorsInput
}

input FilterFindOneLevelSubclassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLevelSubclass_specificAdditional_magical_secrets_max_lvlOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSubclass_specificAura_rangeOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneLevelSubclass_specificInput {
  additional_magical_secrets_max_lvl: Float
  aura_range: Float
}

input FilterFindOneLevelSubclass_specificOperatorsInput {
  additional_magical_secrets_max_lvl: FilterFindOneLevelSubclass_specificAdditional_magical_secrets_max_lvlOperatorsInput
  aura_range: FilterFindOneLevelSubclass_specificAura_rangeOperatorsInput
}

input FilterFindOneLevelUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneLevel_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicItemDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicItemEquipment_categoryIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicItemEquipment_categoryInput {
  index: String
  name: String
  url: String
}

input FilterFindOneMagicItemEquipment_categoryNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicItemEquipment_categoryOperatorsInput {
  index: FilterFindOneMagicItemEquipment_categoryIndexOperatorsInput
  name: FilterFindOneMagicItemEquipment_categoryNameOperatorsInput
  url: FilterFindOneMagicItemEquipment_categoryUrlOperatorsInput
}

input FilterFindOneMagicItemEquipment_categoryUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicItemIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicItemInput {
  AND: [FilterFindOneMagicItemInput!]
  OR: [FilterFindOneMagicItemInput!]
  _id: String
  _operators: FilterFindOneMagicItemOperatorsInput
  desc: [String]
  equipment_category: FilterFindOneMagicItemEquipment_categoryInput
  index: String
  name: String
  url: String
}

input FilterFindOneMagicItemNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicItemOperatorsInput {
  _id: FilterFindOneMagicItem_idOperatorsInput
  desc: FilterFindOneMagicItemDescOperatorsInput
  equipment_category: FilterFindOneMagicItemEquipment_categoryOperatorsInput
  index: FilterFindOneMagicItemIndexOperatorsInput
  name: FilterFindOneMagicItemNameOperatorsInput
  url: FilterFindOneMagicItemUrlOperatorsInput
}

input FilterFindOneMagicItemUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicItem_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicSchoolDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicSchoolIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicSchoolInput {
  AND: [FilterFindOneMagicSchoolInput!]
  OR: [FilterFindOneMagicSchoolInput!]
  _id: String
  _operators: FilterFindOneMagicSchoolOperatorsInput
  desc: String
  index: String
  name: String
  url: String
}

input FilterFindOneMagicSchoolNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicSchoolOperatorsInput {
  _id: FilterFindOneMagicSchool_idOperatorsInput
  desc: FilterFindOneMagicSchoolDescOperatorsInput
  index: FilterFindOneMagicSchoolIndexOperatorsInput
  name: FilterFindOneMagicSchoolNameOperatorsInput
  url: FilterFindOneMagicSchoolUrlOperatorsInput
}

input FilterFindOneMagicSchoolUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMagicSchool_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterActionsDamageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindOneMonsterActionsDamageInput {
  _id: MongoID
  damage_dice: String
  damage_type: FilterFindOneMonsterActionsDamageDamage_typeInput
}

input FilterFindOneMonsterActionsInput {
  _id: MongoID
  attack_bonus: Float
  damage: [FilterFindOneMonsterActionsDamageInput]
  desc: String
  name: String
}

input FilterFindOneMonsterAlignmentOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterArmor_classOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterChallenge_ratingOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterCharismaOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterCondition_immunitiesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneMonsterConstitutionOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterDexterityOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterFormsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneMonsterHit_diceOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterHit_pointsOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterInput {
  AND: [FilterFindOneMonsterInput!]
  OR: [FilterFindOneMonsterInput!]
  _id: String
  _operators: FilterFindOneMonsterOperatorsInput
  actions: [FilterFindOneMonsterActionsInput]
  alignment: String
  armor_class: Float
  challenge_rating: Float
  charisma: Float
  condition_immunities: [FilterFindOneMonsterCondition_immunitiesInput]
  constitution: Float
  damage_immunities: [String]
  damage_resistances: [String]
  damage_vulnerabilities: [String]
  dexterity: Float
  forms: [FilterFindOneMonsterFormsInput]
  hit_dice: String
  hit_points: Float
  index: String
  intelligence: Float
  languages: String
  legendary_actions: [FilterFindOneMonsterLegendary_actionsInput]
  name: String
  proficiencies: [FilterFindOneMonsterProficienciesInput]
  reactions: [FilterFindOneMonsterReactionsInput]
  senses: FilterFindOneMonsterSensesInput
  size: String
  special_abilities: [FilterFindOneMonsterSpecial_abilitiesInput]
  speed: FilterFindOneMonsterSpeedInput
  strength: Float
  subtype: String
  type: String
  url: String
  wisdom: Float
  xp: Float
}

input FilterFindOneMonsterIntelligenceOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterLanguagesOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterLegendary_actionsInput {
  _id: MongoID
  attack_bonus: Float
  desc: String
  name: String
}

input FilterFindOneMonsterNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterOperatorsInput {
  _id: FilterFindOneMonster_idOperatorsInput
  alignment: FilterFindOneMonsterAlignmentOperatorsInput
  armor_class: FilterFindOneMonsterArmor_classOperatorsInput
  challenge_rating: FilterFindOneMonsterChallenge_ratingOperatorsInput
  charisma: FilterFindOneMonsterCharismaOperatorsInput
  constitution: FilterFindOneMonsterConstitutionOperatorsInput
  dexterity: FilterFindOneMonsterDexterityOperatorsInput
  hit_dice: FilterFindOneMonsterHit_diceOperatorsInput
  hit_points: FilterFindOneMonsterHit_pointsOperatorsInput
  index: FilterFindOneMonsterIndexOperatorsInput
  intelligence: FilterFindOneMonsterIntelligenceOperatorsInput
  languages: FilterFindOneMonsterLanguagesOperatorsInput
  name: FilterFindOneMonsterNameOperatorsInput
  senses: FilterFindOneMonsterSensesOperatorsInput
  size: FilterFindOneMonsterSizeOperatorsInput
  speed: FilterFindOneMonsterSpeedOperatorsInput
  strength: FilterFindOneMonsterStrengthOperatorsInput
  subtype: FilterFindOneMonsterSubtypeOperatorsInput
  type: FilterFindOneMonsterTypeOperatorsInput
  url: FilterFindOneMonsterUrlOperatorsInput
  wisdom: FilterFindOneMonsterWisdomOperatorsInput
  xp: FilterFindOneMonsterXpOperatorsInput
}

input FilterFindOneMonsterProficienciesInput {
  _id: MongoID
  proficiency: FilterFindOneMonsterProficienciesProficiencyInput
  value: Float
}

input FilterFindOneMonsterProficienciesProficiencyInput {
  index: String
  name: String
  url: String
}

input FilterFindOneMonsterReactionsInput {
  _id: MongoID
  desc: String
  name: String
}

input FilterFindOneMonsterSensesBlindsightOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterSensesDarkvisionOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterSensesInput {
  blindsight: String
  darkvision: String
  passive_perception: Float
  tremorsense: String
  truesight: String
}

input FilterFindOneMonsterSensesOperatorsInput {
  blindsight: FilterFindOneMonsterSensesBlindsightOperatorsInput
  darkvision: FilterFindOneMonsterSensesDarkvisionOperatorsInput
  passive_perception: FilterFindOneMonsterSensesPassive_perceptionOperatorsInput
  tremorsense: FilterFindOneMonsterSensesTremorsenseOperatorsInput
  truesight: FilterFindOneMonsterSensesTruesightOperatorsInput
}

input FilterFindOneMonsterSensesPassive_perceptionOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterSensesTremorsenseOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterSensesTruesightOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterSizeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterSpecial_abilitiesInput {
  _id: MongoID
  desc: String
  name: String
}

input FilterFindOneMonsterSpeedBurrowOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterSpeedClimbOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterSpeedFlyOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterSpeedHoverOperatorsInput {
  exists: Boolean
  gt: Boolean
  gte: Boolean
  in: [Boolean]
  lt: Boolean
  lte: Boolean
  ne: Boolean
  nin: [Boolean]
}

input FilterFindOneMonsterSpeedInput {
  burrow: String
  climb: String
  fly: String
  hover: Boolean
  swim: String
  walk: String
}

input FilterFindOneMonsterSpeedOperatorsInput {
  burrow: FilterFindOneMonsterSpeedBurrowOperatorsInput
  climb: FilterFindOneMonsterSpeedClimbOperatorsInput
  fly: FilterFindOneMonsterSpeedFlyOperatorsInput
  hover: FilterFindOneMonsterSpeedHoverOperatorsInput
  swim: FilterFindOneMonsterSpeedSwimOperatorsInput
  walk: FilterFindOneMonsterSpeedWalkOperatorsInput
}

input FilterFindOneMonsterSpeedSwimOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterSpeedWalkOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterStrengthOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterSubtypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneMonsterWisdomOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonsterXpOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneMonster_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneProficiencyClassesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneProficiencyIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneProficiencyInput {
  AND: [FilterFindOneProficiencyInput!]
  OR: [FilterFindOneProficiencyInput!]
  _id: String
  _operators: FilterFindOneProficiencyOperatorsInput
  classes: [FilterFindOneProficiencyClassesInput]
  index: String
  name: String
  races: [FilterFindOneProficiencyRacesInput]
  references: [FilterFindOneProficiencyReferencesInput]
  type: String
  url: String
}

input FilterFindOneProficiencyNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneProficiencyOperatorsInput {
  _id: FilterFindOneProficiency_idOperatorsInput
  index: FilterFindOneProficiencyIndexOperatorsInput
  name: FilterFindOneProficiencyNameOperatorsInput
  type: FilterFindOneProficiencyTypeOperatorsInput
  url: FilterFindOneProficiencyUrlOperatorsInput
}

input FilterFindOneProficiencyRacesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneProficiencyReferencesInput {
  _id: MongoID
  index: String
  name: String
  type: String
  url: String
}

input FilterFindOneProficiencyTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneProficiencyUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneProficiency_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceAbility_bonus_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindOneRaceAbility_bonus_optionsFromInput {
  _id: MongoID
  ability_score: FilterFindOneRaceAbility_bonus_optionsFromAbility_scoreInput
  bonus: Float
}

input FilterFindOneRaceAbility_bonus_optionsInput {
  choose: Float
  from: [FilterFindOneRaceAbility_bonus_optionsFromInput]
  type: String
}

input FilterFindOneRaceAbility_bonus_optionsOperatorsInput {
  choose: FilterFindOneRaceAbility_bonus_optionsChooseOperatorsInput
  type: FilterFindOneRaceAbility_bonus_optionsTypeOperatorsInput
}

input FilterFindOneRaceAbility_bonus_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceAbility_bonusesAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindOneRaceAbility_bonusesInput {
  _id: MongoID
  ability_score: FilterFindOneRaceAbility_bonusesAbility_scoreInput
  bonus: Float
}

input FilterFindOneRaceAgeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceAlignmentOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceInput {
  AND: [FilterFindOneRaceInput!]
  OR: [FilterFindOneRaceInput!]
  _id: String
  _operators: FilterFindOneRaceOperatorsInput
  ability_bonus_options: FilterFindOneRaceAbility_bonus_optionsInput
  ability_bonuses: [FilterFindOneRaceAbility_bonusesInput]
  age: String
  alignment: String
  index: String
  language_desc: String
  language_options: FilterFindOneRaceLanguage_optionsInput
  languages: [FilterFindOneRaceLanguagesInput]
  name: String
  size: String
  size_description: String
  speed: Float
  starting_proficiencies: [FilterFindOneRaceStarting_proficienciesInput]
  starting_proficiency_options: FilterFindOneRaceStarting_proficiency_optionsInput
  subraces: [FilterFindOneRaceSubracesInput]
  traits: [FilterFindOneRaceTraitsInput]
  url: String
}

input FilterFindOneRaceLanguage_descOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceLanguage_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneRaceLanguage_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneRaceLanguage_optionsInput {
  choose: Float
  from: [FilterFindOneRaceLanguage_optionsFromInput]
  type: String
}

input FilterFindOneRaceLanguage_optionsOperatorsInput {
  choose: FilterFindOneRaceLanguage_optionsChooseOperatorsInput
  type: FilterFindOneRaceLanguage_optionsTypeOperatorsInput
}

input FilterFindOneRaceLanguage_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceLanguagesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneRaceNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceOperatorsInput {
  _id: FilterFindOneRace_idOperatorsInput
  ability_bonus_options: FilterFindOneRaceAbility_bonus_optionsOperatorsInput
  age: FilterFindOneRaceAgeOperatorsInput
  alignment: FilterFindOneRaceAlignmentOperatorsInput
  index: FilterFindOneRaceIndexOperatorsInput
  language_desc: FilterFindOneRaceLanguage_descOperatorsInput
  language_options: FilterFindOneRaceLanguage_optionsOperatorsInput
  name: FilterFindOneRaceNameOperatorsInput
  size: FilterFindOneRaceSizeOperatorsInput
  size_description: FilterFindOneRaceSize_descriptionOperatorsInput
  speed: FilterFindOneRaceSpeedOperatorsInput
  starting_proficiency_options: FilterFindOneRaceStarting_proficiency_optionsOperatorsInput
  url: FilterFindOneRaceUrlOperatorsInput
}

input FilterFindOneRaceSizeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceSize_descriptionOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceSpeedOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneRaceStarting_proficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneRaceStarting_proficiency_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneRaceStarting_proficiency_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneRaceStarting_proficiency_optionsInput {
  choose: Float
  from: [FilterFindOneRaceStarting_proficiency_optionsFromInput]
  type: String
}

input FilterFindOneRaceStarting_proficiency_optionsOperatorsInput {
  choose: FilterFindOneRaceStarting_proficiency_optionsChooseOperatorsInput
  type: FilterFindOneRaceStarting_proficiency_optionsTypeOperatorsInput
}

input FilterFindOneRaceStarting_proficiency_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRaceSubracesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneRaceTraitsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneRaceUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRace_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRuleDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRuleIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRuleInput {
  AND: [FilterFindOneRuleInput!]
  OR: [FilterFindOneRuleInput!]
  _id: String
  _operators: FilterFindOneRuleOperatorsInput
  desc: String
  index: String
  name: String
  subsections: [FilterFindOneRuleSubsectionsInput]
  url: String
}

input FilterFindOneRuleNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRuleOperatorsInput {
  _id: FilterFindOneRule_idOperatorsInput
  desc: FilterFindOneRuleDescOperatorsInput
  index: FilterFindOneRuleIndexOperatorsInput
  name: FilterFindOneRuleNameOperatorsInput
  url: FilterFindOneRuleUrlOperatorsInput
}

input FilterFindOneRuleSectionDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRuleSectionIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRuleSectionInput {
  AND: [FilterFindOneRuleSectionInput!]
  OR: [FilterFindOneRuleSectionInput!]
  _id: String
  _operators: FilterFindOneRuleSectionOperatorsInput
  desc: String
  index: String
  name: String
  url: String
}

input FilterFindOneRuleSectionNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRuleSectionOperatorsInput {
  _id: FilterFindOneRuleSection_idOperatorsInput
  desc: FilterFindOneRuleSectionDescOperatorsInput
  index: FilterFindOneRuleSectionIndexOperatorsInput
  name: FilterFindOneRuleSectionNameOperatorsInput
  url: FilterFindOneRuleSectionUrlOperatorsInput
}

input FilterFindOneRuleSectionUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRuleSection_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRuleSubsectionsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneRuleUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneRule_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSkillAbility_scoreIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSkillAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindOneSkillAbility_scoreNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSkillAbility_scoreOperatorsInput {
  index: FilterFindOneSkillAbility_scoreIndexOperatorsInput
  name: FilterFindOneSkillAbility_scoreNameOperatorsInput
  url: FilterFindOneSkillAbility_scoreUrlOperatorsInput
}

input FilterFindOneSkillAbility_scoreUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSkillDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSkillIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSkillInput {
  AND: [FilterFindOneSkillInput!]
  OR: [FilterFindOneSkillInput!]
  _id: String
  _operators: FilterFindOneSkillOperatorsInput
  ability_score: FilterFindOneSkillAbility_scoreInput
  desc: [String]
  index: String
  name: String
  url: String
}

input FilterFindOneSkillNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSkillOperatorsInput {
  _id: FilterFindOneSkill_idOperatorsInput
  ability_score: FilterFindOneSkillAbility_scoreOperatorsInput
  desc: FilterFindOneSkillDescOperatorsInput
  index: FilterFindOneSkillIndexOperatorsInput
  name: FilterFindOneSkillNameOperatorsInput
  url: FilterFindOneSkillUrlOperatorsInput
}

input FilterFindOneSkillUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSkill_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSpellArea_of_effectInput {
  size: Float
  type: String
}

input FilterFindOneSpellClassesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneSpellDamageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindOneSpellDamageInput {
  damage_at_character_level: JSON
  damage_at_slot_level: JSON
  damage_type: FilterFindOneSpellDamageDamage_typeInput
}

input FilterFindOneSpellDcDc_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindOneSpellDcInput {
  dc_success: String
  dc_type: FilterFindOneSpellDcDc_typeInput
  desc: String
}

input FilterFindOneSpellInput {
  AND: [FilterFindOneSpellInput!]
  OR: [FilterFindOneSpellInput!]
  _id: String
  _operators: FilterFindOneSpellOperatorsInput
  area_of_effect: FilterFindOneSpellArea_of_effectInput
  attack_type: String
  casting_time: String
  classes: [FilterFindOneSpellClassesInput]
  components: [String]
  concentration: Boolean
  damage: FilterFindOneSpellDamageInput
  dc: FilterFindOneSpellDcInput
  desc: [String]
  duration: String
  heal_at_slot_level: JSON
  higher_level: [String]
  index: String
  level: Float
  material: String
  name: String
  range: String
  ritual: Boolean
  school: FilterFindOneSpellSchoolInput
  subclasses: [FilterFindOneSpellSubclassesInput]
  url: String
}

input FilterFindOneSpellOperatorsInput {
  _id: FilterFindOneSpell_idOperatorsInput
  school: FilterFindOneSpellSchoolOperatorsInput
}

input FilterFindOneSpellSchoolIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSpellSchoolInput {
  index: String
  name: String
  url: String
}

input FilterFindOneSpellSchoolNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSpellSchoolOperatorsInput {
  index: FilterFindOneSpellSchoolIndexOperatorsInput
  name: FilterFindOneSpellSchoolNameOperatorsInput
  url: FilterFindOneSpellSchoolUrlOperatorsInput
}

input FilterFindOneSpellSchoolUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSpellSubclassesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneSpell_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclassClassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclassClassInput {
  index: String
  name: String
  url: String
}

input FilterFindOneSubclassClassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclassClassOperatorsInput {
  index: FilterFindOneSubclassClassIndexOperatorsInput
  name: FilterFindOneSubclassClassNameOperatorsInput
  url: FilterFindOneSubclassClassUrlOperatorsInput
}

input FilterFindOneSubclassClassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclassDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclassIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclassInput {
  AND: [FilterFindOneSubclassInput!]
  OR: [FilterFindOneSubclassInput!]
  _id: String
  _operators: FilterFindOneSubclassOperatorsInput
  class: FilterFindOneSubclassClassInput
  desc: [String]
  index: String
  name: String
  spells: [FilterFindOneSubclassSpellsInput]
  subclass_flavor: String
  subclass_levels: String
  url: String
}

input FilterFindOneSubclassNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclassOperatorsInput {
  _id: FilterFindOneSubclass_idOperatorsInput
  class: FilterFindOneSubclassClassOperatorsInput
  desc: FilterFindOneSubclassDescOperatorsInput
  index: FilterFindOneSubclassIndexOperatorsInput
  name: FilterFindOneSubclassNameOperatorsInput
  subclass_flavor: FilterFindOneSubclassSubclass_flavorOperatorsInput
  subclass_levels: FilterFindOneSubclassSubclass_levelsOperatorsInput
  url: FilterFindOneSubclassUrlOperatorsInput
}

input FilterFindOneSubclassSpellsInput {
  _id: MongoID
  prerequisites: [FilterFindOneSubclassSpellsPrerequisitesInput]
  spell: FilterFindOneSubclassSpellsSpellInput
}

input FilterFindOneSubclassSpellsPrerequisitesInput {
  _id: MongoID
  index: String
  name: String
  type: String
  url: String
}

input FilterFindOneSubclassSpellsSpellInput {
  index: String
  name: String
  url: String
}

input FilterFindOneSubclassSubclass_flavorOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclassSubclass_levelsOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclassUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubclass_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubraceAbility_bonusesAbility_scoreInput {
  index: String
  name: String
  url: String
}

input FilterFindOneSubraceAbility_bonusesInput {
  _id: MongoID
  ability_score: FilterFindOneSubraceAbility_bonusesAbility_scoreInput
  bonus: Float
}

input FilterFindOneSubraceDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubraceIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubraceInput {
  AND: [FilterFindOneSubraceInput!]
  OR: [FilterFindOneSubraceInput!]
  _id: String
  _operators: FilterFindOneSubraceOperatorsInput
  ability_bonuses: [FilterFindOneSubraceAbility_bonusesInput]
  desc: String
  index: String
  language_options: FilterFindOneSubraceLanguage_optionsInput
  name: String
  race: FilterFindOneSubraceRaceInput
  racial_traits: [FilterFindOneSubraceRacial_traitsInput]
  starting_proficiencies: [FilterFindOneSubraceStarting_proficienciesInput]
  url: String
}

input FilterFindOneSubraceLanguage_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneSubraceLanguage_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneSubraceLanguage_optionsInput {
  choose: Float
  from: [FilterFindOneSubraceLanguage_optionsFromInput]
  type: String
}

input FilterFindOneSubraceLanguage_optionsOperatorsInput {
  choose: FilterFindOneSubraceLanguage_optionsChooseOperatorsInput
  type: FilterFindOneSubraceLanguage_optionsTypeOperatorsInput
}

input FilterFindOneSubraceLanguage_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubraceNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubraceOperatorsInput {
  _id: FilterFindOneSubrace_idOperatorsInput
  desc: FilterFindOneSubraceDescOperatorsInput
  index: FilterFindOneSubraceIndexOperatorsInput
  language_options: FilterFindOneSubraceLanguage_optionsOperatorsInput
  name: FilterFindOneSubraceNameOperatorsInput
  race: FilterFindOneSubraceRaceOperatorsInput
  url: FilterFindOneSubraceUrlOperatorsInput
}

input FilterFindOneSubraceRaceIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubraceRaceInput {
  index: String
  name: String
  url: String
}

input FilterFindOneSubraceRaceNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubraceRaceOperatorsInput {
  index: FilterFindOneSubraceRaceIndexOperatorsInput
  name: FilterFindOneSubraceRaceNameOperatorsInput
  url: FilterFindOneSubraceRaceUrlOperatorsInput
}

input FilterFindOneSubraceRaceUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubraceRacial_traitsInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneSubraceStarting_proficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneSubraceUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneSubrace_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitInput {
  AND: [FilterFindOneTraitInput!]
  OR: [FilterFindOneTraitInput!]
  _id: String
  _operators: FilterFindOneTraitOperatorsInput
  desc: [String]
  index: String
  name: String
  parent: FilterFindOneTraitParentInput
  proficiencies: [FilterFindOneTraitProficienciesInput]
  proficiency_choices: FilterFindOneTraitProficiency_choicesInput
  races: [FilterFindOneTraitRacesInput]
  subraces: [FilterFindOneTraitSubracesInput]
  trait_specific: FilterFindOneTraitTrait_specificInput
  url: String
}

input FilterFindOneTraitNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitOperatorsInput {
  _id: FilterFindOneTrait_idOperatorsInput
  desc: FilterFindOneTraitDescOperatorsInput
  index: FilterFindOneTraitIndexOperatorsInput
  name: FilterFindOneTraitNameOperatorsInput
  parent: FilterFindOneTraitParentOperatorsInput
  proficiency_choices: FilterFindOneTraitProficiency_choicesOperatorsInput
  trait_specific: FilterFindOneTraitTrait_specificOperatorsInput
  url: FilterFindOneTraitUrlOperatorsInput
}

input FilterFindOneTraitParentIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitParentInput {
  index: String
  name: String
  url: String
}

input FilterFindOneTraitParentNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitParentOperatorsInput {
  index: FilterFindOneTraitParentIndexOperatorsInput
  name: FilterFindOneTraitParentNameOperatorsInput
  url: FilterFindOneTraitParentUrlOperatorsInput
}

input FilterFindOneTraitParentUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitProficienciesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneTraitProficiency_choicesChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneTraitProficiency_choicesFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneTraitProficiency_choicesInput {
  choose: Float
  from: [FilterFindOneTraitProficiency_choicesFromInput]
  type: String
}

input FilterFindOneTraitProficiency_choicesOperatorsInput {
  choose: FilterFindOneTraitProficiency_choicesChooseOperatorsInput
  type: FilterFindOneTraitProficiency_choicesTypeOperatorsInput
}

input FilterFindOneTraitProficiency_choicesTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitRacesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneTraitSubracesInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneTraitTrait_specificBreath_weaponDamageDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindOneTraitTrait_specificBreath_weaponDamageInput {
  _id: MongoID
  damage_at_character_level: JSON
  damage_type: FilterFindOneTraitTrait_specificBreath_weaponDamageDamage_typeInput
}

input FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeOperatorsInput {
  index: FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeIndexOperatorsInput
  name: FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeNameOperatorsInput
  url: FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeUrlOperatorsInput
}

input FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificBreath_weaponDcInput {
  dc_type: FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeInput
  success_type: String
}

input FilterFindOneTraitTrait_specificBreath_weaponDcOperatorsInput {
  dc_type: FilterFindOneTraitTrait_specificBreath_weaponDcDc_typeOperatorsInput
  success_type: FilterFindOneTraitTrait_specificBreath_weaponDcSuccess_typeOperatorsInput
}

input FilterFindOneTraitTrait_specificBreath_weaponDcSuccess_typeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificBreath_weaponDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificBreath_weaponInput {
  damage: [FilterFindOneTraitTrait_specificBreath_weaponDamageInput]
  dc: FilterFindOneTraitTrait_specificBreath_weaponDcInput
  desc: String
  name: String
  usage: FilterFindOneTraitTrait_specificBreath_weaponUsageInput
}

input FilterFindOneTraitTrait_specificBreath_weaponNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificBreath_weaponOperatorsInput {
  dc: FilterFindOneTraitTrait_specificBreath_weaponDcOperatorsInput
  desc: FilterFindOneTraitTrait_specificBreath_weaponDescOperatorsInput
  name: FilterFindOneTraitTrait_specificBreath_weaponNameOperatorsInput
  usage: FilterFindOneTraitTrait_specificBreath_weaponUsageOperatorsInput
}

input FilterFindOneTraitTrait_specificBreath_weaponUsageInput {
  times: Float
  type: String
}

input FilterFindOneTraitTrait_specificBreath_weaponUsageOperatorsInput {
  times: FilterFindOneTraitTrait_specificBreath_weaponUsageTimesOperatorsInput
  type: FilterFindOneTraitTrait_specificBreath_weaponUsageTypeOperatorsInput
}

input FilterFindOneTraitTrait_specificBreath_weaponUsageTimesOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneTraitTrait_specificBreath_weaponUsageTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificDamage_typeIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificDamage_typeInput {
  index: String
  name: String
  url: String
}

input FilterFindOneTraitTrait_specificDamage_typeNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificDamage_typeOperatorsInput {
  index: FilterFindOneTraitTrait_specificDamage_typeIndexOperatorsInput
  name: FilterFindOneTraitTrait_specificDamage_typeNameOperatorsInput
  url: FilterFindOneTraitTrait_specificDamage_typeUrlOperatorsInput
}

input FilterFindOneTraitTrait_specificDamage_typeUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificInput {
  breath_weapon: FilterFindOneTraitTrait_specificBreath_weaponInput
  damage_type: FilterFindOneTraitTrait_specificDamage_typeInput
  spell_options: FilterFindOneTraitTrait_specificSpell_optionsInput
  subtrait_options: FilterFindOneTraitTrait_specificSubtrait_optionsInput
}

input FilterFindOneTraitTrait_specificOperatorsInput {
  breath_weapon: FilterFindOneTraitTrait_specificBreath_weaponOperatorsInput
  damage_type: FilterFindOneTraitTrait_specificDamage_typeOperatorsInput
  spell_options: FilterFindOneTraitTrait_specificSpell_optionsOperatorsInput
  subtrait_options: FilterFindOneTraitTrait_specificSubtrait_optionsOperatorsInput
}

input FilterFindOneTraitTrait_specificSpell_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneTraitTrait_specificSpell_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneTraitTrait_specificSpell_optionsInput {
  choose: Float
  from: [FilterFindOneTraitTrait_specificSpell_optionsFromInput]
  type: String
}

input FilterFindOneTraitTrait_specificSpell_optionsOperatorsInput {
  choose: FilterFindOneTraitTrait_specificSpell_optionsChooseOperatorsInput
  type: FilterFindOneTraitTrait_specificSpell_optionsTypeOperatorsInput
}

input FilterFindOneTraitTrait_specificSpell_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitTrait_specificSubtrait_optionsChooseOperatorsInput {
  exists: Boolean
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input FilterFindOneTraitTrait_specificSubtrait_optionsFromInput {
  _id: MongoID
  index: String
  name: String
  url: String
}

input FilterFindOneTraitTrait_specificSubtrait_optionsInput {
  choose: Float
  from: [FilterFindOneTraitTrait_specificSubtrait_optionsFromInput]
  type: String
}

input FilterFindOneTraitTrait_specificSubtrait_optionsOperatorsInput {
  choose: FilterFindOneTraitTrait_specificSubtrait_optionsChooseOperatorsInput
  type: FilterFindOneTraitTrait_specificSubtrait_optionsTypeOperatorsInput
}

input FilterFindOneTraitTrait_specificSubtrait_optionsTypeOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTraitUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneTrait_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneWeaponPropertyDescOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneWeaponPropertyIndexOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneWeaponPropertyInput {
  AND: [FilterFindOneWeaponPropertyInput!]
  OR: [FilterFindOneWeaponPropertyInput!]
  _id: String
  _operators: FilterFindOneWeaponPropertyOperatorsInput
  desc: [String]
  index: String
  name: String
  url: String
}

input FilterFindOneWeaponPropertyNameOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneWeaponPropertyOperatorsInput {
  _id: FilterFindOneWeaponProperty_idOperatorsInput
  desc: FilterFindOneWeaponPropertyDescOperatorsInput
  index: FilterFindOneWeaponPropertyIndexOperatorsInput
  name: FilterFindOneWeaponPropertyNameOperatorsInput
  url: FilterFindOneWeaponPropertyUrlOperatorsInput
}

input FilterFindOneWeaponPropertyUrlOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

input FilterFindOneWeaponProperty_idOperatorsInput {
  exists: Boolean
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  nin: [String]
  regex: RegExpAsString
}

scalar JSON

type Language {
  _id: String!
  desc: String
  index: String
  name: String
  script: String
  type: String
  typical_speakers: [String]
  url: String
}

type Level {
  _id: String!
  ability_score_bonuses: Float
  class: LevelClass
  class_specific: LevelClass_specific
  features(limit: Int = 100, skip: Int, sort: SortFindManyFeatureInput): [Feature!]!
  index: String
  level: Float
  prof_bonus: Float
  spellcasting: LevelSpellcasting
  subclass: LevelSubclass
  subclass_specific: LevelSubclass_specific
  url: String
}

type LevelClass {
  index: String
  name: String
  url: String
}

type LevelClass_specific {
  action_surges: Float
  arcane_recovery_levels: Float
  aura_range: Float
  bardic_inspiration_die: Float
  brutal_critical_dice: Float
  channel_divinity_charges: Float
  creating_spell_slots: [LevelClass_specificCreating_spell_slots]
  destroy_undead_cr: Float
  extra_attacks: Float
  favored_enemies: Float
  favored_terrain: Float
  indomitable_uses: Float
  invocations_known: Float
  ki_points: Float
  magical_secrets_max_5: Float
  magical_secrets_max_7: Float
  magical_secrets_max_9: Float
  martial_arts: LevelClass_specificMartial_arts
  metamagic_known: Float
  mystic_arcanum_level_6: Float
  mystic_arcanum_level_7: Float
  mystic_arcanum_level_8: Float
  mystic_arcanum_level_9: Float
  rage_count: Float
  rage_damage_bonus: Float
  sneak_attack: LevelClass_specificSneak_attack
  song_of_rest_die: Float
  sorcery_points: Float
  unarmored_movement: Float
  wild_shape_fly: Boolean
  wild_shape_max_cr: Float
  wild_shape_swim: Boolean
}

type LevelClass_specificCreating_spell_slots {
  _id: MongoID
  sorcery_point_cost: Float
  spell_slot_level: Float
}

type LevelClass_specificMartial_arts {
  dice_count: Float
  dice_value: Float
}

type LevelClass_specificSneak_attack {
  dice_count: Float
  dice_value: Float
}

type LevelSpellcasting {
  cantrips_known: Float
  spell_slots_level_1: Float
  spell_slots_level_2: Float
  spell_slots_level_3: Float
  spell_slots_level_4: Float
  spell_slots_level_5: Float
  spell_slots_level_6: Float
  spell_slots_level_7: Float
  spell_slots_level_8: Float
  spell_slots_level_9: Float
  spells_known: Float
}

type LevelSubclass {
  index: String
  name: String
  url: String
}

type LevelSubclass_specific {
  additional_magical_secrets_max_lvl: Float
  aura_range: Float
}

type MagicItem {
  _id: String!
  desc: [String]
  equipment_category: MagicItemEquipment_category
  index: String
  name: String
  url: String
}

type MagicItemEquipment_category {
  index: String
  name: String
  url: String
}

type MagicSchool {
  _id: String!
  desc: String
  index: String
  name: String
  url: String
}

scalar MongoID

type Monster {
  _id: String!
  actions: [MonsterActions]
  alignment: String
  armor_class: Float
  challenge_rating: Float
  charisma: Float
  condition_immunities: [MonsterCondition_immunities]
  constitution: Float
  damage_immunities: [String]
  damage_resistances: [String]
  damage_vulnerabilities: [String]
  dexterity: Float
  forms: [MonsterForms]
  hit_dice: String
  hit_points: Float
  index: String
  intelligence: Float
  languages: String
  legendary_actions: [MonsterLegendary_actions]
  name: String
  proficiencies: [MonsterProficiencies]
  reactions: [MonsterReactions]
  senses: MonsterSenses
  size: String
  special_abilities: [MonsterSpecial_abilities]
  speed: MonsterSpeed
  strength: Float
  subtype: String
  type: String
  url: String
  wisdom: Float
  xp: Float
}

type MonsterActions {
  _id: MongoID
  attack_bonus: Float
  damage: [MonsterActionsDamage]
  desc: String
  name: String
}

type MonsterActionsDamage {
  _id: MongoID
  damage_dice: String
  damage_type: MonsterActionsDamageDamage_type
}

type MonsterActionsDamageDamage_type {
  index: String
  name: String
  url: String
}

type MonsterCondition_immunities {
  _id: MongoID
  index: String
  name: String
  url: String
}

type MonsterForms {
  _id: MongoID
  index: String
  name: String
  url: String
}

type MonsterLegendary_actions {
  _id: MongoID
  attack_bonus: Float
  desc: String
  name: String
}

type MonsterProficiencies {
  _id: MongoID
  proficiency: MonsterProficienciesProficiency
  value: Float
}

type MonsterProficienciesProficiency {
  index: String
  name: String
  url: String
}

type MonsterReactions {
  _id: MongoID
  desc: String
  name: String
}

type MonsterSenses {
  blindsight: String
  darkvision: String
  passive_perception: Float
  tremorsense: String
  truesight: String
}

type MonsterSpecial_abilities {
  _id: MongoID
  desc: String
  name: String
}

type MonsterSpeed {
  burrow: String
  climb: String
  fly: String
  hover: Boolean
  swim: String
  walk: String
}

type Mutation {
  addChar(options: CharObject!): CharResponse @join__field(graph: LOCALSPELLBOOK)
  addChar_Spell(options: Char_SpellObject!): Char_SpellResponse @join__field(graph: LOCALSPELLBOOK)
  createNote(options: NoteObject!): NoteResponse @join__field(graph: LOCALSPELLBOOK)
  deleteChar(charId: Float!): String @join__field(graph: LOCALSPELLBOOK)
  deleteCharSpell(charSpellId: Float!): String @join__field(graph: LOCALSPELLBOOK)
  deleteNote(noteId: Float!): String @join__field(graph: LOCALSPELLBOOK)
  register(options: UserObject!): UserResponse @join__field(graph: LOCALSPELLBOOK)
}

type Note {
  char_spell: Float!
  createdAt: DateTime!
  id: Float!
  text: String!
  title: String!
  updatedAt: DateTime!
}

input NoteObject {
  char_spellId: Float!
  text: String!
  title: String!
}

type NoteResponse {
  errors: String
  note: [Note!]
}

type Proficiency {
  _id: String!
  classes: [ProficiencyClasses]
  index: String
  name: String
  races: [ProficiencyRaces]
  references: [ProficiencyReferences]
  type: String
  url: String
}

type ProficiencyClasses {
  _id: MongoID
  index: String
  name: String
  url: String
}

type ProficiencyRaces {
  _id: MongoID
  index: String
  name: String
  url: String
}

type ProficiencyReferences {
  _id: MongoID
  index: String
  name: String
  type: String
  url: String
}

type Query {
  abilityScore(filter: FilterFindOneAbilityScoreInput, skip: Int, sort: SortFindOneAbilityScoreInput): AbilityScore @join__field(graph: _5EDNDAPI)
  abilityScores(filter: FilterFindManyAbilityScoreInput, limit: Int = 100, skip: Int, sort: SortFindManyAbilityScoreInput): [AbilityScore!]! @join__field(graph: _5EDNDAPI)
  alignment(filter: FilterFindOneAlignmentInput, skip: Int, sort: SortFindOneAlignmentInput): Alignment @join__field(graph: _5EDNDAPI)
  alignments(filter: FilterFindManyAlignmentInput, limit: Int = 100, skip: Int, sort: SortFindManyAlignmentInput): [Alignment!]! @join__field(graph: _5EDNDAPI)
  background(filter: FilterFindOneBackgroundInput, skip: Int, sort: SortFindOneBackgroundInput): Background @join__field(graph: _5EDNDAPI)
  backgrounds(filter: FilterFindManyBackgroundInput, limit: Int = 100, skip: Int, sort: SortFindManyBackgroundInput): [Background!]! @join__field(graph: _5EDNDAPI)
  class(filter: FilterFindOneClassInput, skip: Int, sort: SortFindOneClassInput): Class @join__field(graph: _5EDNDAPI)
  classes(filter: FilterFindManyClassInput, limit: Int = 100, skip: Int, sort: SortFindManyClassInput): [Class!]! @join__field(graph: _5EDNDAPI)
  condition(filter: FilterFindOneConditionInput, skip: Int, sort: SortFindOneConditionInput): Condition @join__field(graph: _5EDNDAPI)
  conditions(filter: FilterFindManyConditionInput, limit: Int = 100, skip: Int, sort: SortFindManyConditionInput): [Condition!]! @join__field(graph: _5EDNDAPI)
  damageType(filter: FilterFindOneDamageTypeInput, skip: Int, sort: SortFindOneDamageTypeInput): DamageType @join__field(graph: _5EDNDAPI)
  damageTypes(filter: FilterFindManyDamageTypeInput, limit: Int = 100, skip: Int, sort: SortFindManyDamageTypeInput): [DamageType!]! @join__field(graph: _5EDNDAPI)
  equipment(filter: FilterFindOneEquipmentInput, skip: Int, sort: SortFindOneEquipmentInput): Equipment @join__field(graph: _5EDNDAPI)
  equipmentCategories(filter: FilterFindManyEquipmentCategoryInput, limit: Int = 100, skip: Int, sort: SortFindManyEquipmentCategoryInput): [EquipmentCategory!]! @join__field(graph: _5EDNDAPI)
  equipmentCategory(filter: FilterFindOneEquipmentCategoryInput, skip: Int, sort: SortFindOneEquipmentCategoryInput): EquipmentCategory @join__field(graph: _5EDNDAPI)
  equipments(filter: FilterFindManyEquipmentInput, limit: Int = 100, skip: Int, sort: SortFindManyEquipmentInput): [Equipment!]! @join__field(graph: _5EDNDAPI)
  feat(filter: FilterFindOneFeatInput, skip: Int, sort: SortFindOneFeatInput): Feat @join__field(graph: _5EDNDAPI)
  feats(filter: FilterFindManyFeatInput, limit: Int = 100, skip: Int, sort: SortFindManyFeatInput): [Feat!]! @join__field(graph: _5EDNDAPI)
  feature(filter: FilterFindOneFeatureInput, skip: Int, sort: SortFindOneFeatureInput): Feature @join__field(graph: _5EDNDAPI)
  features(filter: FilterFindManyFeatureInput, limit: Int = 100, skip: Int, sort: SortFindManyFeatureInput): [Feature!]! @join__field(graph: _5EDNDAPI)
  getCharSpells(options: Float!): Char_SpellResponse @join__field(graph: LOCALSPELLBOOK)
  language(filter: FilterFindOneLanguageInput, skip: Int, sort: SortFindOneLanguageInput): Language @join__field(graph: _5EDNDAPI)
  languages(filter: FilterFindManyLanguageInput, limit: Int = 100, skip: Int, sort: SortFindManyLanguageInput): [Language!]! @join__field(graph: _5EDNDAPI)
  level(filter: FilterFindOneLevelInput, skip: Int, sort: SortFindOneLevelInput): Level @join__field(graph: _5EDNDAPI)
  levels(filter: FilterFindManyLevelInput, limit: Int = 100, skip: Int, sort: SortFindManyLevelInput): [Level!]! @join__field(graph: _5EDNDAPI)
  magicItem(filter: FilterFindOneMagicItemInput, skip: Int, sort: SortFindOneMagicItemInput): MagicItem @join__field(graph: _5EDNDAPI)
  magicItems(filter: FilterFindManyMagicItemInput, limit: Int = 100, skip: Int, sort: SortFindManyMagicItemInput): [MagicItem!]! @join__field(graph: _5EDNDAPI)
  magicSchool(filter: FilterFindOneMagicSchoolInput, skip: Int, sort: SortFindOneMagicSchoolInput): MagicSchool @join__field(graph: _5EDNDAPI)
  magicSchools(filter: FilterFindManyMagicSchoolInput, limit: Int = 100, skip: Int, sort: SortFindManyMagicSchoolInput): [MagicSchool!]! @join__field(graph: _5EDNDAPI)
  me(email: String!): User @join__field(graph: LOCALSPELLBOOK)
  monster(filter: FilterFindOneMonsterInput, skip: Int, sort: SortFindOneMonsterInput): Monster @join__field(graph: _5EDNDAPI)
  monsters(filter: FilterFindManyMonsterInput, limit: Int = 100, skip: Int, sort: SortFindManyMonsterInput): [Monster!]! @join__field(graph: _5EDNDAPI)
  myChars(email: String!): CharResponse @join__field(graph: LOCALSPELLBOOK)
  myNotes(options: Float!): NoteResponse @join__field(graph: LOCALSPELLBOOK)
  proficiencies(filter: FilterFindManyProficiencyInput, limit: Int = 100, skip: Int, sort: SortFindManyProficiencyInput): [Proficiency!]! @join__field(graph: _5EDNDAPI)
  proficiency(filter: FilterFindOneProficiencyInput, skip: Int, sort: SortFindOneProficiencyInput): Proficiency @join__field(graph: _5EDNDAPI)
  race(filter: FilterFindOneRaceInput, skip: Int, sort: SortFindOneRaceInput): Race @join__field(graph: _5EDNDAPI)
  races(filter: FilterFindManyRaceInput, limit: Int = 100, skip: Int, sort: SortFindManyRaceInput): [Race!]! @join__field(graph: _5EDNDAPI)
  rule(filter: FilterFindOneRuleInput, skip: Int, sort: SortFindOneRuleInput): Rule @join__field(graph: _5EDNDAPI)
  ruleSection(filter: FilterFindOneRuleSectionInput, skip: Int, sort: SortFindOneRuleSectionInput): RuleSection @join__field(graph: _5EDNDAPI)
  ruleSections(filter: FilterFindManyRuleSectionInput, limit: Int = 100, skip: Int, sort: SortFindManyRuleSectionInput): [RuleSection!]! @join__field(graph: _5EDNDAPI)
  rules(filter: FilterFindManyRuleInput, limit: Int = 100, skip: Int, sort: SortFindManyRuleInput): [Rule!]! @join__field(graph: _5EDNDAPI)
  skill(filter: FilterFindOneSkillInput, skip: Int, sort: SortFindOneSkillInput): Skill @join__field(graph: _5EDNDAPI)
  skills(filter: FilterFindManySkillInput, limit: Int = 100, skip: Int, sort: SortFindManySkillInput): [Skill!]! @join__field(graph: _5EDNDAPI)
  spell(filter: FilterFindOneSpellInput, skip: Int, sort: SortFindOneSpellInput): Spell @join__field(graph: _5EDNDAPI)
  spells(filter: FilterFindManySpellInput, limit: Int = 100, skip: Int, sort: SortFindManySpellInput): [Spell!]! @join__field(graph: _5EDNDAPI)
  subclass(filter: FilterFindOneSubclassInput, skip: Int, sort: SortFindOneSubclassInput): Subclass @join__field(graph: _5EDNDAPI)
  subclasses(filter: FilterFindManySubclassInput, limit: Int = 100, skip: Int, sort: SortFindManySubclassInput): [Subclass!]! @join__field(graph: _5EDNDAPI)
  subrace(filter: FilterFindOneSubraceInput, skip: Int, sort: SortFindOneSubraceInput): Subrace @join__field(graph: _5EDNDAPI)
  subraces(filter: FilterFindManySubraceInput, limit: Int = 100, skip: Int, sort: SortFindManySubraceInput): [Subrace!]! @join__field(graph: _5EDNDAPI)
  trait(filter: FilterFindOneTraitInput, skip: Int, sort: SortFindOneTraitInput): Trait @join__field(graph: _5EDNDAPI)
  traits(filter: FilterFindManyTraitInput, limit: Int = 100, skip: Int, sort: SortFindManyTraitInput): [Trait!]! @join__field(graph: _5EDNDAPI)
  weaponProperties(filter: FilterFindManyWeaponPropertyInput, limit: Int = 100, skip: Int, sort: SortFindManyWeaponPropertyInput): [WeaponProperty!]! @join__field(graph: _5EDNDAPI)
  weaponProperty(filter: FilterFindOneWeaponPropertyInput, skip: Int, sort: SortFindOneWeaponPropertyInput): WeaponProperty @join__field(graph: _5EDNDAPI)
}

type Race {
  _id: String!
  ability_bonus_options: RaceAbility_bonus_options
  ability_bonuses: [RaceAbility_bonuses]
  age: String
  alignment: String
  index: String
  language_desc: String
  language_options: RaceLanguage_options
  languages: [RaceLanguages]
  name: String
  size: String
  size_description: String
  speed: Float
  starting_proficiencies: [RaceStarting_proficiencies]
  starting_proficiency_options: RaceStarting_proficiency_options
  subraces: [RaceSubraces]
  traits(limit: Int = 100, skip: Int, sort: SortFindManyTraitInput): [Trait!]!
  url: String
}

type RaceAbility_bonus_options {
  choose: Float
  from: [RaceAbility_bonus_optionsFrom]
  type: String
}

type RaceAbility_bonus_optionsFrom {
  _id: MongoID
  ability_score: RaceAbility_bonus_optionsFromAbility_score
  bonus: Float
}

type RaceAbility_bonus_optionsFromAbility_score {
  index: String
  name: String
  url: String
}

type RaceAbility_bonuses {
  _id: MongoID
  ability_score: RaceAbility_bonusesAbility_score
  bonus: Float
}

type RaceAbility_bonusesAbility_score {
  index: String
  name: String
  url: String
}

type RaceLanguage_options {
  choose: Float
  from: [RaceLanguage_optionsFrom]
  type: String
}

type RaceLanguage_optionsFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type RaceLanguages {
  _id: MongoID
  index: String
  name: String
  url: String
}

type RaceStarting_proficiencies {
  _id: MongoID
  index: String
  name: String
  url: String
}

type RaceStarting_proficiency_options {
  choose: Float
  from: [RaceStarting_proficiency_optionsFrom]
  type: String
}

type RaceStarting_proficiency_optionsFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type RaceSubraces {
  _id: MongoID
  index: String
  name: String
  url: String
}

scalar RegExpAsString

type Rule {
  _id: String!
  desc: String
  index: String
  name: String
  subsections(limit: Int = 100, skip: Int, sort: SortFindManyRuleSectionInput): [RuleSection!]!
  url: String
}

type RuleSection {
  _id: String!
  desc: String
  index: String
  name: String
  url: String
}

type Skill {
  _id: String!
  ability_score: SkillAbility_score
  desc: [String]
  index: String
  name: String
  url: String
}

type SkillAbility_score {
  index: String
  name: String
  url: String
}

enum SortFindManyAbilityScoreInput {
  DESC_ASC
  DESC_DESC
  FULL_NAME_ASC
  FULL_NAME_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyAlignmentInput {
  ABBREVIATION_ASC
  ABBREVIATION_DESC
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyBackgroundInput {
  BONDS__CHOOSE_ASC
  BONDS__CHOOSE_DESC
  BONDS__FROM_ASC
  BONDS__FROM_DESC
  BONDS__TYPE_ASC
  BONDS__TYPE_DESC
  FEATURE__DESC_ASC
  FEATURE__DESC_DESC
  FEATURE__NAME_ASC
  FEATURE__NAME_DESC
  FLAWS__CHOOSE_ASC
  FLAWS__CHOOSE_DESC
  FLAWS__FROM_ASC
  FLAWS__FROM_DESC
  FLAWS__TYPE_ASC
  FLAWS__TYPE_DESC
  IDEALS__CHOOSE_ASC
  IDEALS__CHOOSE_DESC
  IDEALS__TYPE_ASC
  IDEALS__TYPE_DESC
  INDEX_ASC
  INDEX_DESC
  LANGUAGE_OPTIONS__CHOOSE_ASC
  LANGUAGE_OPTIONS__CHOOSE_DESC
  LANGUAGE_OPTIONS__TYPE_ASC
  LANGUAGE_OPTIONS__TYPE_DESC
  NAME_ASC
  NAME_DESC
  PERSONALITY_TRAITS__CHOOSE_ASC
  PERSONALITY_TRAITS__CHOOSE_DESC
  PERSONALITY_TRAITS__FROM_ASC
  PERSONALITY_TRAITS__FROM_DESC
  PERSONALITY_TRAITS__TYPE_ASC
  PERSONALITY_TRAITS__TYPE_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyClassInput {
  CLASS_LEVELS_ASC
  CLASS_LEVELS_DESC
  HIT_DIE_ASC
  HIT_DIE_DESC
  INDEX_ASC
  INDEX_DESC
  MULTI_CLASSING__PREREQUISITE_OPTIONS__CHOOSE_ASC
  MULTI_CLASSING__PREREQUISITE_OPTIONS__CHOOSE_DESC
  MULTI_CLASSING__PREREQUISITE_OPTIONS__TYPE_ASC
  MULTI_CLASSING__PREREQUISITE_OPTIONS__TYPE_DESC
  NAME_ASC
  NAME_DESC
  SPELLCASTING__LEVEL_ASC
  SPELLCASTING__LEVEL_DESC
  SPELLCASTING__SPELLCASTING_ABILITY__INDEX_ASC
  SPELLCASTING__SPELLCASTING_ABILITY__INDEX_DESC
  SPELLCASTING__SPELLCASTING_ABILITY__NAME_ASC
  SPELLCASTING__SPELLCASTING_ABILITY__NAME_DESC
  SPELLCASTING__SPELLCASTING_ABILITY__URL_ASC
  SPELLCASTING__SPELLCASTING_ABILITY__URL_DESC
  SPELLS_ASC
  SPELLS_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyConditionInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyDamageTypeInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyEquipmentCategoryInput {
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyEquipmentInput {
  ARMOR_CATEGORY_ASC
  ARMOR_CATEGORY_DESC
  ARMOR_CLASS__BASE_ASC
  ARMOR_CLASS__BASE_DESC
  ARMOR_CLASS__DEX_BONUS_ASC
  ARMOR_CLASS__DEX_BONUS_DESC
  ARMOR_CLASS__MAX_BONUS_ASC
  ARMOR_CLASS__MAX_BONUS_DESC
  CAPACITY_ASC
  CAPACITY_DESC
  CATEGORY_RANGE_ASC
  CATEGORY_RANGE_DESC
  COST__QUANTITY_ASC
  COST__QUANTITY_DESC
  COST__UNIT_ASC
  COST__UNIT_DESC
  DAMAGE__DAMAGE_DICE_ASC
  DAMAGE__DAMAGE_DICE_DESC
  DAMAGE__DAMAGE_TYPE__INDEX_ASC
  DAMAGE__DAMAGE_TYPE__INDEX_DESC
  DAMAGE__DAMAGE_TYPE__NAME_ASC
  DAMAGE__DAMAGE_TYPE__NAME_DESC
  DAMAGE__DAMAGE_TYPE__URL_ASC
  DAMAGE__DAMAGE_TYPE__URL_DESC
  DESC_ASC
  DESC_DESC
  EQUIPMENT_CATEGORY__INDEX_ASC
  EQUIPMENT_CATEGORY__INDEX_DESC
  EQUIPMENT_CATEGORY__NAME_ASC
  EQUIPMENT_CATEGORY__NAME_DESC
  EQUIPMENT_CATEGORY__URL_ASC
  EQUIPMENT_CATEGORY__URL_DESC
  GEAR_CATEGORY__INDEX_ASC
  GEAR_CATEGORY__INDEX_DESC
  GEAR_CATEGORY__NAME_ASC
  GEAR_CATEGORY__NAME_DESC
  GEAR_CATEGORY__URL_ASC
  GEAR_CATEGORY__URL_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  RANGE__LONG_ASC
  RANGE__LONG_DESC
  RANGE__NORMAL_ASC
  RANGE__NORMAL_DESC
  SPECIAL_ASC
  SPECIAL_DESC
  SPEED__QUANTITY_ASC
  SPEED__QUANTITY_DESC
  SPEED__UNIT_ASC
  SPEED__UNIT_DESC
  STEALTH_DISADVANTAGE_ASC
  STEALTH_DISADVANTAGE_DESC
  STR_MINIMUM_ASC
  STR_MINIMUM_DESC
  THROW_RANGE__LONG_ASC
  THROW_RANGE__LONG_DESC
  THROW_RANGE__NORMAL_ASC
  THROW_RANGE__NORMAL_DESC
  TOOL_CATEGORY_ASC
  TOOL_CATEGORY_DESC
  TWO_HANDED_DAMAGE__DAMAGE_DICE_ASC
  TWO_HANDED_DAMAGE__DAMAGE_DICE_DESC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__INDEX_ASC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__INDEX_DESC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__NAME_ASC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__NAME_DESC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__URL_ASC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__URL_DESC
  URL_ASC
  URL_DESC
  VEHICLE_CATEGORY_ASC
  VEHICLE_CATEGORY_DESC
  WEAPON_CATEGORY_ASC
  WEAPON_CATEGORY_DESC
  WEAPON_RANGE_ASC
  WEAPON_RANGE_DESC
  WEIGHT_ASC
  WEIGHT_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyFeatInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyFeatureInput {
  CHOICE__CHOOSE_ASC
  CHOICE__CHOOSE_DESC
  CHOICE__TYPE_ASC
  CHOICE__TYPE_DESC
  CLASS__INDEX_ASC
  CLASS__INDEX_DESC
  CLASS__NAME_ASC
  CLASS__NAME_DESC
  CLASS__URL_ASC
  CLASS__URL_DESC
  DESC_ASC
  DESC_DESC
  FEATURE_SPECIFIC__EXPERTISE_OPTIONS__CHOOSE_ASC
  FEATURE_SPECIFIC__EXPERTISE_OPTIONS__CHOOSE_DESC
  FEATURE_SPECIFIC__EXPERTISE_OPTIONS__TYPE_ASC
  FEATURE_SPECIFIC__EXPERTISE_OPTIONS__TYPE_DESC
  FEATURE_SPECIFIC__SUBFEATURE_OPTIONS__CHOOSE_ASC
  FEATURE_SPECIFIC__SUBFEATURE_OPTIONS__CHOOSE_DESC
  FEATURE_SPECIFIC__SUBFEATURE_OPTIONS__TYPE_ASC
  FEATURE_SPECIFIC__SUBFEATURE_OPTIONS__TYPE_DESC
  INDEX_ASC
  INDEX_DESC
  LEVEL_ASC
  LEVEL_DESC
  NAME_ASC
  NAME_DESC
  PARENT__INDEX_ASC
  PARENT__INDEX_DESC
  PARENT__NAME_ASC
  PARENT__NAME_DESC
  PARENT__URL_ASC
  PARENT__URL_DESC
  REFERENCE_ASC
  REFERENCE_DESC
  SUBCLASS__INDEX_ASC
  SUBCLASS__INDEX_DESC
  SUBCLASS__NAME_ASC
  SUBCLASS__NAME_DESC
  SUBCLASS__URL_ASC
  SUBCLASS__URL_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyLanguageInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  SCRIPT_ASC
  SCRIPT_DESC
  TYPE_ASC
  TYPE_DESC
  TYPICAL_SPEAKERS_ASC
  TYPICAL_SPEAKERS_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyLevelInput {
  ABILITY_SCORE_BONUSES_ASC
  ABILITY_SCORE_BONUSES_DESC
  CLASS_SPECIFIC__ACTION_SURGES_ASC
  CLASS_SPECIFIC__ACTION_SURGES_DESC
  CLASS_SPECIFIC__ARCANE_RECOVERY_LEVELS_ASC
  CLASS_SPECIFIC__ARCANE_RECOVERY_LEVELS_DESC
  CLASS_SPECIFIC__AURA_RANGE_ASC
  CLASS_SPECIFIC__AURA_RANGE_DESC
  CLASS_SPECIFIC__BARDIC_INSPIRATION_DIE_ASC
  CLASS_SPECIFIC__BARDIC_INSPIRATION_DIE_DESC
  CLASS_SPECIFIC__BRUTAL_CRITICAL_DICE_ASC
  CLASS_SPECIFIC__BRUTAL_CRITICAL_DICE_DESC
  CLASS_SPECIFIC__CHANNEL_DIVINITY_CHARGES_ASC
  CLASS_SPECIFIC__CHANNEL_DIVINITY_CHARGES_DESC
  CLASS_SPECIFIC__DESTROY_UNDEAD_CR_ASC
  CLASS_SPECIFIC__DESTROY_UNDEAD_CR_DESC
  CLASS_SPECIFIC__EXTRA_ATTACKS_ASC
  CLASS_SPECIFIC__EXTRA_ATTACKS_DESC
  CLASS_SPECIFIC__FAVORED_ENEMIES_ASC
  CLASS_SPECIFIC__FAVORED_ENEMIES_DESC
  CLASS_SPECIFIC__FAVORED_TERRAIN_ASC
  CLASS_SPECIFIC__FAVORED_TERRAIN_DESC
  CLASS_SPECIFIC__INDOMITABLE_USES_ASC
  CLASS_SPECIFIC__INDOMITABLE_USES_DESC
  CLASS_SPECIFIC__INVOCATIONS_KNOWN_ASC
  CLASS_SPECIFIC__INVOCATIONS_KNOWN_DESC
  CLASS_SPECIFIC__KI_POINTS_ASC
  CLASS_SPECIFIC__KI_POINTS_DESC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_5_ASC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_5_DESC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_7_ASC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_7_DESC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_9_ASC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_9_DESC
  CLASS_SPECIFIC__MARTIAL_ARTS__DICE_COUNT_ASC
  CLASS_SPECIFIC__MARTIAL_ARTS__DICE_COUNT_DESC
  CLASS_SPECIFIC__MARTIAL_ARTS__DICE_VALUE_ASC
  CLASS_SPECIFIC__MARTIAL_ARTS__DICE_VALUE_DESC
  CLASS_SPECIFIC__METAMAGIC_KNOWN_ASC
  CLASS_SPECIFIC__METAMAGIC_KNOWN_DESC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_6_ASC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_6_DESC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_7_ASC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_7_DESC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_8_ASC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_8_DESC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_9_ASC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_9_DESC
  CLASS_SPECIFIC__RAGE_COUNT_ASC
  CLASS_SPECIFIC__RAGE_COUNT_DESC
  CLASS_SPECIFIC__RAGE_DAMAGE_BONUS_ASC
  CLASS_SPECIFIC__RAGE_DAMAGE_BONUS_DESC
  CLASS_SPECIFIC__SNEAK_ATTACK__DICE_COUNT_ASC
  CLASS_SPECIFIC__SNEAK_ATTACK__DICE_COUNT_DESC
  CLASS_SPECIFIC__SNEAK_ATTACK__DICE_VALUE_ASC
  CLASS_SPECIFIC__SNEAK_ATTACK__DICE_VALUE_DESC
  CLASS_SPECIFIC__SONG_OF_REST_DIE_ASC
  CLASS_SPECIFIC__SONG_OF_REST_DIE_DESC
  CLASS_SPECIFIC__SORCERY_POINTS_ASC
  CLASS_SPECIFIC__SORCERY_POINTS_DESC
  CLASS_SPECIFIC__UNARMORED_MOVEMENT_ASC
  CLASS_SPECIFIC__UNARMORED_MOVEMENT_DESC
  CLASS_SPECIFIC__WILD_SHAPE_FLY_ASC
  CLASS_SPECIFIC__WILD_SHAPE_FLY_DESC
  CLASS_SPECIFIC__WILD_SHAPE_MAX_CR_ASC
  CLASS_SPECIFIC__WILD_SHAPE_MAX_CR_DESC
  CLASS_SPECIFIC__WILD_SHAPE_SWIM_ASC
  CLASS_SPECIFIC__WILD_SHAPE_SWIM_DESC
  CLASS__INDEX_ASC
  CLASS__INDEX_DESC
  CLASS__NAME_ASC
  CLASS__NAME_DESC
  CLASS__URL_ASC
  CLASS__URL_DESC
  INDEX_ASC
  INDEX_DESC
  LEVEL_ASC
  LEVEL_DESC
  PROF_BONUS_ASC
  PROF_BONUS_DESC
  SPELLCASTING__CANTRIPS_KNOWN_ASC
  SPELLCASTING__CANTRIPS_KNOWN_DESC
  SPELLCASTING__SPELLS_KNOWN_ASC
  SPELLCASTING__SPELLS_KNOWN_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_1_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_1_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_2_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_2_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_3_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_3_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_4_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_4_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_5_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_5_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_6_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_6_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_7_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_7_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_8_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_8_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_9_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_9_DESC
  SUBCLASS_SPECIFIC__ADDITIONAL_MAGICAL_SECRETS_MAX_LVL_ASC
  SUBCLASS_SPECIFIC__ADDITIONAL_MAGICAL_SECRETS_MAX_LVL_DESC
  SUBCLASS_SPECIFIC__AURA_RANGE_ASC
  SUBCLASS_SPECIFIC__AURA_RANGE_DESC
  SUBCLASS__INDEX_ASC
  SUBCLASS__INDEX_DESC
  SUBCLASS__NAME_ASC
  SUBCLASS__NAME_DESC
  SUBCLASS__URL_ASC
  SUBCLASS__URL_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyMagicItemInput {
  DESC_ASC
  DESC_DESC
  EQUIPMENT_CATEGORY__INDEX_ASC
  EQUIPMENT_CATEGORY__INDEX_DESC
  EQUIPMENT_CATEGORY__NAME_ASC
  EQUIPMENT_CATEGORY__NAME_DESC
  EQUIPMENT_CATEGORY__URL_ASC
  EQUIPMENT_CATEGORY__URL_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyMagicSchoolInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyMonsterInput {
  ALIGNMENT_ASC
  ALIGNMENT_DESC
  ARMOR_CLASS_ASC
  ARMOR_CLASS_DESC
  CHALLENGE_RATING_ASC
  CHALLENGE_RATING_DESC
  CHARISMA_ASC
  CHARISMA_DESC
  CONSTITUTION_ASC
  CONSTITUTION_DESC
  DEXTERITY_ASC
  DEXTERITY_DESC
  HIT_DICE_ASC
  HIT_DICE_DESC
  HIT_POINTS_ASC
  HIT_POINTS_DESC
  INDEX_ASC
  INDEX_DESC
  INTELLIGENCE_ASC
  INTELLIGENCE_DESC
  LANGUAGES_ASC
  LANGUAGES_DESC
  NAME_ASC
  NAME_DESC
  SENSES__BLINDSIGHT_ASC
  SENSES__BLINDSIGHT_DESC
  SENSES__DARKVISION_ASC
  SENSES__DARKVISION_DESC
  SENSES__PASSIVE_PERCEPTION_ASC
  SENSES__PASSIVE_PERCEPTION_DESC
  SENSES__TREMORSENSE_ASC
  SENSES__TREMORSENSE_DESC
  SENSES__TRUESIGHT_ASC
  SENSES__TRUESIGHT_DESC
  SIZE_ASC
  SIZE_DESC
  SPEED__BURROW_ASC
  SPEED__BURROW_DESC
  SPEED__CLIMB_ASC
  SPEED__CLIMB_DESC
  SPEED__FLY_ASC
  SPEED__FLY_DESC
  SPEED__HOVER_ASC
  SPEED__HOVER_DESC
  SPEED__SWIM_ASC
  SPEED__SWIM_DESC
  SPEED__WALK_ASC
  SPEED__WALK_DESC
  STRENGTH_ASC
  STRENGTH_DESC
  SUBTYPE_ASC
  SUBTYPE_DESC
  TYPE_ASC
  TYPE_DESC
  URL_ASC
  URL_DESC
  WISDOM_ASC
  WISDOM_DESC
  XP_ASC
  XP_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyProficiencyInput {
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  TYPE_ASC
  TYPE_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyRaceInput {
  ABILITY_BONUS_OPTIONS__CHOOSE_ASC
  ABILITY_BONUS_OPTIONS__CHOOSE_DESC
  ABILITY_BONUS_OPTIONS__TYPE_ASC
  ABILITY_BONUS_OPTIONS__TYPE_DESC
  AGE_ASC
  AGE_DESC
  ALIGNMENT_ASC
  ALIGNMENT_DESC
  INDEX_ASC
  INDEX_DESC
  LANGUAGE_DESC_ASC
  LANGUAGE_DESC_DESC
  LANGUAGE_OPTIONS__CHOOSE_ASC
  LANGUAGE_OPTIONS__CHOOSE_DESC
  LANGUAGE_OPTIONS__TYPE_ASC
  LANGUAGE_OPTIONS__TYPE_DESC
  NAME_ASC
  NAME_DESC
  SIZE_ASC
  SIZE_DESC
  SIZE_DESCRIPTION_ASC
  SIZE_DESCRIPTION_DESC
  SPEED_ASC
  SPEED_DESC
  STARTING_PROFICIENCY_OPTIONS__CHOOSE_ASC
  STARTING_PROFICIENCY_OPTIONS__CHOOSE_DESC
  STARTING_PROFICIENCY_OPTIONS__TYPE_ASC
  STARTING_PROFICIENCY_OPTIONS__TYPE_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyRuleInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyRuleSectionInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManySkillInput {
  ABILITY_SCORE__INDEX_ASC
  ABILITY_SCORE__INDEX_DESC
  ABILITY_SCORE__NAME_ASC
  ABILITY_SCORE__NAME_DESC
  ABILITY_SCORE__URL_ASC
  ABILITY_SCORE__URL_DESC
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManySpellInput {
  SCHOOL__INDEX_ASC
  SCHOOL__INDEX_DESC
  SCHOOL__NAME_ASC
  SCHOOL__NAME_DESC
  SCHOOL__URL_ASC
  SCHOOL__URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManySubclassInput {
  CLASS__INDEX_ASC
  CLASS__INDEX_DESC
  CLASS__NAME_ASC
  CLASS__NAME_DESC
  CLASS__URL_ASC
  CLASS__URL_DESC
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  SUBCLASS_FLAVOR_ASC
  SUBCLASS_FLAVOR_DESC
  SUBCLASS_LEVELS_ASC
  SUBCLASS_LEVELS_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManySubraceInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  LANGUAGE_OPTIONS__CHOOSE_ASC
  LANGUAGE_OPTIONS__CHOOSE_DESC
  LANGUAGE_OPTIONS__TYPE_ASC
  LANGUAGE_OPTIONS__TYPE_DESC
  NAME_ASC
  NAME_DESC
  RACE__INDEX_ASC
  RACE__INDEX_DESC
  RACE__NAME_ASC
  RACE__NAME_DESC
  RACE__URL_ASC
  RACE__URL_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyTraitInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  PARENT__INDEX_ASC
  PARENT__INDEX_DESC
  PARENT__NAME_ASC
  PARENT__NAME_DESC
  PARENT__URL_ASC
  PARENT__URL_DESC
  PROFICIENCY_CHOICES__CHOOSE_ASC
  PROFICIENCY_CHOICES__CHOOSE_DESC
  PROFICIENCY_CHOICES__TYPE_ASC
  PROFICIENCY_CHOICES__TYPE_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__INDEX_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__INDEX_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__NAME_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__NAME_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__URL_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__URL_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__SUCCESS_TYPE_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__SUCCESS_TYPE_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DESC_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DESC_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__NAME_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__NAME_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__USAGE__TIMES_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__USAGE__TIMES_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__USAGE__TYPE_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__USAGE__TYPE_DESC
  TRAIT_SPECIFIC__DAMAGE_TYPE__INDEX_ASC
  TRAIT_SPECIFIC__DAMAGE_TYPE__INDEX_DESC
  TRAIT_SPECIFIC__DAMAGE_TYPE__NAME_ASC
  TRAIT_SPECIFIC__DAMAGE_TYPE__NAME_DESC
  TRAIT_SPECIFIC__DAMAGE_TYPE__URL_ASC
  TRAIT_SPECIFIC__DAMAGE_TYPE__URL_DESC
  TRAIT_SPECIFIC__SPELL_OPTIONS__CHOOSE_ASC
  TRAIT_SPECIFIC__SPELL_OPTIONS__CHOOSE_DESC
  TRAIT_SPECIFIC__SPELL_OPTIONS__TYPE_ASC
  TRAIT_SPECIFIC__SPELL_OPTIONS__TYPE_DESC
  TRAIT_SPECIFIC__SUBTRAIT_OPTIONS__CHOOSE_ASC
  TRAIT_SPECIFIC__SUBTRAIT_OPTIONS__CHOOSE_DESC
  TRAIT_SPECIFIC__SUBTRAIT_OPTIONS__TYPE_ASC
  TRAIT_SPECIFIC__SUBTRAIT_OPTIONS__TYPE_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindManyWeaponPropertyInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneAbilityScoreInput {
  DESC_ASC
  DESC_DESC
  FULL_NAME_ASC
  FULL_NAME_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneAlignmentInput {
  ABBREVIATION_ASC
  ABBREVIATION_DESC
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneBackgroundInput {
  BONDS__CHOOSE_ASC
  BONDS__CHOOSE_DESC
  BONDS__FROM_ASC
  BONDS__FROM_DESC
  BONDS__TYPE_ASC
  BONDS__TYPE_DESC
  FEATURE__DESC_ASC
  FEATURE__DESC_DESC
  FEATURE__NAME_ASC
  FEATURE__NAME_DESC
  FLAWS__CHOOSE_ASC
  FLAWS__CHOOSE_DESC
  FLAWS__FROM_ASC
  FLAWS__FROM_DESC
  FLAWS__TYPE_ASC
  FLAWS__TYPE_DESC
  IDEALS__CHOOSE_ASC
  IDEALS__CHOOSE_DESC
  IDEALS__TYPE_ASC
  IDEALS__TYPE_DESC
  INDEX_ASC
  INDEX_DESC
  LANGUAGE_OPTIONS__CHOOSE_ASC
  LANGUAGE_OPTIONS__CHOOSE_DESC
  LANGUAGE_OPTIONS__TYPE_ASC
  LANGUAGE_OPTIONS__TYPE_DESC
  NAME_ASC
  NAME_DESC
  PERSONALITY_TRAITS__CHOOSE_ASC
  PERSONALITY_TRAITS__CHOOSE_DESC
  PERSONALITY_TRAITS__FROM_ASC
  PERSONALITY_TRAITS__FROM_DESC
  PERSONALITY_TRAITS__TYPE_ASC
  PERSONALITY_TRAITS__TYPE_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneClassInput {
  CLASS_LEVELS_ASC
  CLASS_LEVELS_DESC
  HIT_DIE_ASC
  HIT_DIE_DESC
  INDEX_ASC
  INDEX_DESC
  MULTI_CLASSING__PREREQUISITE_OPTIONS__CHOOSE_ASC
  MULTI_CLASSING__PREREQUISITE_OPTIONS__CHOOSE_DESC
  MULTI_CLASSING__PREREQUISITE_OPTIONS__TYPE_ASC
  MULTI_CLASSING__PREREQUISITE_OPTIONS__TYPE_DESC
  NAME_ASC
  NAME_DESC
  SPELLCASTING__LEVEL_ASC
  SPELLCASTING__LEVEL_DESC
  SPELLCASTING__SPELLCASTING_ABILITY__INDEX_ASC
  SPELLCASTING__SPELLCASTING_ABILITY__INDEX_DESC
  SPELLCASTING__SPELLCASTING_ABILITY__NAME_ASC
  SPELLCASTING__SPELLCASTING_ABILITY__NAME_DESC
  SPELLCASTING__SPELLCASTING_ABILITY__URL_ASC
  SPELLCASTING__SPELLCASTING_ABILITY__URL_DESC
  SPELLS_ASC
  SPELLS_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneConditionInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneDamageTypeInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneEquipmentCategoryInput {
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneEquipmentInput {
  ARMOR_CATEGORY_ASC
  ARMOR_CATEGORY_DESC
  ARMOR_CLASS__BASE_ASC
  ARMOR_CLASS__BASE_DESC
  ARMOR_CLASS__DEX_BONUS_ASC
  ARMOR_CLASS__DEX_BONUS_DESC
  ARMOR_CLASS__MAX_BONUS_ASC
  ARMOR_CLASS__MAX_BONUS_DESC
  CAPACITY_ASC
  CAPACITY_DESC
  CATEGORY_RANGE_ASC
  CATEGORY_RANGE_DESC
  COST__QUANTITY_ASC
  COST__QUANTITY_DESC
  COST__UNIT_ASC
  COST__UNIT_DESC
  DAMAGE__DAMAGE_DICE_ASC
  DAMAGE__DAMAGE_DICE_DESC
  DAMAGE__DAMAGE_TYPE__INDEX_ASC
  DAMAGE__DAMAGE_TYPE__INDEX_DESC
  DAMAGE__DAMAGE_TYPE__NAME_ASC
  DAMAGE__DAMAGE_TYPE__NAME_DESC
  DAMAGE__DAMAGE_TYPE__URL_ASC
  DAMAGE__DAMAGE_TYPE__URL_DESC
  DESC_ASC
  DESC_DESC
  EQUIPMENT_CATEGORY__INDEX_ASC
  EQUIPMENT_CATEGORY__INDEX_DESC
  EQUIPMENT_CATEGORY__NAME_ASC
  EQUIPMENT_CATEGORY__NAME_DESC
  EQUIPMENT_CATEGORY__URL_ASC
  EQUIPMENT_CATEGORY__URL_DESC
  GEAR_CATEGORY__INDEX_ASC
  GEAR_CATEGORY__INDEX_DESC
  GEAR_CATEGORY__NAME_ASC
  GEAR_CATEGORY__NAME_DESC
  GEAR_CATEGORY__URL_ASC
  GEAR_CATEGORY__URL_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  QUANTITY_ASC
  QUANTITY_DESC
  RANGE__LONG_ASC
  RANGE__LONG_DESC
  RANGE__NORMAL_ASC
  RANGE__NORMAL_DESC
  SPECIAL_ASC
  SPECIAL_DESC
  SPEED__QUANTITY_ASC
  SPEED__QUANTITY_DESC
  SPEED__UNIT_ASC
  SPEED__UNIT_DESC
  STEALTH_DISADVANTAGE_ASC
  STEALTH_DISADVANTAGE_DESC
  STR_MINIMUM_ASC
  STR_MINIMUM_DESC
  THROW_RANGE__LONG_ASC
  THROW_RANGE__LONG_DESC
  THROW_RANGE__NORMAL_ASC
  THROW_RANGE__NORMAL_DESC
  TOOL_CATEGORY_ASC
  TOOL_CATEGORY_DESC
  TWO_HANDED_DAMAGE__DAMAGE_DICE_ASC
  TWO_HANDED_DAMAGE__DAMAGE_DICE_DESC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__INDEX_ASC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__INDEX_DESC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__NAME_ASC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__NAME_DESC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__URL_ASC
  TWO_HANDED_DAMAGE__DAMAGE_TYPE__URL_DESC
  URL_ASC
  URL_DESC
  VEHICLE_CATEGORY_ASC
  VEHICLE_CATEGORY_DESC
  WEAPON_CATEGORY_ASC
  WEAPON_CATEGORY_DESC
  WEAPON_RANGE_ASC
  WEAPON_RANGE_DESC
  WEIGHT_ASC
  WEIGHT_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneFeatInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneFeatureInput {
  CHOICE__CHOOSE_ASC
  CHOICE__CHOOSE_DESC
  CHOICE__TYPE_ASC
  CHOICE__TYPE_DESC
  CLASS__INDEX_ASC
  CLASS__INDEX_DESC
  CLASS__NAME_ASC
  CLASS__NAME_DESC
  CLASS__URL_ASC
  CLASS__URL_DESC
  DESC_ASC
  DESC_DESC
  FEATURE_SPECIFIC__EXPERTISE_OPTIONS__CHOOSE_ASC
  FEATURE_SPECIFIC__EXPERTISE_OPTIONS__CHOOSE_DESC
  FEATURE_SPECIFIC__EXPERTISE_OPTIONS__TYPE_ASC
  FEATURE_SPECIFIC__EXPERTISE_OPTIONS__TYPE_DESC
  FEATURE_SPECIFIC__SUBFEATURE_OPTIONS__CHOOSE_ASC
  FEATURE_SPECIFIC__SUBFEATURE_OPTIONS__CHOOSE_DESC
  FEATURE_SPECIFIC__SUBFEATURE_OPTIONS__TYPE_ASC
  FEATURE_SPECIFIC__SUBFEATURE_OPTIONS__TYPE_DESC
  INDEX_ASC
  INDEX_DESC
  LEVEL_ASC
  LEVEL_DESC
  NAME_ASC
  NAME_DESC
  PARENT__INDEX_ASC
  PARENT__INDEX_DESC
  PARENT__NAME_ASC
  PARENT__NAME_DESC
  PARENT__URL_ASC
  PARENT__URL_DESC
  REFERENCE_ASC
  REFERENCE_DESC
  SUBCLASS__INDEX_ASC
  SUBCLASS__INDEX_DESC
  SUBCLASS__NAME_ASC
  SUBCLASS__NAME_DESC
  SUBCLASS__URL_ASC
  SUBCLASS__URL_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneLanguageInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  SCRIPT_ASC
  SCRIPT_DESC
  TYPE_ASC
  TYPE_DESC
  TYPICAL_SPEAKERS_ASC
  TYPICAL_SPEAKERS_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneLevelInput {
  ABILITY_SCORE_BONUSES_ASC
  ABILITY_SCORE_BONUSES_DESC
  CLASS_SPECIFIC__ACTION_SURGES_ASC
  CLASS_SPECIFIC__ACTION_SURGES_DESC
  CLASS_SPECIFIC__ARCANE_RECOVERY_LEVELS_ASC
  CLASS_SPECIFIC__ARCANE_RECOVERY_LEVELS_DESC
  CLASS_SPECIFIC__AURA_RANGE_ASC
  CLASS_SPECIFIC__AURA_RANGE_DESC
  CLASS_SPECIFIC__BARDIC_INSPIRATION_DIE_ASC
  CLASS_SPECIFIC__BARDIC_INSPIRATION_DIE_DESC
  CLASS_SPECIFIC__BRUTAL_CRITICAL_DICE_ASC
  CLASS_SPECIFIC__BRUTAL_CRITICAL_DICE_DESC
  CLASS_SPECIFIC__CHANNEL_DIVINITY_CHARGES_ASC
  CLASS_SPECIFIC__CHANNEL_DIVINITY_CHARGES_DESC
  CLASS_SPECIFIC__DESTROY_UNDEAD_CR_ASC
  CLASS_SPECIFIC__DESTROY_UNDEAD_CR_DESC
  CLASS_SPECIFIC__EXTRA_ATTACKS_ASC
  CLASS_SPECIFIC__EXTRA_ATTACKS_DESC
  CLASS_SPECIFIC__FAVORED_ENEMIES_ASC
  CLASS_SPECIFIC__FAVORED_ENEMIES_DESC
  CLASS_SPECIFIC__FAVORED_TERRAIN_ASC
  CLASS_SPECIFIC__FAVORED_TERRAIN_DESC
  CLASS_SPECIFIC__INDOMITABLE_USES_ASC
  CLASS_SPECIFIC__INDOMITABLE_USES_DESC
  CLASS_SPECIFIC__INVOCATIONS_KNOWN_ASC
  CLASS_SPECIFIC__INVOCATIONS_KNOWN_DESC
  CLASS_SPECIFIC__KI_POINTS_ASC
  CLASS_SPECIFIC__KI_POINTS_DESC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_5_ASC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_5_DESC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_7_ASC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_7_DESC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_9_ASC
  CLASS_SPECIFIC__MAGICAL_SECRETS_MAX_9_DESC
  CLASS_SPECIFIC__MARTIAL_ARTS__DICE_COUNT_ASC
  CLASS_SPECIFIC__MARTIAL_ARTS__DICE_COUNT_DESC
  CLASS_SPECIFIC__MARTIAL_ARTS__DICE_VALUE_ASC
  CLASS_SPECIFIC__MARTIAL_ARTS__DICE_VALUE_DESC
  CLASS_SPECIFIC__METAMAGIC_KNOWN_ASC
  CLASS_SPECIFIC__METAMAGIC_KNOWN_DESC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_6_ASC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_6_DESC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_7_ASC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_7_DESC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_8_ASC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_8_DESC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_9_ASC
  CLASS_SPECIFIC__MYSTIC_ARCANUM_LEVEL_9_DESC
  CLASS_SPECIFIC__RAGE_COUNT_ASC
  CLASS_SPECIFIC__RAGE_COUNT_DESC
  CLASS_SPECIFIC__RAGE_DAMAGE_BONUS_ASC
  CLASS_SPECIFIC__RAGE_DAMAGE_BONUS_DESC
  CLASS_SPECIFIC__SNEAK_ATTACK__DICE_COUNT_ASC
  CLASS_SPECIFIC__SNEAK_ATTACK__DICE_COUNT_DESC
  CLASS_SPECIFIC__SNEAK_ATTACK__DICE_VALUE_ASC
  CLASS_SPECIFIC__SNEAK_ATTACK__DICE_VALUE_DESC
  CLASS_SPECIFIC__SONG_OF_REST_DIE_ASC
  CLASS_SPECIFIC__SONG_OF_REST_DIE_DESC
  CLASS_SPECIFIC__SORCERY_POINTS_ASC
  CLASS_SPECIFIC__SORCERY_POINTS_DESC
  CLASS_SPECIFIC__UNARMORED_MOVEMENT_ASC
  CLASS_SPECIFIC__UNARMORED_MOVEMENT_DESC
  CLASS_SPECIFIC__WILD_SHAPE_FLY_ASC
  CLASS_SPECIFIC__WILD_SHAPE_FLY_DESC
  CLASS_SPECIFIC__WILD_SHAPE_MAX_CR_ASC
  CLASS_SPECIFIC__WILD_SHAPE_MAX_CR_DESC
  CLASS_SPECIFIC__WILD_SHAPE_SWIM_ASC
  CLASS_SPECIFIC__WILD_SHAPE_SWIM_DESC
  CLASS__INDEX_ASC
  CLASS__INDEX_DESC
  CLASS__NAME_ASC
  CLASS__NAME_DESC
  CLASS__URL_ASC
  CLASS__URL_DESC
  INDEX_ASC
  INDEX_DESC
  LEVEL_ASC
  LEVEL_DESC
  PROF_BONUS_ASC
  PROF_BONUS_DESC
  SPELLCASTING__CANTRIPS_KNOWN_ASC
  SPELLCASTING__CANTRIPS_KNOWN_DESC
  SPELLCASTING__SPELLS_KNOWN_ASC
  SPELLCASTING__SPELLS_KNOWN_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_1_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_1_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_2_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_2_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_3_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_3_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_4_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_4_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_5_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_5_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_6_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_6_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_7_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_7_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_8_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_8_DESC
  SPELLCASTING__SPELL_SLOTS_LEVEL_9_ASC
  SPELLCASTING__SPELL_SLOTS_LEVEL_9_DESC
  SUBCLASS_SPECIFIC__ADDITIONAL_MAGICAL_SECRETS_MAX_LVL_ASC
  SUBCLASS_SPECIFIC__ADDITIONAL_MAGICAL_SECRETS_MAX_LVL_DESC
  SUBCLASS_SPECIFIC__AURA_RANGE_ASC
  SUBCLASS_SPECIFIC__AURA_RANGE_DESC
  SUBCLASS__INDEX_ASC
  SUBCLASS__INDEX_DESC
  SUBCLASS__NAME_ASC
  SUBCLASS__NAME_DESC
  SUBCLASS__URL_ASC
  SUBCLASS__URL_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneMagicItemInput {
  DESC_ASC
  DESC_DESC
  EQUIPMENT_CATEGORY__INDEX_ASC
  EQUIPMENT_CATEGORY__INDEX_DESC
  EQUIPMENT_CATEGORY__NAME_ASC
  EQUIPMENT_CATEGORY__NAME_DESC
  EQUIPMENT_CATEGORY__URL_ASC
  EQUIPMENT_CATEGORY__URL_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneMagicSchoolInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneMonsterInput {
  ALIGNMENT_ASC
  ALIGNMENT_DESC
  ARMOR_CLASS_ASC
  ARMOR_CLASS_DESC
  CHALLENGE_RATING_ASC
  CHALLENGE_RATING_DESC
  CHARISMA_ASC
  CHARISMA_DESC
  CONSTITUTION_ASC
  CONSTITUTION_DESC
  DEXTERITY_ASC
  DEXTERITY_DESC
  HIT_DICE_ASC
  HIT_DICE_DESC
  HIT_POINTS_ASC
  HIT_POINTS_DESC
  INDEX_ASC
  INDEX_DESC
  INTELLIGENCE_ASC
  INTELLIGENCE_DESC
  LANGUAGES_ASC
  LANGUAGES_DESC
  NAME_ASC
  NAME_DESC
  SENSES__BLINDSIGHT_ASC
  SENSES__BLINDSIGHT_DESC
  SENSES__DARKVISION_ASC
  SENSES__DARKVISION_DESC
  SENSES__PASSIVE_PERCEPTION_ASC
  SENSES__PASSIVE_PERCEPTION_DESC
  SENSES__TREMORSENSE_ASC
  SENSES__TREMORSENSE_DESC
  SENSES__TRUESIGHT_ASC
  SENSES__TRUESIGHT_DESC
  SIZE_ASC
  SIZE_DESC
  SPEED__BURROW_ASC
  SPEED__BURROW_DESC
  SPEED__CLIMB_ASC
  SPEED__CLIMB_DESC
  SPEED__FLY_ASC
  SPEED__FLY_DESC
  SPEED__HOVER_ASC
  SPEED__HOVER_DESC
  SPEED__SWIM_ASC
  SPEED__SWIM_DESC
  SPEED__WALK_ASC
  SPEED__WALK_DESC
  STRENGTH_ASC
  STRENGTH_DESC
  SUBTYPE_ASC
  SUBTYPE_DESC
  TYPE_ASC
  TYPE_DESC
  URL_ASC
  URL_DESC
  WISDOM_ASC
  WISDOM_DESC
  XP_ASC
  XP_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneProficiencyInput {
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  TYPE_ASC
  TYPE_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneRaceInput {
  ABILITY_BONUS_OPTIONS__CHOOSE_ASC
  ABILITY_BONUS_OPTIONS__CHOOSE_DESC
  ABILITY_BONUS_OPTIONS__TYPE_ASC
  ABILITY_BONUS_OPTIONS__TYPE_DESC
  AGE_ASC
  AGE_DESC
  ALIGNMENT_ASC
  ALIGNMENT_DESC
  INDEX_ASC
  INDEX_DESC
  LANGUAGE_DESC_ASC
  LANGUAGE_DESC_DESC
  LANGUAGE_OPTIONS__CHOOSE_ASC
  LANGUAGE_OPTIONS__CHOOSE_DESC
  LANGUAGE_OPTIONS__TYPE_ASC
  LANGUAGE_OPTIONS__TYPE_DESC
  NAME_ASC
  NAME_DESC
  SIZE_ASC
  SIZE_DESC
  SIZE_DESCRIPTION_ASC
  SIZE_DESCRIPTION_DESC
  SPEED_ASC
  SPEED_DESC
  STARTING_PROFICIENCY_OPTIONS__CHOOSE_ASC
  STARTING_PROFICIENCY_OPTIONS__CHOOSE_DESC
  STARTING_PROFICIENCY_OPTIONS__TYPE_ASC
  STARTING_PROFICIENCY_OPTIONS__TYPE_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneRuleInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneRuleSectionInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneSkillInput {
  ABILITY_SCORE__INDEX_ASC
  ABILITY_SCORE__INDEX_DESC
  ABILITY_SCORE__NAME_ASC
  ABILITY_SCORE__NAME_DESC
  ABILITY_SCORE__URL_ASC
  ABILITY_SCORE__URL_DESC
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneSpellInput {
  SCHOOL__INDEX_ASC
  SCHOOL__INDEX_DESC
  SCHOOL__NAME_ASC
  SCHOOL__NAME_DESC
  SCHOOL__URL_ASC
  SCHOOL__URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneSubclassInput {
  CLASS__INDEX_ASC
  CLASS__INDEX_DESC
  CLASS__NAME_ASC
  CLASS__NAME_DESC
  CLASS__URL_ASC
  CLASS__URL_DESC
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  SUBCLASS_FLAVOR_ASC
  SUBCLASS_FLAVOR_DESC
  SUBCLASS_LEVELS_ASC
  SUBCLASS_LEVELS_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneSubraceInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  LANGUAGE_OPTIONS__CHOOSE_ASC
  LANGUAGE_OPTIONS__CHOOSE_DESC
  LANGUAGE_OPTIONS__TYPE_ASC
  LANGUAGE_OPTIONS__TYPE_DESC
  NAME_ASC
  NAME_DESC
  RACE__INDEX_ASC
  RACE__INDEX_DESC
  RACE__NAME_ASC
  RACE__NAME_DESC
  RACE__URL_ASC
  RACE__URL_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneTraitInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  PARENT__INDEX_ASC
  PARENT__INDEX_DESC
  PARENT__NAME_ASC
  PARENT__NAME_DESC
  PARENT__URL_ASC
  PARENT__URL_DESC
  PROFICIENCY_CHOICES__CHOOSE_ASC
  PROFICIENCY_CHOICES__CHOOSE_DESC
  PROFICIENCY_CHOICES__TYPE_ASC
  PROFICIENCY_CHOICES__TYPE_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__INDEX_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__INDEX_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__NAME_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__NAME_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__URL_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__DC_TYPE__URL_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__SUCCESS_TYPE_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DC__SUCCESS_TYPE_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__DESC_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__DESC_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__NAME_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__NAME_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__USAGE__TIMES_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__USAGE__TIMES_DESC
  TRAIT_SPECIFIC__BREATH_WEAPON__USAGE__TYPE_ASC
  TRAIT_SPECIFIC__BREATH_WEAPON__USAGE__TYPE_DESC
  TRAIT_SPECIFIC__DAMAGE_TYPE__INDEX_ASC
  TRAIT_SPECIFIC__DAMAGE_TYPE__INDEX_DESC
  TRAIT_SPECIFIC__DAMAGE_TYPE__NAME_ASC
  TRAIT_SPECIFIC__DAMAGE_TYPE__NAME_DESC
  TRAIT_SPECIFIC__DAMAGE_TYPE__URL_ASC
  TRAIT_SPECIFIC__DAMAGE_TYPE__URL_DESC
  TRAIT_SPECIFIC__SPELL_OPTIONS__CHOOSE_ASC
  TRAIT_SPECIFIC__SPELL_OPTIONS__CHOOSE_DESC
  TRAIT_SPECIFIC__SPELL_OPTIONS__TYPE_ASC
  TRAIT_SPECIFIC__SPELL_OPTIONS__TYPE_DESC
  TRAIT_SPECIFIC__SUBTRAIT_OPTIONS__CHOOSE_ASC
  TRAIT_SPECIFIC__SUBTRAIT_OPTIONS__CHOOSE_DESC
  TRAIT_SPECIFIC__SUBTRAIT_OPTIONS__TYPE_ASC
  TRAIT_SPECIFIC__SUBTRAIT_OPTIONS__TYPE_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

enum SortFindOneWeaponPropertyInput {
  DESC_ASC
  DESC_DESC
  INDEX_ASC
  INDEX_DESC
  NAME_ASC
  NAME_DESC
  URL_ASC
  URL_DESC
  _ID_ASC
  _ID_DESC
}

type Spell {
  _id: String!
  area_of_effect: SpellArea_of_effect
  attack_type: String
  casting_time: String
  classes: [SpellClasses]
  components: [String]
  concentration: Boolean
  damage: SpellDamage
  dc: SpellDc
  desc: [String]
  duration: String
  heal_at_slot_level: JSON
  higher_level: [String]
  index: String
  level: Float
  material: String
  name: String
  range: String
  ritual: Boolean
  school(skip: Int, sort: SortFindOneMagicSchoolInput): MagicSchool
  subclasses: [SpellSubclasses]
  url: String
}

type SpellArea_of_effect {
  size: Float
  type: String
}

type SpellClasses {
  _id: MongoID
  index: String
  name: String
  url: String
}

type SpellDamage {
  damage_at_character_level: JSON
  damage_at_slot_level: JSON
  damage_type: SpellDamageDamage_type
}

type SpellDamageDamage_type {
  index: String
  name: String
  url: String
}

type SpellDc {
  dc_success: String
  dc_type: SpellDcDc_type
  desc: String
}

type SpellDcDc_type {
  index: String
  name: String
  url: String
}

type SpellSubclasses {
  _id: MongoID
  index: String
  name: String
  url: String
}

type Subclass {
  _id: String!
  class: SubclassClass
  desc: [String]
  index: String
  name: String
  spells: [SubclassSpells]
  subclass_flavor: String
  subclass_levels(limit: Int = 100, skip: Int, sort: SortFindManyLevelInput): [Level!]!
  url: String
}

type SubclassClass {
  index: String
  name: String
  url: String
}

type SubclassSpells {
  _id: MongoID
  prerequisites: [SubclassSpellsPrerequisites]
  spell: SubclassSpellsSpell
}

type SubclassSpellsPrerequisites {
  _id: MongoID
  index: String
  name: String
  type: String
  url: String
}

type SubclassSpellsSpell {
  index: String
  name: String
  url: String
}

type Subrace {
  _id: String!
  ability_bonuses: [SubraceAbility_bonuses]
  desc: String
  index: String
  language_options: SubraceLanguage_options
  name: String
  race: SubraceRace
  racial_traits(limit: Int = 100, skip: Int, sort: SortFindManyTraitInput): [Trait!]!
  starting_proficiencies: [SubraceStarting_proficiencies]
  url: String
}

type SubraceAbility_bonuses {
  _id: MongoID
  ability_score: SubraceAbility_bonusesAbility_score
  bonus: Float
}

type SubraceAbility_bonusesAbility_score {
  index: String
  name: String
  url: String
}

type SubraceLanguage_options {
  choose: Float
  from: [SubraceLanguage_optionsFrom]
  type: String
}

type SubraceLanguage_optionsFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type SubraceRace {
  index: String
  name: String
  url: String
}

type SubraceStarting_proficiencies {
  _id: MongoID
  index: String
  name: String
  url: String
}

type Trait {
  _id: String!
  desc: [String]
  index: String
  name: String
  parent: TraitParent
  proficiencies(limit: Int = 100, skip: Int, sort: SortFindManyProficiencyInput): [Proficiency!]!
  proficiency_choices: TraitProficiency_choices
  races: [TraitRaces]
  subraces: [TraitSubraces]
  trait_specific: TraitTrait_specific
  url: String
}

type TraitParent {
  index: String
  name: String
  url: String
}

type TraitProficiency_choices {
  choose: Float
  from: [TraitProficiency_choicesFrom]
  type: String
}

type TraitProficiency_choicesFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type TraitRaces {
  _id: MongoID
  index: String
  name: String
  url: String
}

type TraitSubraces {
  _id: MongoID
  index: String
  name: String
  url: String
}

type TraitTrait_specific {
  breath_weapon: TraitTrait_specificBreath_weapon
  damage_type: TraitTrait_specificDamage_type
  spell_options: TraitTrait_specificSpell_options
  subtrait_options: TraitTrait_specificSubtrait_options
}

type TraitTrait_specificBreath_weapon {
  damage: [TraitTrait_specificBreath_weaponDamage]
  dc: TraitTrait_specificBreath_weaponDc
  desc: String
  name: String
  usage: TraitTrait_specificBreath_weaponUsage
}

type TraitTrait_specificBreath_weaponDamage {
  _id: MongoID
  damage_at_character_level: JSON
  damage_type: TraitTrait_specificBreath_weaponDamageDamage_type
}

type TraitTrait_specificBreath_weaponDamageDamage_type {
  index: String
  name: String
  url: String
}

type TraitTrait_specificBreath_weaponDc {
  dc_type: TraitTrait_specificBreath_weaponDcDc_type
  success_type: String
}

type TraitTrait_specificBreath_weaponDcDc_type {
  index: String
  name: String
  url: String
}

type TraitTrait_specificBreath_weaponUsage {
  times: Float
  type: String
}

type TraitTrait_specificDamage_type {
  index: String
  name: String
  url: String
}

type TraitTrait_specificSpell_options {
  choose: Float
  from: [TraitTrait_specificSpell_optionsFrom]
  type: String
}

type TraitTrait_specificSpell_optionsFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type TraitTrait_specificSubtrait_options {
  choose: Float
  from: [TraitTrait_specificSubtrait_optionsFrom]
  type: String
}

type TraitTrait_specificSubtrait_optionsFrom {
  _id: MongoID
  index: String
  name: String
  url: String
}

type User {
  character: [Float!]!
  createdAt: DateTime!
  email: String!
  name: String!
  updatedAt: DateTime!
}

input UserObject {
  email: String!
  name: String!
}

type UserResponse {
  errors: String
  user: User
}

type WeaponProperty {
  _id: String!
  desc: [String]
  index: String
  name: String
  url: String
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  LOCALSPELLBOOK @join__graph(name: "localspellbook" url: "http://localhost:4000/graphql")
  _5EDNDAPI @join__graph(name: "5edndapi" url: "https://www.dnd5eapi.co/graphql")
}
